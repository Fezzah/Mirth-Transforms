<channel version="3.4.1">
  <id>6546423b-30d4-46dc-92d7-3e651a542a42</id>
  <nextMetaDataId>2</nextMetaDataId>
  <name>Datica OCI - HL7 ORM to JSON Transform</name>
  <description>Transform ORM HL7 to JSON</description>
  <enabled>true</enabled>
  <lastModified>
    <time>1512397997417</time>
    <timezone>America/New_York</timezone>
  </lastModified>
  <revision>2</revision>
  <sourceConnector version="3.4.1">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.vm.VmReceiverProperties" version="3.4.1">
      <pluginProperties/>
      <sourceConnectorProperties version="3.4.1">
        <responseVariable>None</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
    </properties>
    <transformer version="3.4.1">
      <steps>
        <step>
          <sequenceNumber>0</sequenceNumber>
          <name>Create the JSON wrapper</name>
          <script>// Wrapper for the JSON object that we&apos;ll construct
var hl7JSON = {
	&quot;message_type&quot; : &quot;ORM&quot;,
	&quot;content&quot; : {}
};

// Save the wrapper in a channelMap variable for later usage
channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// Wrapper for the JSON object that we&apos;ll construct
var hl7JSON = {
	&quot;message_type&quot; : &quot;ORM&quot;,
	&quot;content&quot; : {}
};

// Save the wrapper in a channelMap variable for later usage
channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>1</sequenceNumber>
          <name>MSH (Message Header) Segment</name>
          <script>// MSH
var msh = {};

// MSH.1, fieldSeparator
if (msg[&apos;MSH&apos;][&apos;MSH.1&apos;][&apos;MSH.1.1&apos;].toString() != &quot;&quot;) {msh.fieldSeparator = msg[&apos;MSH&apos;][&apos;MSH.1&apos;][&apos;MSH.1.1&apos;]; }

// MSH.2, encodingCharacters
if (msg[&apos;MSH&apos;][&apos;MSH.2&apos;][&apos;MSH.2.1&apos;].toString() != &quot;&quot;) {msh.fieldSeparator = msg[&apos;MSH&apos;][&apos;MSH.2&apos;][&apos;MSH.2.1&apos;]; }

// MSH.3, sendingApplication
msh.sendingApplication = {};
if (msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;].toString() != &quot;&quot;) {msh.sendingApplication.namespaceId = msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.2&apos;].toString() != &quot;&quot;) {msh.sendingApplication.universalId = msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.3&apos;].toString() != &quot;&quot;) {msh.sendingApplication.universalIdType = msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.3&apos;]; }
if (Object.keys(msh.sendingApplication).length == 0) {
	delete msh.sendingApplication;
}

// MSH.4, sendingFacility
msh.sendingFacility = {};
if (msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &quot;&quot;) {msh.sendingFacility.namespaceId = msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.2&apos;].toString() != &quot;&quot;) {msh.sendingFacility.universalId = msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.3&apos;].toString() != &quot;&quot;) {msh.sendingFacility.universalIdType = msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.3&apos;]; }
if (Object.keys(msh.sendingFacility).length == 0) {
	delete msh.sendingFacility;
}

// MSH.5, receivingApplication
msh.receivingApplication = {};
if (msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;].toString() != &quot;&quot;) {msh.receivingApplication.namespaceId = msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.2&apos;].toString() != &quot;&quot;) {msh.receivingApplication.universalId = msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.3&apos;].toString() != &quot;&quot;) {msh.receivingApplication.universalIdType = msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.3&apos;]; }
if (Object.keys(msh.receivingApplication).length == 0) {
	delete msh.receivingApplication;
}

// MSH.6, receivingFacility
msh.receivingFacility = {};
if (msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;].toString() != &quot;&quot;) {msh.receivingFacility.namespaceId = msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.2&apos;].toString() != &quot;&quot;) {msh.receivingFacility.universalId = msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.3&apos;].toString() != &quot;&quot;) {msh.receivingFacility.universalIdType = msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.3&apos;]; }
if (Object.keys(msh.receivingFacility).length == 0) {
	delete msh.receivingFacility;
}

// MSH.7, dateTimeOfMessage
if (msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString() != &quot;&quot;) {msh.dateTimeOfMessage = msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;]; }

// MSH.8, security
if (msg[&apos;MSH&apos;][&apos;MSH.8&apos;][&apos;MSH.8.1&apos;].toString() != &quot;&quot;) {msh.security = msg[&apos;MSH&apos;][&apos;MSH.8&apos;][&apos;MSH.8.1&apos;]; }

// MSH.9, messageType
msh.messageType = {};
if (msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;].toString() != &quot;&quot;) {msh.messageType.messageType = msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() != &quot;&quot;) {msh.messageType.triggerEvent = msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;]; }
if (Object.keys(msh.messageType).length == 0) {
	delete msh.messageType;
}

// MSH.10, messageControlID
if (msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString() != &quot;&quot;) {msh.messageControlID = msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;]; }

// MSH.11, processingID
msh.processingID = {};
if (msg[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.1&apos;].toString() != &quot;&quot;) {msh.processingID.processingID = msg[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.2&apos;].toString() != &quot;&quot;) {msh.processingID.processingMode = msg[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.2&apos;]; }
if (Object.keys(msh.processingID).length == 0) {
	delete msh.processingID;
}

// MSH.12, versionID
if (msg[&apos;MSH&apos;][&apos;MSH.12&apos;][&apos;MSH.12.1&apos;].toString() != &quot;&quot;) {msh.versionID = msg[&apos;MSH&apos;][&apos;MSH.12&apos;][&apos;MSH.12.1&apos;]; }

// MSH.13, sequenceNumber
if (msg[&apos;MSH&apos;][&apos;MSH.13&apos;][&apos;MSH.13.1&apos;].toString() != &quot;&quot;) {msh.sequenceNumber = msg[&apos;MSH&apos;][&apos;MSH.13&apos;][&apos;MSH.13.1&apos;]; }

// MSH.14, continuationPointer
if (msg[&apos;MSH&apos;][&apos;MSH.14&apos;][&apos;MSH.14.1&apos;].toString() != &quot;&quot;) {msh.continuationPointer = msg[&apos;MSH&apos;][&apos;MSH.14&apos;][&apos;MSH.14.1&apos;]; }

// MSH.15, acceptAcknowledgmentType
if (msg[&apos;MSH&apos;][&apos;MSH.15&apos;][&apos;MSH.15.1&apos;].toString() != &quot;&quot;) {msh.acceptAcknowledgmentType = msg[&apos;MSH&apos;][&apos;MSH.15&apos;][&apos;MSH.15.1&apos;]; }

// MSH.16, applicationAcknowledgmentType
if (msg[&apos;MSH&apos;][&apos;MSH.16&apos;][&apos;MSH.16.1&apos;].toString() != &quot;&quot;) {msh.applicationAcknowledgmentType = msg[&apos;MSH&apos;][&apos;MSH.16&apos;][&apos;MSH.16.1&apos;]; }

// MSH.17, countryCode
if (msg[&apos;MSH&apos;][&apos;MSH.17&apos;][&apos;MSH.17.1&apos;].toString() != &quot;&quot;) {msh.countryCode = msg[&apos;MSH&apos;][&apos;MSH.17&apos;][&apos;MSH.17.1&apos;]; }

// MSH.18, characterSet
msh.characterSet = [];
for each (field in msg[&apos;MSH&apos;][&apos;MSH.18&apos;]) {
	if (field[&apos;MSH.18.1&apos;].toString() != &quot;&quot;) {msh.characterSet.push(field[&apos;MSH.18.1&apos;]); }
}
if (msh.characterSet.length == 0) {
	delete msh.characterSet;
}

// MSH.19, principalLanguageOfMessage
msh.principalLanguageOfMessage = {};
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.1&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.id = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.2&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.text = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.3&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.codingSystem = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.3&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.4&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.altId = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.4&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.5&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.altText = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.5&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.6&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.altCodingSystem = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.6&apos;]; }
if (Object.keys(msh.principalLanguageOfMessage).length == 0) {
	delete msh.principalLanguageOfMessage;
}

// Optional: save a copy of the completed MSH segment for reference later
//channelMap.put(&quot;msh&quot;, msh); // uncomment to save

// If it has content, add the MSH segment to the hl7JSON object
if (msh &amp;&amp; Object.keys(msh).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.MSH = msh;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// MSH
var msh = {};

// MSH.1, fieldSeparator
if (msg[&apos;MSH&apos;][&apos;MSH.1&apos;][&apos;MSH.1.1&apos;].toString() != &quot;&quot;) {msh.fieldSeparator = msg[&apos;MSH&apos;][&apos;MSH.1&apos;][&apos;MSH.1.1&apos;]; }

// MSH.2, encodingCharacters
if (msg[&apos;MSH&apos;][&apos;MSH.2&apos;][&apos;MSH.2.1&apos;].toString() != &quot;&quot;) {msh.fieldSeparator = msg[&apos;MSH&apos;][&apos;MSH.2&apos;][&apos;MSH.2.1&apos;]; }

// MSH.3, sendingApplication
msh.sendingApplication = {};
if (msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;].toString() != &quot;&quot;) {msh.sendingApplication.namespaceId = msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.2&apos;].toString() != &quot;&quot;) {msh.sendingApplication.universalId = msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.3&apos;].toString() != &quot;&quot;) {msh.sendingApplication.universalIdType = msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.3&apos;]; }
if (Object.keys(msh.sendingApplication).length == 0) {
	delete msh.sendingApplication;
}

// MSH.4, sendingFacility
msh.sendingFacility = {};
if (msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &quot;&quot;) {msh.sendingFacility.namespaceId = msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.2&apos;].toString() != &quot;&quot;) {msh.sendingFacility.universalId = msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.3&apos;].toString() != &quot;&quot;) {msh.sendingFacility.universalIdType = msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.3&apos;]; }
if (Object.keys(msh.sendingFacility).length == 0) {
	delete msh.sendingFacility;
}

// MSH.5, receivingApplication
msh.receivingApplication = {};
if (msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;].toString() != &quot;&quot;) {msh.receivingApplication.namespaceId = msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.2&apos;].toString() != &quot;&quot;) {msh.receivingApplication.universalId = msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.3&apos;].toString() != &quot;&quot;) {msh.receivingApplication.universalIdType = msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.3&apos;]; }
if (Object.keys(msh.receivingApplication).length == 0) {
	delete msh.receivingApplication;
}

// MSH.6, receivingFacility
msh.receivingFacility = {};
if (msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;].toString() != &quot;&quot;) {msh.receivingFacility.namespaceId = msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.2&apos;].toString() != &quot;&quot;) {msh.receivingFacility.universalId = msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.3&apos;].toString() != &quot;&quot;) {msh.receivingFacility.universalIdType = msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.3&apos;]; }
if (Object.keys(msh.receivingFacility).length == 0) {
	delete msh.receivingFacility;
}

// MSH.7, dateTimeOfMessage
if (msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString() != &quot;&quot;) {msh.dateTimeOfMessage = msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;]; }

// MSH.8, security
if (msg[&apos;MSH&apos;][&apos;MSH.8&apos;][&apos;MSH.8.1&apos;].toString() != &quot;&quot;) {msh.security = msg[&apos;MSH&apos;][&apos;MSH.8&apos;][&apos;MSH.8.1&apos;]; }

// MSH.9, messageType
msh.messageType = {};
if (msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;].toString() != &quot;&quot;) {msh.messageType.messageType = msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() != &quot;&quot;) {msh.messageType.triggerEvent = msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;]; }
if (Object.keys(msh.messageType).length == 0) {
	delete msh.messageType;
}

// MSH.10, messageControlID
if (msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString() != &quot;&quot;) {msh.messageControlID = msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;]; }

// MSH.11, processingID
msh.processingID = {};
if (msg[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.1&apos;].toString() != &quot;&quot;) {msh.processingID.processingID = msg[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.2&apos;].toString() != &quot;&quot;) {msh.processingID.processingMode = msg[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.2&apos;]; }
if (Object.keys(msh.processingID).length == 0) {
	delete msh.processingID;
}

// MSH.12, versionID
if (msg[&apos;MSH&apos;][&apos;MSH.12&apos;][&apos;MSH.12.1&apos;].toString() != &quot;&quot;) {msh.versionID = msg[&apos;MSH&apos;][&apos;MSH.12&apos;][&apos;MSH.12.1&apos;]; }

// MSH.13, sequenceNumber
if (msg[&apos;MSH&apos;][&apos;MSH.13&apos;][&apos;MSH.13.1&apos;].toString() != &quot;&quot;) {msh.sequenceNumber = msg[&apos;MSH&apos;][&apos;MSH.13&apos;][&apos;MSH.13.1&apos;]; }

// MSH.14, continuationPointer
if (msg[&apos;MSH&apos;][&apos;MSH.14&apos;][&apos;MSH.14.1&apos;].toString() != &quot;&quot;) {msh.continuationPointer = msg[&apos;MSH&apos;][&apos;MSH.14&apos;][&apos;MSH.14.1&apos;]; }

// MSH.15, acceptAcknowledgmentType
if (msg[&apos;MSH&apos;][&apos;MSH.15&apos;][&apos;MSH.15.1&apos;].toString() != &quot;&quot;) {msh.acceptAcknowledgmentType = msg[&apos;MSH&apos;][&apos;MSH.15&apos;][&apos;MSH.15.1&apos;]; }

// MSH.16, applicationAcknowledgmentType
if (msg[&apos;MSH&apos;][&apos;MSH.16&apos;][&apos;MSH.16.1&apos;].toString() != &quot;&quot;) {msh.applicationAcknowledgmentType = msg[&apos;MSH&apos;][&apos;MSH.16&apos;][&apos;MSH.16.1&apos;]; }

// MSH.17, countryCode
if (msg[&apos;MSH&apos;][&apos;MSH.17&apos;][&apos;MSH.17.1&apos;].toString() != &quot;&quot;) {msh.countryCode = msg[&apos;MSH&apos;][&apos;MSH.17&apos;][&apos;MSH.17.1&apos;]; }

// MSH.18, characterSet
msh.characterSet = [];
for each (field in msg[&apos;MSH&apos;][&apos;MSH.18&apos;]) {
	if (field[&apos;MSH.18.1&apos;].toString() != &quot;&quot;) {msh.characterSet.push(field[&apos;MSH.18.1&apos;]); }
}
if (msh.characterSet.length == 0) {
	delete msh.characterSet;
}

// MSH.19, principalLanguageOfMessage
msh.principalLanguageOfMessage = {};
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.1&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.id = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.2&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.text = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.3&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.codingSystem = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.3&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.4&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.altId = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.4&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.5&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.altText = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.5&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.6&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.altCodingSystem = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.6&apos;]; }
if (Object.keys(msh.principalLanguageOfMessage).length == 0) {
	delete msh.principalLanguageOfMessage;
}

// Optional: save a copy of the completed MSH segment for reference later
//channelMap.put(&quot;msh&quot;, msh); // uncomment to save

// If it has content, add the MSH segment to the hl7JSON object
if (msh &amp;&amp; Object.keys(msh).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.MSH = msh;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>2</sequenceNumber>
          <name>NTE (Notes) Segment</name>
          <script>// NTE
var nte;
var nteGroup = getSegmentsAfter(msg, msg[&apos;MSH&apos;], &apos;NTE&apos;, true);
if (msg[&apos;NTE&apos;].length() &gt; 0) {
	nte = [];
	var index = 0;
	
	for each (seg in nteGroup) {
		nte[index] = {};
		
		// NTE.1, setId
		if (seg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { nte[index].setId = seg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }

		// NTE.2, sourceOfComment
		if (seg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { nte[index].sourceOfComment = seg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }

		// NTE.3, comment
		nte[index].comment = [];
		for each (field in seg[&apos;NTE.3&apos;]) {
			var block = {};
			if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
				nte[index].comment.push(field[&apos;NTE.3.1&apos;]);
			}
		}
		if (nte[index].comment.length == 0) {
			delete nte[index].comment;
		}

		// clean up NTE and increment index
		if (Object.keys(nte[index]).length == 0) {
			delete nte[index];
		} else {
			index++;
		}
	}
}

// Optional: save a copy of the completed NTE segment for reference later
//channelMap.put(&quot;nte&quot;, nte); // uncomment to save

// If it has content, add the MSH segment to the hl7JSON object
if (msh &amp;&amp; Object.keys(msh).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.NTE = nte;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// NTE
var nte;
var nteGroup = getSegmentsAfter(msg, msg[&apos;MSH&apos;], &apos;NTE&apos;, true);
if (msg[&apos;NTE&apos;].length() &gt; 0) {
	nte = [];
	var index = 0;
	
	for each (seg in nteGroup) {
		nte[index] = {};
		
		// NTE.1, setId
		if (seg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { nte[index].setId = seg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }

		// NTE.2, sourceOfComment
		if (seg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { nte[index].sourceOfComment = seg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }

		// NTE.3, comment
		nte[index].comment = [];
		for each (field in seg[&apos;NTE.3&apos;]) {
			var block = {};
			if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
				nte[index].comment.push(field[&apos;NTE.3.1&apos;]);
			}
		}
		if (nte[index].comment.length == 0) {
			delete nte[index].comment;
		}

		// clean up NTE and increment index
		if (Object.keys(nte[index]).length == 0) {
			delete nte[index];
		} else {
			index++;
		}
	}
}

// Optional: save a copy of the completed NTE segment for reference later
//channelMap.put(&quot;nte&quot;, nte); // uncomment to save

// If it has content, add the MSH segment to the hl7JSON object
if (msh &amp;&amp; Object.keys(msh).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.NTE = nte;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>3</sequenceNumber>
          <name>PID (Patient Identification), PD1 (Patient Demographic), and related NTE (Note) Segments</name>
          <script>// PID (standalone)
var pid;
if (msg[&apos;PID&apos;].length() &gt; 0) {
	pid = [];
	var index = 0;
	for each (seg in msg.PID) {
		pid[index] = {};

		// PID.1, setId
		if (seg[&apos;PID.1&apos;][&apos;PID.1.1&apos;].toString() != &quot;&quot;) { pid[index].setId = seg[&apos;PID.1&apos;][&apos;PID.1.1&apos;]; }

		// PID.2, externalId
		pid[index].externalId = {};
		if (seg[&apos;PID.2&apos;][&apos;PID.2.1&apos;].toString() != &quot;&quot;) { pid[index].externalId.id = seg[&apos;PID.2&apos;][&apos;PID.2.1&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.2&apos;].toString() != &quot;&quot;) { pid[index].externalId.identifierCheckDigit = seg[&apos;PID.2&apos;][&apos;PID.2.2&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.3&apos;].toString() != &quot;&quot;) { pid[index].externalId.codeIdentifyingCheckDigitScheme = seg[&apos;PID.2&apos;][&apos;PID.2.3&apos;]; }
		pid[index].externalId.assigningAuthority = {};
		if (seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.1&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningAuthority.namespaceId = seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.1&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.2&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningAuthority.universalId = seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.2&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.3&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningAuthority.universalIdType = seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.3&apos;]; }
		if (Object.keys(pid[index].externalId.assigningAuthority).length == 0) {
			if (seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningAuthority.namespaceId = seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;]; }
			else delete pid[index].externalId.assigningAuthority;
		}
		if (seg[&apos;PID.2&apos;][&apos;PID.2.5&apos;].toString() != &quot;&quot;) { pid[index].externalId.idTypeCode = seg[&apos;PID.2&apos;][&apos;PID.2.5&apos;]; }
		pid[index].externalId.assigningFacility = {};
		if (seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.1&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningFacility.namespaceId = seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.1&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.2&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningFacility.universalId = seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.2&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.3&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningFacility.universalIdType = seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.3&apos;]; }
		if (Object.keys(pid[index].externalId.assigningFacility).length == 0) {
			if (seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningFacility.namespaceId = seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;]; }
			else delete pid[index].externalId.assigningFacility;
		}
		if (Object.keys(pid[index].externalId).length == 0) {
			delete pid[index].externalId;
		}

		// PID.3, internalId
		pid[index].internalId = [];
		for each (field in seg[&apos;PID.3&apos;]) {
			var block = {};
			if (field[&apos;PID.3.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PID.3.1&apos;]; }
			if (field[&apos;PID.3.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PID.3.2&apos;]; }
			if (field[&apos;PID.3.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PID.3.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;PID.3.4&apos;][&apos;PID.3.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.3.4&apos;][&apos;PID.3.4.1&apos;]; }
			if (field[&apos;PID.3.4&apos;][&apos;PID.3.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PID.3.4&apos;][&apos;PID.3.4.2&apos;]; }
			if (field[&apos;PID.3.4&apos;][&apos;PID.3.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PID.3.4&apos;][&apos;PID.3.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;PID.3.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.3.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;PID.3.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PID.3.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;PID.3.6&apos;][&apos;PID.3.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.3.6&apos;][&apos;PID.3.6.1&apos;]; }
			if (field[&apos;PID.3.6&apos;][&apos;PID.3.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PID.3.6&apos;][&apos;PID.3.6.2&apos;]; }
			if (field[&apos;PID.3.6&apos;][&apos;PID.3.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PID.3.6&apos;][&apos;PID.3.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;PID.3.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.3.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				pid[index].internalId.push(block);
			}
		}
		if (pid[index].internalId.length == 0) {
			delete pid[index].internalId;
		}

		// PID.4, alternateId
		pid[index].alternateId = [];
		for each (field in seg[&apos;PID.4&apos;]) {
			var block = {};
			if (field[&apos;PID.4.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PID.4.1&apos;]; }
			if (field[&apos;PID.4.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PID.4.2&apos;]; }
			if (field[&apos;PID.4.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PID.4.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;PID.4.4&apos;][&apos;PID.4.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.4.4&apos;][&apos;PID.4.4.1&apos;]; }
			if (field[&apos;PID.4.4&apos;][&apos;PID.4.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PID.4.4&apos;][&apos;PID.4.4.2&apos;]; }
			if (field[&apos;PID.4.4&apos;][&apos;PID.4.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PID.4.4&apos;][&apos;PID.4.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;PID.4.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.4.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;PID.4.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PID.4.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;PID.4.6&apos;][&apos;PID.4.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.4.6&apos;][&apos;PID.4.6.1&apos;]; }
			if (field[&apos;PID.4.6&apos;][&apos;PID.4.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PID.4.6&apos;][&apos;PID.4.6.2&apos;]; }
			if (field[&apos;PID.4.6&apos;][&apos;PID.4.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PID.4.6&apos;][&apos;PID.4.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;PID.4.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.4.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				pid[index].alternateId.push(block);
			}
		}
		if (pid[index].alternateId.length == 0) {
			delete pid[index].alternateId;
		}

		// PID.5, patientName
		pid[index].patientName = [];
		for each (field in seg[&apos;PID.5&apos;]) {
			var block = {};
			if (field[&apos;PID.5.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PID.5.1&apos;]; }
			if (field[&apos;PID.5.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PID.5.2&apos;]; }
			if (field[&apos;PID.5.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PID.5.3&apos;]; }
			if (field[&apos;PID.5.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PID.5.4&apos;]; }
			if (field[&apos;PID.5.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PID.5.5&apos;]; }
			if (field[&apos;PID.5.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PID.5.6&apos;]; }
			if (field[&apos;PID.5.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PID.5.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].patientName.push(block);
			}	
		}
		if (pid[index].patientName.length == 0) {
			delete pid[index].patientName;
		}

		// PID.6, mothersMaidenName
		pid[index].mothersMaidenName = {};
		if (seg[&apos;PID.6&apos;][&apos;PID.6.1&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.lastName = seg[&apos;PID.6&apos;][&apos;PID.6.1&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.2&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.firstName = seg[&apos;PID.6&apos;][&apos;PID.6.2&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.3&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.middleInitOrName = seg[&apos;PID.6&apos;][&apos;PID.6.3&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.4&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.suffix = seg[&apos;PID.6&apos;][&apos;PID.6.4&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.5&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.prefix = seg[&apos;PID.6&apos;][&apos;PID.6.5&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.6&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.degree = seg[&apos;PID.6&apos;][&apos;PID.6.6&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.7&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.nameTypeCode = seg[&apos;PID.6&apos;][&apos;PID.6.7&apos;]; }
		if (Object.keys(pid[index].mothersMaidenName).length == 0) {
			delete pid[index].mothersMaidenName;
		}

		// PID.7, dateTimeBirth
		if (seg[&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() != &quot;&quot;) {pid[index].dateTimeBirth = seg[&apos;PID.7&apos;][&apos;PID.7.1&apos;]; }
		
		// PID.8, sex
		if (seg[&apos;PID.8&apos;][&apos;PID.8.1&apos;].toString() != &quot;&quot;) {pid[index].sex = seg[&apos;PID.8&apos;][&apos;PID.8.1&apos;]; }
		
		// PID.9, alias
		pid[index].alias = [];
		for each (field in seg[&apos;PID.9&apos;]) {
			var block = {};
			if (field[&apos;PID.9.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PID.9.1&apos;]; }
			if (field[&apos;PID.9.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PID.9.2&apos;]; }
			if (field[&apos;PID.9.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PID.9.3&apos;]; }
			if (field[&apos;PID.9.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PID.9.4&apos;]; }
			if (field[&apos;PID.9.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PID.9.5&apos;]; }
			if (field[&apos;PID.9.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PID.9.6&apos;]; }
			if (field[&apos;PID.9.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PID.9.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].alias.push(block);
			}	
		}
		if (pid[index].alias.length == 0) {
			delete pid[index].alias;
		}

		// PID.10, race
		if (seg[&apos;PID.10&apos;][&apos;PID.10.1&apos;].toString() != &quot;&quot;) {pid[index].race = seg[&apos;PID.10&apos;][&apos;PID.10.1&apos;]; }
		
		// PID.11, address
		pid[index].address = [];
		for each (field in seg[&apos;PID.11&apos;]) {
			var block = {};
			if (field[&apos;PID.11.1&apos;].toString() != &quot;&quot;) { block.streetAddress = field[&apos;PID.11.1&apos;]; }
			if (field[&apos;PID.11.2&apos;].toString() != &quot;&quot;) { block.otherDesignation = field[&apos;PID.11.2&apos;]; }
			if (field[&apos;PID.11.3&apos;].toString() != &quot;&quot;) { block.city = field[&apos;PID.11.3&apos;]; }
			if (field[&apos;PID.11.4&apos;].toString() != &quot;&quot;) { block.stateOrProvince = field[&apos;PID.11.4&apos;]; }
			if (field[&apos;PID.11.5&apos;].toString() != &quot;&quot;) { block.zip = field[&apos;PID.11.5&apos;]; }
			if (field[&apos;PID.11.6&apos;].toString() != &quot;&quot;) { block.country = field[&apos;PID.11.6&apos;]; }
			if (field[&apos;PID.11.7&apos;].toString() != &quot;&quot;) { block.addressType = field[&apos;PID.11.7&apos;]; }
			if (field[&apos;PID.11.8&apos;].toString() != &quot;&quot;) { block.otherGeographicDesignation = field[&apos;PID.11.8&apos;]; }
			if (field[&apos;PID.11.9&apos;].toString() != &quot;&quot;) { block.countyOrParishCode = field[&apos;PID.11.9&apos;]; }
			if (field[&apos;PID.11.10&apos;].toString() != &quot;&quot;) { block.censusTract = field[&apos;PID.11.10&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].address.push(block);
			}
		}
		if (pid[index].address.length == 0) {
			delete pid[index].address;
		}

		// PID.12, countyCode
		if (seg[&apos;PID.12&apos;][&apos;PID.12.1&apos;].toString() != &quot;&quot;) {pid[index].countyCode = seg[&apos;PID.12&apos;][&apos;PID.12.1&apos;]; }
		
		// PID.13, homePhone
		pid[index].homePhone = [];
		for each (field in seg[&apos;PID.13&apos;]) {
			var block = {};
			if (field[&apos;PID.13.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;PID.13.1&apos;]; }
			if (field[&apos;PID.13.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;PID.13.2&apos;]; }
			if (field[&apos;PID.13.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;PID.13.3&apos;]; }
			if (field[&apos;PID.13.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;PID.13.4&apos;]; }
			if (field[&apos;PID.13.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;PID.13.5&apos;]; }
			if (field[&apos;PID.13.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;PID.13.6&apos;]; }
			if (field[&apos;PID.13.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;PID.13.7&apos;]; }
			if (field[&apos;PID.13.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;PID.13.8&apos;]; }
			if (field[&apos;PID.13.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;PID.13.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].homePhone.push(block);
			}
		}
		if (pid[index].homePhone.length == 0) {
			delete pid[index].homePhone;
		}

		// PID.14, businessPhone
		pid[index].businessPhone = [];
		for each (field in seg[&apos;PID.14&apos;]) {
			var block = {};
			if (field[&apos;PID.14.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;PID.14.1&apos;]; }
			if (field[&apos;PID.14.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;PID.14.2&apos;]; }
			if (field[&apos;PID.14.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;PID.14.3&apos;]; }
			if (field[&apos;PID.14.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;PID.14.4&apos;]; }
			if (field[&apos;PID.14.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;PID.14.5&apos;]; }
			if (field[&apos;PID.14.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;PID.14.6&apos;]; }
			if (field[&apos;PID.14.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;PID.14.7&apos;]; }
			if (field[&apos;PID.14.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;PID.14.8&apos;]; }
			if (field[&apos;PID.14.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;PID.14.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].businessPhone.push(block);
			}
		}
		if (pid[index].businessPhone.length == 0) {
			delete pid[index].businessPhone;
		}

		// PID.15, primaryLanguage
		pid[index].primaryLanguage = {};
		if (seg[&apos;PID.15&apos;][&apos;PID.15.1&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.id = seg[&apos;PID.15&apos;][&apos;PID.15.1&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.2&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.text = seg[&apos;PID.15&apos;][&apos;PID.15.2&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.3&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.codingSystem = seg[&apos;PID.15&apos;][&apos;PID.15.3&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.4&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.altId = seg[&apos;PID.15&apos;][&apos;PID.15.4&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.5&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.altText = seg[&apos;PID.15&apos;][&apos;PID.15.5&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.6&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.altCodingSystem = seg[&apos;PID.15&apos;][&apos;PID.15.6&apos;]; }
		if (Object.keys(pid[index].primaryLanguage).length == 0) {
			delete pid[index].primaryLanguage;
		}

		// PID.16, maritalStatus
		if (seg[&apos;PID.16&apos;][&apos;PID.16.1&apos;].toString() != &quot;&quot;) {pid[index].maritalStatus = seg[&apos;PID.16&apos;][&apos;PID.16.1&apos;]; }
		
		// PID.17, religion
		if (seg[&apos;PID.17&apos;][&apos;PID.17.1&apos;].toString() != &quot;&quot;) {pid[index].religion = seg[&apos;PID.17&apos;][&apos;PID.17.1&apos;]; }

		// PID.18, patientAccountNumber
		pid[index].patientAccountNumber = {};
		if (seg[&apos;PID.18&apos;][&apos;PID.18.1&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.id = seg[&apos;PID.18&apos;][&apos;PID.18.1&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.2&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.identifierCheckDigit = seg[&apos;PID.18&apos;][&apos;PID.18.2&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.3&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.codeIdentifyingCheckDigitScheme = seg[&apos;PID.18&apos;][&apos;PID.18.3&apos;]; }
		pid[index].patientAccountNumber.assigningAuthority = {};
		if (seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.1&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningAuthority.namespaceId = seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.1&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.2&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningAuthority.universalId = seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.2&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.3&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningAuthority.universalIdType = seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.3&apos;]; }
		if (Object.keys(pid[index].patientAccountNumber.assigningAuthority).length == 0) {
			if (seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningAuthority.namespaceId = seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;]; }
			else delete pid[index].patientAccountNumber.assigningAuthority;
		}
		if (seg[&apos;PID.18&apos;][&apos;PID.18.5&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.idTypeCode = seg[&apos;PID.18&apos;][&apos;PID.18.5&apos;]; }
		pid[index].patientAccountNumber.assigningFacility = {};
		if (seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.1&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningFacility.namespaceId = seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.1&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.2&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningFacility.universalId = seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.2&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.3&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningFacility.universalIdType = seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.3&apos;]; }
		if (Object.keys(pid[index].patientAccountNumber.assigningFacility).length == 0) {
			if (seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningFacility.namespaceId = seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;]; }
			else delete pid[index].patientAccountNumber.assigningFacility;
		}
		if (Object.keys(pid[index].patientAccountNumber).length == 0) {
			delete pid[index].patientAccountNumber;
		}

		// PID.19, ssn
		if (seg[&apos;PID.19&apos;][&apos;PID.19.1&apos;].toString() != &quot;&quot;) {pid[index].ssn = seg[&apos;PID.19&apos;][&apos;PID.19.1&apos;]; }
		
		// PID.20, driversLicenseNumber
		pid[index].driversLicenseNumber = {};
		if (seg[&apos;PID.20&apos;][&apos;PID.20.1&apos;].toString() != &quot;&quot;) {pid[index].driversLicenseNumber.licenseNumber = seg[&apos;PID.20&apos;][&apos;PID.20.1&apos;]; }
		if (seg[&apos;PID.20&apos;][&apos;PID.20.2&apos;].toString() != &quot;&quot;) {pid[index].driversLicenseNumber.issuingStateProvinceCountry = seg[&apos;PID.20&apos;][&apos;PID.20.2&apos;]; }
		if (seg[&apos;PID.20&apos;][&apos;PID.20.3&apos;].toString() != &quot;&quot;) {pid[index].driversLicenseNumber.expirationDate = seg[&apos;PID.20&apos;][&apos;PID.20.3&apos;]; }
		if (Object.keys(pid[index].driversLicenseNumber).length == 0) {
			delete pid[index].driversLicenseNumber;
		}

		// PID.21, mothersId
		pid[index].mothersId = [];
		for each (field in seg[&apos;PID.21&apos;]) {
			var block = {};
			if (field[&apos;PID.21.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PID.21.1&apos;]; }
			if (field[&apos;PID.21.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PID.21.2&apos;]; }
			if (field[&apos;PID.21.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PID.21.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;PID.21.4&apos;][&apos;PID.21.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.21.4&apos;][&apos;PID.21.4.1&apos;]; }
			if (field[&apos;PID.21.4&apos;][&apos;PID.21.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PID.21.4&apos;][&apos;PID.21.4.2&apos;]; }
			if (field[&apos;PID.21.4&apos;][&apos;PID.21.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PID.21.4&apos;][&apos;PID.21.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;PID.21.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.21.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;PID.21.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PID.21.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;PID.21.6&apos;][&apos;PID.21.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.21.6&apos;][&apos;PID.21.6.1&apos;]; }
			if (field[&apos;PID.21.6&apos;][&apos;PID.21.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PID.21.6&apos;][&apos;PID.21.6.2&apos;]; }
			if (field[&apos;PID.21.6&apos;][&apos;PID.21.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PID.21.6&apos;][&apos;PID.21.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;PID.21.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.21.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				pid[index].mothersId.push(block);
			}
		}
		if (pid[index].mothersId.length == 0) {
			delete pid[index].mothersId;
		}

		// PID.22, ethnicGroup
		if (seg[&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString() != &quot;&quot;) {pid[index].ethnicGroup = seg[&apos;PID.22&apos;][&apos;PID.22.1&apos;]; }
		
		// PID.23, birthPlace
		if (seg[&apos;PID.23&apos;][&apos;PID.23.1&apos;].toString() != &quot;&quot;) {pid[index].birthPlace = seg[&apos;PID.23&apos;][&apos;PID.23.1&apos;]; }
		
		// PID.24, multipleBirthIndicator
		if (seg[&apos;PID.24&apos;][&apos;PID.24.1&apos;].toString() != &quot;&quot;) {pid[index].multipleBirthIndicator = seg[&apos;PID.24&apos;][&apos;PID.24.1&apos;]; }
		
		// PID.25, birthOrder
		if (seg[&apos;PID.25&apos;][&apos;PID.25.1&apos;].toString() != &quot;&quot;) {pid[index].birthOrder = seg[&apos;PID.25&apos;][&apos;PID.25.1&apos;]; }
		
		// PID.26, citizenship
		pid[index].citizenship = [];
		for each (field in seg[&apos;PID.26&apos;]) {
			if (field[&apos;PID.26.1&apos;].toString() != &quot;&quot;) {
				pid[index].citizenship.push(field[&apos;PID.26.1&apos;]);
			}
		}
		if (pid[index].citizenship.length == 0) {
			delete pid[index].citizenship;
		}
		
		// PID.27, veteranStatus
		pid[index].veteranStatus = {};
		if (seg[&apos;PID.27&apos;][&apos;PID.27.1&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.id = seg[&apos;PID.27&apos;][&apos;PID.27.1&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.2&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.text = seg[&apos;PID.27&apos;][&apos;PID.27.2&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.3&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.codingSystem = seg[&apos;PID.27&apos;][&apos;PID.27.3&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.4&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.altId = seg[&apos;PID.27&apos;][&apos;PID.27.4&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.5&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.altText = seg[&apos;PID.27&apos;][&apos;PID.27.5&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.6&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.altCodingSystem = seg[&apos;PID.27&apos;][&apos;PID.27.6&apos;]; }
		if (Object.keys(pid[index].veteranStatus).length == 0) {
			delete pid[index].veteranStatus;
		}

		// PID.28, nationality
		pid[index].nationality = {};
		if (seg[&apos;PID.28&apos;][&apos;PID.28.1&apos;].toString() != &quot;&quot;) { pid[index].nationality.id = seg[&apos;PID.28&apos;][&apos;PID.28.1&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.2&apos;].toString() != &quot;&quot;) { pid[index].nationality.text = seg[&apos;PID.28&apos;][&apos;PID.28.2&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.3&apos;].toString() != &quot;&quot;) { pid[index].nationality.codingSystem = seg[&apos;PID.28&apos;][&apos;PID.28.3&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.4&apos;].toString() != &quot;&quot;) { pid[index].nationality.altId = seg[&apos;PID.28&apos;][&apos;PID.28.4&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.5&apos;].toString() != &quot;&quot;) { pid[index].nationality.altText = seg[&apos;PID.28&apos;][&apos;PID.28.5&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.6&apos;].toString() != &quot;&quot;) { pid[index].nationality.altCodingSystem = seg[&apos;PID.28&apos;][&apos;PID.28.6&apos;]; }
		if (Object.keys(pid[index].nationality).length == 0) {
			delete pid[index].nationality;
		}

		// PID.29, deathDateTime
		if (seg[&apos;PID.29&apos;][&apos;PID.29.1&apos;].toString() != &quot;&quot;) {pid[index].deathDateTime = seg[&apos;PID.29&apos;][&apos;PID.29.1&apos;]; }
		
		// PID.30, deathIndicator
		if (seg[&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString() != &quot;&quot;) {pid[index].deathIndicator = seg[&apos;PID.30&apos;][&apos;PID.30.1&apos;]; }

		// PD1 (PID)
		var pd1;
		var pd1Group = getSegmentsAfter(msg,seg,&apos;PD1&apos;,false,[&apos;PV1&apos;]);
		if (pd1Group.length &gt; 0) {
			pid[index].PD1 = [];
			var indexPD1 = 0;
			for each (pd1Seg in pd1Group) {
				pid[index].PD1[indexPD1] = {};

				// PD1.1, livingDependency
				pid[index].PD1[indexPD1].livingDependency = [];
				for each (field in pd1Seg[&apos;PD1.1&apos;]) {
					if (field[&apos;PD1.1.1&apos;].toString() != &quot;&quot;) {
						pid[index].PD1[indexPD1].livingDependency.push(field[&apos;PD1.1.1&apos;]);
					}
				}
				if (pid[index].PD1[indexPD1].livingDependency.length == 0) {
					delete pid[index].PD1[indexPD1].livingDependency;
				}
				
				// PD1.2, livingArrangement
				if (pd1Seg[&apos;PD1.2&apos;][&apos;PD1.2.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].livingArrangement = pd1Seg[&apos;PD1.2&apos;][&apos;PD1.2.1&apos;]; }

				// PD1.3, patientPrimaryFacility
				pid[index].PD1[indexPD1].patientPrimaryFacility = [];
				for each (field in pd1Seg[&apos;PD1.3&apos;]) {
					var block = {};
					if (field[&apos;PD1.3.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;PD1.3.1&apos;]; }
					if (field[&apos;PD1.3.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;PD1.3.2&apos;]; }
					if (field[&apos;PD1.3.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;PD1.3.3&apos;]; }
					if (field[&apos;PD1.3.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PD1.3.4&apos;]; }
					if (field[&apos;PD1.3.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PD1.3.5&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.1&apos;]; }
					if (field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.2&apos;]; }
					if (field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PD1.3.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PD1.3.6&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PD1.3.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PD1.3.7&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.1&apos;]; }
					if (field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.2&apos;]; }
					if (field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PD1.3.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PD1.3.8&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PD1[indexPD1].patientPrimaryFacility.push(block);
					}
				}
				if (pid[index].PD1[indexPD1].patientPrimaryFacility.length == 0) {
					delete pid[index].PD1[indexPD1].patientPrimaryFacility;
				}

				// PD1.4, primaryCareProvider
				pid[index].PD1[indexPD1].primaryCareProvider = [];
				for each (field in pd1Seg[&apos;PD1.4&apos;]) {
					var block = {};
					if (field[&apos;PD1.4.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PD1.4.1&apos;]; }
					if (field[&apos;PD1.4.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PD1.4.2&apos;]; }
					if (field[&apos;PD1.4.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PD1.4.3&apos;]; }
					if (field[&apos;PD1.4.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PD1.4.4&apos;]; }
					if (field[&apos;PD1.4.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PD1.4.5&apos;]; }
					if (field[&apos;PD1.4.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PD1.4.6&apos;]; }
					if (field[&apos;PD1.4.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PD1.4.7&apos;]; }
					if (field[&apos;PD1.4.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PD1.4.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.1&apos;]; }
					if (field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.2&apos;]; }
					if (field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PD1.4.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PD1.4.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PD1.4.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PD1.4.10&apos;]; }
					if (field[&apos;PD1.4.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PD1.4.11&apos;]; }
					if (field[&apos;PD1.4.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PD1.4.12&apos;]; }
					if (field[&apos;PD1.4.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PD1.4.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.1&apos;]; }
					if (field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.2&apos;]; }
					if (field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PD1.4.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PD1.4.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PD1[indexPD1].primaryCareProvider.push(block);
					}
				}
				if (pid[index].PD1[indexPD1].primaryCareProvider.length == 0) {
					delete pid[index].PD1[indexPD1].primaryCareProvider;
				}

				// PD1.5, studentIndicator
				if (pd1Seg[&apos;PD1.5&apos;][&apos;PD1.5.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].studentIndicator = pd1Seg[&apos;PD1.5&apos;][&apos;PD1.5.1&apos;]; }
				
				// PD1.6, handicap
				if (pd1Seg[&apos;PD1.6&apos;][&apos;PD1.6.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].handicap = pd1Seg[&apos;PD1.6&apos;][&apos;PD1.6.1&apos;]; }
				
				// PD1.7, livingWillCode
				if (pd1Seg[&apos;PD1.7&apos;][&apos;PD1.7.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].livingWillCode = pd1Seg[&apos;PD1.7&apos;][&apos;PD1.7.1&apos;]; }
				
				// PD1.8, organDonorCode
				if (pd1Seg[&apos;PD1.8&apos;][&apos;PD1.8.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].organDonorCode = pd1Seg[&apos;PD1.8&apos;][&apos;PD1.8.1&apos;]; }
				
				// PD1.9, separateBill
				if (pd1Seg[&apos;PD1.9&apos;][&apos;PD1.9.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].separateBill = pd1Seg[&apos;PD1.9&apos;][&apos;PD1.9.1&apos;]; }
				
				// PD1.10, duplicatePatient
				pid[index].PD1[indexPD1].duplicatePatient = [];
				for each (field in pd1Seg[&apos;PD1.10&apos;]) {
					var block = {};
					if (field[&apos;PD1.10.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PD1.10.1&apos;]; }
					if (field[&apos;PD1.10.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PD1.10.2&apos;]; }
					if (field[&apos;PD1.10.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PD1.10.3&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.1&apos;]; }
					if (field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.2&apos;]; }
					if (field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PD1.10.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PD1.10.4&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PD1.10.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PD1.10.5&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.1&apos;]; }
					if (field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.2&apos;]; }
					if (field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PD1.10.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PD1.10.6&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PD1[indexPD1].duplicatePatient.push(block);
					}
				}
				if (pid[index].PD1[indexPD1].duplicatePatient.length == 0) {
					delete pid[index].PD1[indexPD1].duplicatePatient;
				}

				// PD1.11, publicityIndicator
				pid[index].PD1[indexPD1].publicityIndicator = {};
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.id = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.1&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.2&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.text = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.2&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.3&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.codingSystem = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.3&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.4&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.altId = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.4&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.5&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.altText = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.5&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.6&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.altCodingSystem = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.6&apos;]; }
				if (Object.keys(pid[index].PD1[indexPD1].publicityIndicator).length == 0) {
					delete pid[index].PD1[indexPD1].publicityIndicator;
				}
				
				// PD1.12, protectionIndicator
				if (pd1Seg[&apos;PD1.12&apos;][&apos;PD1.12.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].protectionIndicator = pd1Seg[&apos;PD1.12&apos;][&apos;PD1.12.1&apos;]; }

				// clean up PD1 and increment index
				if (Object.keys(pid[index].PD1[indexPD1]).length == 0) {
					delete pid[index].PD1[indexPD1];
				} else {
					indexPD1++;
				}
			}
		}

		// NTE
		var nteGroup = getSegmentsAfter(msg,seg,&apos;NTE&apos;,false,[&apos;PV1&apos;]);
		if (nteGroup.length &gt; 0) {
			pid[index].NTE = [];
			var indexNTE = 0;
			for each (nteSeg in nteGroup) {
				pid[index].NTE[indexNTE] = {};

				// NTE.1, setId
				if (nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { pid[index].NTE[indexNTE].setId = nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }

				// NTE.2, sourceOfComment
				if (nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { pid[index].NTE[indexNTE].sourceOfComment = nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }

				// NTE.3, comment
				pid[index].NTE[indexNTE].comment = [];
				for each (field in nteSeg[&apos;NTE.3&apos;]) {
					var block = {};
					if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
						pid[index].NTE[indexNTE].comment.push(field[&apos;NTE.3.1&apos;]);
					}
				}
				if (pid[index].NTE[indexNTE].comment.length == 0) {
					delete pid[index].NTE[indexNTE].comment;
				}

				// clean up NTE and increment index
				if (Object.keys(pid[index].NTE[indexNTE]).length == 0) {
					delete pid[index].NTE[indexNTE];
				} else {
					indexNTE++;
				}
			}
		}

		// clean up PID and increment index
		if (Object.keys(pid[index]).length == 0) {
			delete pid[index];
		} else {
			index++;
		}
	}
}

// Optional: save a copy of the completed PID segment for reference later
//channelMap.put(&quot;pid&quot;, pid); // uncomment to save

// If it has content, add the PID segment to the hl7JSON object
if (pid &amp;&amp; Object.keys(pid).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.PID = pid;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// PID (standalone)
var pid;
if (msg[&apos;PID&apos;].length() &gt; 0) {
	pid = [];
	var index = 0;
	for each (seg in msg.PID) {
		pid[index] = {};

		// PID.1, setId
		if (seg[&apos;PID.1&apos;][&apos;PID.1.1&apos;].toString() != &quot;&quot;) { pid[index].setId = seg[&apos;PID.1&apos;][&apos;PID.1.1&apos;]; }

		// PID.2, externalId
		pid[index].externalId = {};
		if (seg[&apos;PID.2&apos;][&apos;PID.2.1&apos;].toString() != &quot;&quot;) { pid[index].externalId.id = seg[&apos;PID.2&apos;][&apos;PID.2.1&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.2&apos;].toString() != &quot;&quot;) { pid[index].externalId.identifierCheckDigit = seg[&apos;PID.2&apos;][&apos;PID.2.2&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.3&apos;].toString() != &quot;&quot;) { pid[index].externalId.codeIdentifyingCheckDigitScheme = seg[&apos;PID.2&apos;][&apos;PID.2.3&apos;]; }
		pid[index].externalId.assigningAuthority = {};
		if (seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.1&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningAuthority.namespaceId = seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.1&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.2&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningAuthority.universalId = seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.2&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.3&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningAuthority.universalIdType = seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.3&apos;]; }
		if (Object.keys(pid[index].externalId.assigningAuthority).length == 0) {
			if (seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningAuthority.namespaceId = seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;]; }
			else delete pid[index].externalId.assigningAuthority;
		}
		if (seg[&apos;PID.2&apos;][&apos;PID.2.5&apos;].toString() != &quot;&quot;) { pid[index].externalId.idTypeCode = seg[&apos;PID.2&apos;][&apos;PID.2.5&apos;]; }
		pid[index].externalId.assigningFacility = {};
		if (seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.1&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningFacility.namespaceId = seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.1&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.2&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningFacility.universalId = seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.2&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.3&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningFacility.universalIdType = seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.3&apos;]; }
		if (Object.keys(pid[index].externalId.assigningFacility).length == 0) {
			if (seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningFacility.namespaceId = seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;]; }
			else delete pid[index].externalId.assigningFacility;
		}
		if (Object.keys(pid[index].externalId).length == 0) {
			delete pid[index].externalId;
		}

		// PID.3, internalId
		pid[index].internalId = [];
		for each (field in seg[&apos;PID.3&apos;]) {
			var block = {};
			if (field[&apos;PID.3.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PID.3.1&apos;]; }
			if (field[&apos;PID.3.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PID.3.2&apos;]; }
			if (field[&apos;PID.3.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PID.3.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;PID.3.4&apos;][&apos;PID.3.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.3.4&apos;][&apos;PID.3.4.1&apos;]; }
			if (field[&apos;PID.3.4&apos;][&apos;PID.3.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PID.3.4&apos;][&apos;PID.3.4.2&apos;]; }
			if (field[&apos;PID.3.4&apos;][&apos;PID.3.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PID.3.4&apos;][&apos;PID.3.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;PID.3.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.3.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;PID.3.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PID.3.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;PID.3.6&apos;][&apos;PID.3.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.3.6&apos;][&apos;PID.3.6.1&apos;]; }
			if (field[&apos;PID.3.6&apos;][&apos;PID.3.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PID.3.6&apos;][&apos;PID.3.6.2&apos;]; }
			if (field[&apos;PID.3.6&apos;][&apos;PID.3.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PID.3.6&apos;][&apos;PID.3.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;PID.3.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.3.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				pid[index].internalId.push(block);
			}
		}
		if (pid[index].internalId.length == 0) {
			delete pid[index].internalId;
		}

		// PID.4, alternateId
		pid[index].alternateId = [];
		for each (field in seg[&apos;PID.4&apos;]) {
			var block = {};
			if (field[&apos;PID.4.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PID.4.1&apos;]; }
			if (field[&apos;PID.4.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PID.4.2&apos;]; }
			if (field[&apos;PID.4.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PID.4.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;PID.4.4&apos;][&apos;PID.4.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.4.4&apos;][&apos;PID.4.4.1&apos;]; }
			if (field[&apos;PID.4.4&apos;][&apos;PID.4.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PID.4.4&apos;][&apos;PID.4.4.2&apos;]; }
			if (field[&apos;PID.4.4&apos;][&apos;PID.4.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PID.4.4&apos;][&apos;PID.4.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;PID.4.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.4.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;PID.4.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PID.4.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;PID.4.6&apos;][&apos;PID.4.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.4.6&apos;][&apos;PID.4.6.1&apos;]; }
			if (field[&apos;PID.4.6&apos;][&apos;PID.4.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PID.4.6&apos;][&apos;PID.4.6.2&apos;]; }
			if (field[&apos;PID.4.6&apos;][&apos;PID.4.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PID.4.6&apos;][&apos;PID.4.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;PID.4.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.4.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				pid[index].alternateId.push(block);
			}
		}
		if (pid[index].alternateId.length == 0) {
			delete pid[index].alternateId;
		}

		// PID.5, patientName
		pid[index].patientName = [];
		for each (field in seg[&apos;PID.5&apos;]) {
			var block = {};
			if (field[&apos;PID.5.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PID.5.1&apos;]; }
			if (field[&apos;PID.5.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PID.5.2&apos;]; }
			if (field[&apos;PID.5.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PID.5.3&apos;]; }
			if (field[&apos;PID.5.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PID.5.4&apos;]; }
			if (field[&apos;PID.5.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PID.5.5&apos;]; }
			if (field[&apos;PID.5.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PID.5.6&apos;]; }
			if (field[&apos;PID.5.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PID.5.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].patientName.push(block);
			}	
		}
		if (pid[index].patientName.length == 0) {
			delete pid[index].patientName;
		}

		// PID.6, mothersMaidenName
		pid[index].mothersMaidenName = {};
		if (seg[&apos;PID.6&apos;][&apos;PID.6.1&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.lastName = seg[&apos;PID.6&apos;][&apos;PID.6.1&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.2&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.firstName = seg[&apos;PID.6&apos;][&apos;PID.6.2&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.3&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.middleInitOrName = seg[&apos;PID.6&apos;][&apos;PID.6.3&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.4&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.suffix = seg[&apos;PID.6&apos;][&apos;PID.6.4&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.5&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.prefix = seg[&apos;PID.6&apos;][&apos;PID.6.5&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.6&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.degree = seg[&apos;PID.6&apos;][&apos;PID.6.6&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.7&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.nameTypeCode = seg[&apos;PID.6&apos;][&apos;PID.6.7&apos;]; }
		if (Object.keys(pid[index].mothersMaidenName).length == 0) {
			delete pid[index].mothersMaidenName;
		}

		// PID.7, dateTimeBirth
		if (seg[&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() != &quot;&quot;) {pid[index].dateTimeBirth = seg[&apos;PID.7&apos;][&apos;PID.7.1&apos;]; }
		
		// PID.8, sex
		if (seg[&apos;PID.8&apos;][&apos;PID.8.1&apos;].toString() != &quot;&quot;) {pid[index].sex = seg[&apos;PID.8&apos;][&apos;PID.8.1&apos;]; }
		
		// PID.9, alias
		pid[index].alias = [];
		for each (field in seg[&apos;PID.9&apos;]) {
			var block = {};
			if (field[&apos;PID.9.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PID.9.1&apos;]; }
			if (field[&apos;PID.9.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PID.9.2&apos;]; }
			if (field[&apos;PID.9.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PID.9.3&apos;]; }
			if (field[&apos;PID.9.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PID.9.4&apos;]; }
			if (field[&apos;PID.9.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PID.9.5&apos;]; }
			if (field[&apos;PID.9.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PID.9.6&apos;]; }
			if (field[&apos;PID.9.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PID.9.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].alias.push(block);
			}	
		}
		if (pid[index].alias.length == 0) {
			delete pid[index].alias;
		}

		// PID.10, race
		if (seg[&apos;PID.10&apos;][&apos;PID.10.1&apos;].toString() != &quot;&quot;) {pid[index].race = seg[&apos;PID.10&apos;][&apos;PID.10.1&apos;]; }
		
		// PID.11, address
		pid[index].address = [];
		for each (field in seg[&apos;PID.11&apos;]) {
			var block = {};
			if (field[&apos;PID.11.1&apos;].toString() != &quot;&quot;) { block.streetAddress = field[&apos;PID.11.1&apos;]; }
			if (field[&apos;PID.11.2&apos;].toString() != &quot;&quot;) { block.otherDesignation = field[&apos;PID.11.2&apos;]; }
			if (field[&apos;PID.11.3&apos;].toString() != &quot;&quot;) { block.city = field[&apos;PID.11.3&apos;]; }
			if (field[&apos;PID.11.4&apos;].toString() != &quot;&quot;) { block.stateOrProvince = field[&apos;PID.11.4&apos;]; }
			if (field[&apos;PID.11.5&apos;].toString() != &quot;&quot;) { block.zip = field[&apos;PID.11.5&apos;]; }
			if (field[&apos;PID.11.6&apos;].toString() != &quot;&quot;) { block.country = field[&apos;PID.11.6&apos;]; }
			if (field[&apos;PID.11.7&apos;].toString() != &quot;&quot;) { block.addressType = field[&apos;PID.11.7&apos;]; }
			if (field[&apos;PID.11.8&apos;].toString() != &quot;&quot;) { block.otherGeographicDesignation = field[&apos;PID.11.8&apos;]; }
			if (field[&apos;PID.11.9&apos;].toString() != &quot;&quot;) { block.countyOrParishCode = field[&apos;PID.11.9&apos;]; }
			if (field[&apos;PID.11.10&apos;].toString() != &quot;&quot;) { block.censusTract = field[&apos;PID.11.10&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].address.push(block);
			}
		}
		if (pid[index].address.length == 0) {
			delete pid[index].address;
		}

		// PID.12, countyCode
		if (seg[&apos;PID.12&apos;][&apos;PID.12.1&apos;].toString() != &quot;&quot;) {pid[index].countyCode = seg[&apos;PID.12&apos;][&apos;PID.12.1&apos;]; }
		
		// PID.13, homePhone
		pid[index].homePhone = [];
		for each (field in seg[&apos;PID.13&apos;]) {
			var block = {};
			if (field[&apos;PID.13.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;PID.13.1&apos;]; }
			if (field[&apos;PID.13.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;PID.13.2&apos;]; }
			if (field[&apos;PID.13.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;PID.13.3&apos;]; }
			if (field[&apos;PID.13.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;PID.13.4&apos;]; }
			if (field[&apos;PID.13.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;PID.13.5&apos;]; }
			if (field[&apos;PID.13.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;PID.13.6&apos;]; }
			if (field[&apos;PID.13.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;PID.13.7&apos;]; }
			if (field[&apos;PID.13.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;PID.13.8&apos;]; }
			if (field[&apos;PID.13.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;PID.13.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].homePhone.push(block);
			}
		}
		if (pid[index].homePhone.length == 0) {
			delete pid[index].homePhone;
		}

		// PID.14, businessPhone
		pid[index].businessPhone = [];
		for each (field in seg[&apos;PID.14&apos;]) {
			var block = {};
			if (field[&apos;PID.14.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;PID.14.1&apos;]; }
			if (field[&apos;PID.14.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;PID.14.2&apos;]; }
			if (field[&apos;PID.14.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;PID.14.3&apos;]; }
			if (field[&apos;PID.14.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;PID.14.4&apos;]; }
			if (field[&apos;PID.14.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;PID.14.5&apos;]; }
			if (field[&apos;PID.14.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;PID.14.6&apos;]; }
			if (field[&apos;PID.14.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;PID.14.7&apos;]; }
			if (field[&apos;PID.14.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;PID.14.8&apos;]; }
			if (field[&apos;PID.14.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;PID.14.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].businessPhone.push(block);
			}
		}
		if (pid[index].businessPhone.length == 0) {
			delete pid[index].businessPhone;
		}

		// PID.15, primaryLanguage
		pid[index].primaryLanguage = {};
		if (seg[&apos;PID.15&apos;][&apos;PID.15.1&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.id = seg[&apos;PID.15&apos;][&apos;PID.15.1&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.2&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.text = seg[&apos;PID.15&apos;][&apos;PID.15.2&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.3&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.codingSystem = seg[&apos;PID.15&apos;][&apos;PID.15.3&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.4&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.altId = seg[&apos;PID.15&apos;][&apos;PID.15.4&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.5&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.altText = seg[&apos;PID.15&apos;][&apos;PID.15.5&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.6&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.altCodingSystem = seg[&apos;PID.15&apos;][&apos;PID.15.6&apos;]; }
		if (Object.keys(pid[index].primaryLanguage).length == 0) {
			delete pid[index].primaryLanguage;
		}

		// PID.16, maritalStatus
		if (seg[&apos;PID.16&apos;][&apos;PID.16.1&apos;].toString() != &quot;&quot;) {pid[index].maritalStatus = seg[&apos;PID.16&apos;][&apos;PID.16.1&apos;]; }
		
		// PID.17, religion
		if (seg[&apos;PID.17&apos;][&apos;PID.17.1&apos;].toString() != &quot;&quot;) {pid[index].religion = seg[&apos;PID.17&apos;][&apos;PID.17.1&apos;]; }

		// PID.18, patientAccountNumber
		pid[index].patientAccountNumber = {};
		if (seg[&apos;PID.18&apos;][&apos;PID.18.1&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.id = seg[&apos;PID.18&apos;][&apos;PID.18.1&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.2&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.identifierCheckDigit = seg[&apos;PID.18&apos;][&apos;PID.18.2&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.3&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.codeIdentifyingCheckDigitScheme = seg[&apos;PID.18&apos;][&apos;PID.18.3&apos;]; }
		pid[index].patientAccountNumber.assigningAuthority = {};
		if (seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.1&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningAuthority.namespaceId = seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.1&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.2&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningAuthority.universalId = seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.2&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.3&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningAuthority.universalIdType = seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.3&apos;]; }
		if (Object.keys(pid[index].patientAccountNumber.assigningAuthority).length == 0) {
			if (seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningAuthority.namespaceId = seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;]; }
			else delete pid[index].patientAccountNumber.assigningAuthority;
		}
		if (seg[&apos;PID.18&apos;][&apos;PID.18.5&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.idTypeCode = seg[&apos;PID.18&apos;][&apos;PID.18.5&apos;]; }
		pid[index].patientAccountNumber.assigningFacility = {};
		if (seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.1&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningFacility.namespaceId = seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.1&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.2&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningFacility.universalId = seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.2&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.3&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningFacility.universalIdType = seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.3&apos;]; }
		if (Object.keys(pid[index].patientAccountNumber.assigningFacility).length == 0) {
			if (seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningFacility.namespaceId = seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;]; }
			else delete pid[index].patientAccountNumber.assigningFacility;
		}
		if (Object.keys(pid[index].patientAccountNumber).length == 0) {
			delete pid[index].patientAccountNumber;
		}

		// PID.19, ssn
		if (seg[&apos;PID.19&apos;][&apos;PID.19.1&apos;].toString() != &quot;&quot;) {pid[index].ssn = seg[&apos;PID.19&apos;][&apos;PID.19.1&apos;]; }
		
		// PID.20, driversLicenseNumber
		pid[index].driversLicenseNumber = {};
		if (seg[&apos;PID.20&apos;][&apos;PID.20.1&apos;].toString() != &quot;&quot;) {pid[index].driversLicenseNumber.licenseNumber = seg[&apos;PID.20&apos;][&apos;PID.20.1&apos;]; }
		if (seg[&apos;PID.20&apos;][&apos;PID.20.2&apos;].toString() != &quot;&quot;) {pid[index].driversLicenseNumber.issuingStateProvinceCountry = seg[&apos;PID.20&apos;][&apos;PID.20.2&apos;]; }
		if (seg[&apos;PID.20&apos;][&apos;PID.20.3&apos;].toString() != &quot;&quot;) {pid[index].driversLicenseNumber.expirationDate = seg[&apos;PID.20&apos;][&apos;PID.20.3&apos;]; }
		if (Object.keys(pid[index].driversLicenseNumber).length == 0) {
			delete pid[index].driversLicenseNumber;
		}

		// PID.21, mothersId
		pid[index].mothersId = [];
		for each (field in seg[&apos;PID.21&apos;]) {
			var block = {};
			if (field[&apos;PID.21.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PID.21.1&apos;]; }
			if (field[&apos;PID.21.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PID.21.2&apos;]; }
			if (field[&apos;PID.21.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PID.21.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;PID.21.4&apos;][&apos;PID.21.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.21.4&apos;][&apos;PID.21.4.1&apos;]; }
			if (field[&apos;PID.21.4&apos;][&apos;PID.21.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PID.21.4&apos;][&apos;PID.21.4.2&apos;]; }
			if (field[&apos;PID.21.4&apos;][&apos;PID.21.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PID.21.4&apos;][&apos;PID.21.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;PID.21.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.21.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;PID.21.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PID.21.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;PID.21.6&apos;][&apos;PID.21.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.21.6&apos;][&apos;PID.21.6.1&apos;]; }
			if (field[&apos;PID.21.6&apos;][&apos;PID.21.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PID.21.6&apos;][&apos;PID.21.6.2&apos;]; }
			if (field[&apos;PID.21.6&apos;][&apos;PID.21.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PID.21.6&apos;][&apos;PID.21.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;PID.21.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.21.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				pid[index].mothersId.push(block);
			}
		}
		if (pid[index].mothersId.length == 0) {
			delete pid[index].mothersId;
		}

		// PID.22, ethnicGroup
		if (seg[&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString() != &quot;&quot;) {pid[index].ethnicGroup = seg[&apos;PID.22&apos;][&apos;PID.22.1&apos;]; }
		
		// PID.23, birthPlace
		if (seg[&apos;PID.23&apos;][&apos;PID.23.1&apos;].toString() != &quot;&quot;) {pid[index].birthPlace = seg[&apos;PID.23&apos;][&apos;PID.23.1&apos;]; }
		
		// PID.24, multipleBirthIndicator
		if (seg[&apos;PID.24&apos;][&apos;PID.24.1&apos;].toString() != &quot;&quot;) {pid[index].multipleBirthIndicator = seg[&apos;PID.24&apos;][&apos;PID.24.1&apos;]; }
		
		// PID.25, birthOrder
		if (seg[&apos;PID.25&apos;][&apos;PID.25.1&apos;].toString() != &quot;&quot;) {pid[index].birthOrder = seg[&apos;PID.25&apos;][&apos;PID.25.1&apos;]; }
		
		// PID.26, citizenship
		pid[index].citizenship = [];
		for each (field in seg[&apos;PID.26&apos;]) {
			if (field[&apos;PID.26.1&apos;].toString() != &quot;&quot;) {
				pid[index].citizenship.push(field[&apos;PID.26.1&apos;]);
			}
		}
		if (pid[index].citizenship.length == 0) {
			delete pid[index].citizenship;
		}
		
		// PID.27, veteranStatus
		pid[index].veteranStatus = {};
		if (seg[&apos;PID.27&apos;][&apos;PID.27.1&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.id = seg[&apos;PID.27&apos;][&apos;PID.27.1&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.2&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.text = seg[&apos;PID.27&apos;][&apos;PID.27.2&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.3&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.codingSystem = seg[&apos;PID.27&apos;][&apos;PID.27.3&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.4&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.altId = seg[&apos;PID.27&apos;][&apos;PID.27.4&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.5&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.altText = seg[&apos;PID.27&apos;][&apos;PID.27.5&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.6&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.altCodingSystem = seg[&apos;PID.27&apos;][&apos;PID.27.6&apos;]; }
		if (Object.keys(pid[index].veteranStatus).length == 0) {
			delete pid[index].veteranStatus;
		}

		// PID.28, nationality
		pid[index].nationality = {};
		if (seg[&apos;PID.28&apos;][&apos;PID.28.1&apos;].toString() != &quot;&quot;) { pid[index].nationality.id = seg[&apos;PID.28&apos;][&apos;PID.28.1&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.2&apos;].toString() != &quot;&quot;) { pid[index].nationality.text = seg[&apos;PID.28&apos;][&apos;PID.28.2&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.3&apos;].toString() != &quot;&quot;) { pid[index].nationality.codingSystem = seg[&apos;PID.28&apos;][&apos;PID.28.3&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.4&apos;].toString() != &quot;&quot;) { pid[index].nationality.altId = seg[&apos;PID.28&apos;][&apos;PID.28.4&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.5&apos;].toString() != &quot;&quot;) { pid[index].nationality.altText = seg[&apos;PID.28&apos;][&apos;PID.28.5&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.6&apos;].toString() != &quot;&quot;) { pid[index].nationality.altCodingSystem = seg[&apos;PID.28&apos;][&apos;PID.28.6&apos;]; }
		if (Object.keys(pid[index].nationality).length == 0) {
			delete pid[index].nationality;
		}

		// PID.29, deathDateTime
		if (seg[&apos;PID.29&apos;][&apos;PID.29.1&apos;].toString() != &quot;&quot;) {pid[index].deathDateTime = seg[&apos;PID.29&apos;][&apos;PID.29.1&apos;]; }
		
		// PID.30, deathIndicator
		if (seg[&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString() != &quot;&quot;) {pid[index].deathIndicator = seg[&apos;PID.30&apos;][&apos;PID.30.1&apos;]; }

		// PD1 (PID)
		var pd1;
		var pd1Group = getSegmentsAfter(msg,seg,&apos;PD1&apos;,false,[&apos;PV1&apos;]);
		if (pd1Group.length &gt; 0) {
			pid[index].PD1 = [];
			var indexPD1 = 0;
			for each (pd1Seg in pd1Group) {
				pid[index].PD1[indexPD1] = {};

				// PD1.1, livingDependency
				pid[index].PD1[indexPD1].livingDependency = [];
				for each (field in pd1Seg[&apos;PD1.1&apos;]) {
					if (field[&apos;PD1.1.1&apos;].toString() != &quot;&quot;) {
						pid[index].PD1[indexPD1].livingDependency.push(field[&apos;PD1.1.1&apos;]);
					}
				}
				if (pid[index].PD1[indexPD1].livingDependency.length == 0) {
					delete pid[index].PD1[indexPD1].livingDependency;
				}
				
				// PD1.2, livingArrangement
				if (pd1Seg[&apos;PD1.2&apos;][&apos;PD1.2.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].livingArrangement = pd1Seg[&apos;PD1.2&apos;][&apos;PD1.2.1&apos;]; }

				// PD1.3, patientPrimaryFacility
				pid[index].PD1[indexPD1].patientPrimaryFacility = [];
				for each (field in pd1Seg[&apos;PD1.3&apos;]) {
					var block = {};
					if (field[&apos;PD1.3.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;PD1.3.1&apos;]; }
					if (field[&apos;PD1.3.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;PD1.3.2&apos;]; }
					if (field[&apos;PD1.3.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;PD1.3.3&apos;]; }
					if (field[&apos;PD1.3.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PD1.3.4&apos;]; }
					if (field[&apos;PD1.3.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PD1.3.5&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.1&apos;]; }
					if (field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.2&apos;]; }
					if (field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PD1.3.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PD1.3.6&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PD1.3.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PD1.3.7&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.1&apos;]; }
					if (field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.2&apos;]; }
					if (field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PD1.3.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PD1.3.8&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PD1[indexPD1].patientPrimaryFacility.push(block);
					}
				}
				if (pid[index].PD1[indexPD1].patientPrimaryFacility.length == 0) {
					delete pid[index].PD1[indexPD1].patientPrimaryFacility;
				}

				// PD1.4, primaryCareProvider
				pid[index].PD1[indexPD1].primaryCareProvider = [];
				for each (field in pd1Seg[&apos;PD1.4&apos;]) {
					var block = {};
					if (field[&apos;PD1.4.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PD1.4.1&apos;]; }
					if (field[&apos;PD1.4.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PD1.4.2&apos;]; }
					if (field[&apos;PD1.4.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PD1.4.3&apos;]; }
					if (field[&apos;PD1.4.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PD1.4.4&apos;]; }
					if (field[&apos;PD1.4.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PD1.4.5&apos;]; }
					if (field[&apos;PD1.4.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PD1.4.6&apos;]; }
					if (field[&apos;PD1.4.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PD1.4.7&apos;]; }
					if (field[&apos;PD1.4.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PD1.4.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.1&apos;]; }
					if (field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.2&apos;]; }
					if (field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PD1.4.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PD1.4.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PD1.4.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PD1.4.10&apos;]; }
					if (field[&apos;PD1.4.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PD1.4.11&apos;]; }
					if (field[&apos;PD1.4.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PD1.4.12&apos;]; }
					if (field[&apos;PD1.4.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PD1.4.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.1&apos;]; }
					if (field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.2&apos;]; }
					if (field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PD1.4.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PD1.4.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PD1[indexPD1].primaryCareProvider.push(block);
					}
				}
				if (pid[index].PD1[indexPD1].primaryCareProvider.length == 0) {
					delete pid[index].PD1[indexPD1].primaryCareProvider;
				}

				// PD1.5, studentIndicator
				if (pd1Seg[&apos;PD1.5&apos;][&apos;PD1.5.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].studentIndicator = pd1Seg[&apos;PD1.5&apos;][&apos;PD1.5.1&apos;]; }
				
				// PD1.6, handicap
				if (pd1Seg[&apos;PD1.6&apos;][&apos;PD1.6.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].handicap = pd1Seg[&apos;PD1.6&apos;][&apos;PD1.6.1&apos;]; }
				
				// PD1.7, livingWillCode
				if (pd1Seg[&apos;PD1.7&apos;][&apos;PD1.7.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].livingWillCode = pd1Seg[&apos;PD1.7&apos;][&apos;PD1.7.1&apos;]; }
				
				// PD1.8, organDonorCode
				if (pd1Seg[&apos;PD1.8&apos;][&apos;PD1.8.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].organDonorCode = pd1Seg[&apos;PD1.8&apos;][&apos;PD1.8.1&apos;]; }
				
				// PD1.9, separateBill
				if (pd1Seg[&apos;PD1.9&apos;][&apos;PD1.9.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].separateBill = pd1Seg[&apos;PD1.9&apos;][&apos;PD1.9.1&apos;]; }
				
				// PD1.10, duplicatePatient
				pid[index].PD1[indexPD1].duplicatePatient = [];
				for each (field in pd1Seg[&apos;PD1.10&apos;]) {
					var block = {};
					if (field[&apos;PD1.10.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PD1.10.1&apos;]; }
					if (field[&apos;PD1.10.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PD1.10.2&apos;]; }
					if (field[&apos;PD1.10.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PD1.10.3&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.1&apos;]; }
					if (field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.2&apos;]; }
					if (field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PD1.10.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PD1.10.4&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PD1.10.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PD1.10.5&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.1&apos;]; }
					if (field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.2&apos;]; }
					if (field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PD1.10.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PD1.10.6&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PD1[indexPD1].duplicatePatient.push(block);
					}
				}
				if (pid[index].PD1[indexPD1].duplicatePatient.length == 0) {
					delete pid[index].PD1[indexPD1].duplicatePatient;
				}

				// PD1.11, publicityIndicator
				pid[index].PD1[indexPD1].publicityIndicator = {};
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.id = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.1&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.2&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.text = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.2&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.3&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.codingSystem = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.3&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.4&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.altId = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.4&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.5&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.altText = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.5&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.6&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.altCodingSystem = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.6&apos;]; }
				if (Object.keys(pid[index].PD1[indexPD1].publicityIndicator).length == 0) {
					delete pid[index].PD1[indexPD1].publicityIndicator;
				}
				
				// PD1.12, protectionIndicator
				if (pd1Seg[&apos;PD1.12&apos;][&apos;PD1.12.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].protectionIndicator = pd1Seg[&apos;PD1.12&apos;][&apos;PD1.12.1&apos;]; }

				// clean up PD1 and increment index
				if (Object.keys(pid[index].PD1[indexPD1]).length == 0) {
					delete pid[index].PD1[indexPD1];
				} else {
					indexPD1++;
				}
			}
		}

		// NTE
		var nteGroup = getSegmentsAfter(msg,seg,&apos;NTE&apos;,false,[&apos;PV1&apos;]);
		if (nteGroup.length &gt; 0) {
			pid[index].NTE = [];
			var indexNTE = 0;
			for each (nteSeg in nteGroup) {
				pid[index].NTE[indexNTE] = {};

				// NTE.1, setId
				if (nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { pid[index].NTE[indexNTE].setId = nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }

				// NTE.2, sourceOfComment
				if (nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { pid[index].NTE[indexNTE].sourceOfComment = nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }

				// NTE.3, comment
				pid[index].NTE[indexNTE].comment = [];
				for each (field in nteSeg[&apos;NTE.3&apos;]) {
					var block = {};
					if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
						pid[index].NTE[indexNTE].comment.push(field[&apos;NTE.3.1&apos;]);
					}
				}
				if (pid[index].NTE[indexNTE].comment.length == 0) {
					delete pid[index].NTE[indexNTE].comment;
				}

				// clean up NTE and increment index
				if (Object.keys(pid[index].NTE[indexNTE]).length == 0) {
					delete pid[index].NTE[indexNTE];
				} else {
					indexNTE++;
				}
			}
		}

		// clean up PID and increment index
		if (Object.keys(pid[index]).length == 0) {
			delete pid[index];
		} else {
			index++;
		}
	}
}

// Optional: save a copy of the completed PID segment for reference later
//channelMap.put(&quot;pid&quot;, pid); // uncomment to save

// If it has content, add the PID segment to the hl7JSON object
if (pid &amp;&amp; Object.keys(pid).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.PID = pid;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>4</sequenceNumber>
          <name>--PV1 (Patient Visit) Segment - REQUIRES PID MAPPING STEP ABOVE</name>
          <script>// Pull out the PID JSON to embed the PV1 segments in
var pid = JSON.parse($(&apos;hl7JSON&apos;)).content.PID;

// PID iteration, in order to grab related PV1&apos;s
if (msg[&apos;PID&apos;].length() &gt; 0) {

	// PID is a required to have a PV1, but if the PID was blank and was removed from the JSON, just create a new one to add the PV1 into
	if (!pid) {
		pid = [{}];
	}
	
	var index = 0;
	for each (seg in msg.PID) {

		// PV1 (PID)
		var pv1Group = getSegmentsAfter(msg,seg,&apos;PV1&apos;,false);
		if (pv1Group.length &gt; 0 &amp;&amp; pid) {
			pid[index].PV1 = [];
			var indexPV1 = 0;
			for each (pv1Seg in pv1Group) {
				pid[index].PV1[indexPV1] = {};
		
				// PV1.1, setId
				if (pv1Seg[&apos;PV1.1&apos;][&apos;PV1.1.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].setId = pv1Seg[&apos;PV1.1&apos;][&apos;PV1.1.1&apos;]; }
		
				// PV1.2, patientClass
				if (pv1Seg[&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].patientClass = pv1Seg[&apos;PV1.2&apos;][&apos;PV1.2.1&apos;]; }
		
				// PV1.3, assignedPatientLocation
				pid[index].PV1[indexPV1].assignedPatientLocation = {};
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.pointOfCare = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.1&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.room = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.2&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.bed = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.3&apos;]; }
				pid[index].PV1[indexPV1].assignedPatientLocation.facility = {};
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.facility.universalId =  pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.facility.universalIdType =  pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].assignedPatientLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;]; }
					else delete pid[index].PV1[indexPV1].assignedPatientLocation.facility;
				}
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.locationStatus = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.5&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.personLocationType = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.6&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.building = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.7&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.floor = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.8&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.locationDescription = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].assignedPatientLocation).length == 0) {
					delete pid[index].PV1[indexPV1].assignedPatientLocation;
				}
		
				// PV1.4, admissionType
				if (pv1Seg[&apos;PV1.4&apos;][&apos;PV1.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].admissionType = pv1Seg[&apos;PV1.4&apos;][&apos;PV1.4.1&apos;]; }
		
				// PV1.5, preadmitNumber
				pid[index].PV1[indexPV1].preadmitNumber = {};
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.id = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.1&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.identifierCheckDigit = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.2&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.codeIdentifyingCheckDigitScheme = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.3&apos;]; }
				pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority = {};
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority.universalId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority.universalIdType = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority).length == 0) {
					if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;]; }
					else delete pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority;
				}
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.idTypeCode = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.5&apos;]; }
				pid[index].PV1[indexPV1].preadmitNumber.assigningFacility = {};
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningFacility.namespaceId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.1&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningFacility.universalId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.2&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningFacility.universalIdType = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].preadmitNumber.assigningFacility).length == 0) {
					if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningFacility.namespaceId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;]; }
					else delete pid[index].PV1[indexPV1].preadmitNumber.assigningFacility;
				}
				if (Object.keys(pid[index].PV1[indexPV1].preadmitNumber).length == 0) {
					delete pid[index].PV1[indexPV1].preadmitNumber;
				}
		
				// PV1.6, priorPatientLocation
				pid[index].PV1[indexPV1].priorPatientLocation = {};
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.pointOfCare = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.1&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.room = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.2&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.bed = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.3&apos;]; }
				pid[index].PV1[indexPV1].priorPatientLocation.facility = {};
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.facility.universalId =  pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.facility.universalIdType =  pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].priorPatientLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;]; }
					else delete pid[index].PV1[indexPV1].priorPatientLocation.facility;
				}
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.locationStatus = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.5&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.personLocationType = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.6&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.building = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.7&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.floor = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.8&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.locationDescription = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].priorPatientLocation).length == 0) {
					delete pid[index].PV1[indexPV1].priorPatientLocation;
				}
		
				// PV1.7, attendingDoctor
				pid[index].PV1[indexPV1].attendingDoctor = [];
				for each (field in pv1Seg[&apos;PV1.7&apos;]) {
					var block = {};
					if (field[&apos;PV1.7.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PV1.7.1&apos;]; }
					if (field[&apos;PV1.7.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PV1.7.2&apos;]; }
					if (field[&apos;PV1.7.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PV1.7.3&apos;]; }
					if (field[&apos;PV1.7.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PV1.7.4&apos;]; }
					if (field[&apos;PV1.7.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PV1.7.5&apos;]; }
					if (field[&apos;PV1.7.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PV1.7.6&apos;]; }
					if (field[&apos;PV1.7.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PV1.7.7&apos;]; }
					if (field[&apos;PV1.7.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PV1.7.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.1&apos;]; }
					if (field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.2&apos;]; }
					if (field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PV1.7.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.7.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PV1.7.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PV1.7.10&apos;]; }
					if (field[&apos;PV1.7.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV1.7.11&apos;]; }
					if (field[&apos;PV1.7.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV1.7.12&apos;]; }
					if (field[&apos;PV1.7.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PV1.7.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.1&apos;]; }
					if (field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.2&apos;]; }
					if (field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PV1.7.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.7.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PV1[indexPV1].attendingDoctor.push(block);
					}
				}
				if (pid[index].PV1[indexPV1].attendingDoctor.length == 0) {
					delete pid[index].PV1[indexPV1].attendingDoctor;
				}
		
				// PV1.8, referringDoctor
				pid[index].PV1[indexPV1].referringDoctor = [];
				for each (field in pv1Seg[&apos;PV1.8&apos;]) {
					var block = {};
					if (field[&apos;PV1.8.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PV1.8.1&apos;]; }
					if (field[&apos;PV1.8.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PV1.8.2&apos;]; }
					if (field[&apos;PV1.8.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PV1.8.3&apos;]; }
					if (field[&apos;PV1.8.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PV1.8.4&apos;]; }
					if (field[&apos;PV1.8.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PV1.8.5&apos;]; }
					if (field[&apos;PV1.8.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PV1.8.6&apos;]; }
					if (field[&apos;PV1.8.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PV1.8.7&apos;]; }
					if (field[&apos;PV1.8.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PV1.8.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.1&apos;]; }
					if (field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.2&apos;]; }
					if (field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PV1.8.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.8.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PV1.8.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PV1.8.10&apos;]; }
					if (field[&apos;PV1.8.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV1.8.11&apos;]; }
					if (field[&apos;PV1.8.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV1.8.12&apos;]; }
					if (field[&apos;PV1.8.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PV1.8.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.1&apos;]; }
					if (field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.2&apos;]; }
					if (field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PV1.8.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.8.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PV1[indexPV1].referringDoctor.push(block);
					}
				}
				if (pid[index].PV1[indexPV1].referringDoctor.length == 0) {
					delete pid[index].PV1[indexPV1].referringDoctor;
				}
				
				// PV1.9, consultingDoctor
				pid[index].PV1[indexPV1].consultingDoctor = [];
				for each (field in pv1Seg[&apos;PV1.9&apos;]) {
					var block = {};
					if (field[&apos;PV1.9.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PV1.9.1&apos;]; }
					if (field[&apos;PV1.9.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PV1.9.2&apos;]; }
					if (field[&apos;PV1.9.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PV1.9.3&apos;]; }
					if (field[&apos;PV1.9.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PV1.9.4&apos;]; }
					if (field[&apos;PV1.9.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PV1.9.5&apos;]; }
					if (field[&apos;PV1.9.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PV1.9.6&apos;]; }
					if (field[&apos;PV1.9.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PV1.9.7&apos;]; }
					if (field[&apos;PV1.9.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PV1.9.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.1&apos;]; }
					if (field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.2&apos;]; }
					if (field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PV1.9.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.9.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PV1.9.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PV1.9.10&apos;]; }
					if (field[&apos;PV1.9.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV1.9.11&apos;]; }
					if (field[&apos;PV1.9.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV1.9.12&apos;]; }
					if (field[&apos;PV1.9.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PV1.9.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.1&apos;]; }
					if (field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.2&apos;]; }
					if (field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PV1.9.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.9.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PV1[indexPV1].consultingDoctor.push(block);
					}
				}
				if (pid[index].PV1[indexPV1].consultingDoctor.length == 0) {
					delete pid[index].PV1[indexPV1].consultingDoctor;
				}
				
				// PV1.10, hospitalService
				if (pv1Seg[&apos;PV1.10&apos;][&apos;PV1.10.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].hospitalService = pv1Seg[&apos;PV1.10&apos;][&apos;PV1.10.1&apos;]; }
		
				// PV1.11, temporaryLocation
				pid[index].PV1[indexPV1].temporaryLocation = {};
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.pointOfCare = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.1&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.room = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.2&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.bed = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.3&apos;]; }
				pid[index].PV1[indexPV1].temporaryLocation.facility = {};
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.facility.universalId =  pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.facility.universalIdType =  pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].temporaryLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;]; }
					else delete pid[index].PV1[indexPV1].temporaryLocation.facility;
				}
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.locationStatus = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.5&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.personLocationType = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.6&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.building = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.7&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.floor = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.8&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.locationDescription = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].temporaryLocation).length == 0) {
					delete pid[index].PV1[indexPV1].temporaryLocation;
				}
		
				// PV1.12, preadmitTestIndicator
				if (pv1Seg[&apos;PV1.12&apos;][&apos;PV1.12.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitTestIndicator = pv1Seg[&apos;PV1.12&apos;][&apos;PV1.12.1&apos;]; }
		
				// PV1.13, readmissionIndicator
				if (pv1Seg[&apos;PV1.13&apos;][&apos;PV1.13.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].readmissionIndicator = pv1Seg[&apos;PV1.13&apos;][&apos;PV1.13.1&apos;]; }
		
				// PV1.14, admitSource
				if (pv1Seg[&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].admitSource = pv1Seg[&apos;PV1.14&apos;][&apos;PV1.14.1&apos;]; }
		
				// PV1.15, ambulatoryStatus
				pid[index].PV1[indexPV1].ambulatoryStatus = [];
				for each (field in pv1Seg[&apos;PV1.15&apos;]) {
					if (field[&apos;PV1.15.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].ambulatoryStatus.push(field[&apos;PV1.15.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].ambulatoryStatus.length == 0){
					delete pid[index].PV1[indexPV1].ambulatoryStatus;
				}
		
				// PV1.16, vipIndicator
				if (pv1Seg[&apos;PV1.16&apos;][&apos;PV1.16.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].vipIndicator = pv1Seg[&apos;PV1.16&apos;][&apos;PV1.16.1&apos;]; }
		
				// PV1.17, admittingDoctor
				pid[index].PV1[indexPV1].admittingDoctor = [];
				for each (field in pv1Seg[&apos;PV1.17&apos;]) {
					var block = {};
					if (field[&apos;PV1.17.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PV1.17.1&apos;]; }
					if (field[&apos;PV1.17.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PV1.17.2&apos;]; }
					if (field[&apos;PV1.17.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PV1.17.3&apos;]; }
					if (field[&apos;PV1.17.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PV1.17.4&apos;]; }
					if (field[&apos;PV1.17.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PV1.17.5&apos;]; }
					if (field[&apos;PV1.17.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PV1.17.6&apos;]; }
					if (field[&apos;PV1.17.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PV1.17.7&apos;]; }
					if (field[&apos;PV1.17.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PV1.17.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.1&apos;]; }
					if (field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.2&apos;]; }
					if (field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PV1.17.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.17.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PV1.17.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PV1.17.10&apos;]; }
					if (field[&apos;PV1.17.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV1.17.11&apos;]; }
					if (field[&apos;PV1.17.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV1.17.12&apos;]; }
					if (field[&apos;PV1.17.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PV1.17.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.1&apos;]; }
					if (field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.2&apos;]; }
					if (field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PV1.17.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.17.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PV1[indexPV1].admittingDoctor.push(block);
					}
				}
				if (pid[index].PV1[indexPV1].admittingDoctor.length == 0) {
					delete pid[index].PV1[indexPV1].admittingDoctor;
				}
				
				// PV1.18, patientType
				if (pv1Seg[&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].patientType = pv1Seg[&apos;PV1.18&apos;][&apos;PV1.18.1&apos;]; }
		
				// PV1.19, visitNumber
				pid[index].PV1[indexPV1].visitNumber = {};
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.id = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.1&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.identifierCheckDigit = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.2&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.codeIdentifyingCheckDigitScheme = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.3&apos;]; }
				pid[index].PV1[indexPV1].visitNumber.assigningAuthority = {};
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningAuthority.universalId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningAuthority.universalIdType = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].visitNumber.assigningAuthority).length == 0) {
					if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;]; }
					else delete pid[index].PV1[indexPV1].visitNumber.assigningAuthority;
				}
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.idTypeCode = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.5&apos;]; }
				pid[index].PV1[indexPV1].visitNumber.assigningFacility = {};
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningFacility.namespaceId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.1&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningFacility.universalId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.2&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningFacility.universalIdType = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].visitNumber.assigningFacility).length == 0) {
					if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningFacility.namespaceId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;]; }
					else delete pid[index].PV1[indexPV1].visitNumber.assigningFacility;
				}
				if (Object.keys(pid[index].PV1[indexPV1].visitNumber).length == 0) {
					delete pid[index].PV1[indexPV1].visitNumber;
				}
				
				// PV1.20, financialClass
				pid[index].PV1[indexPV1].financialClass = {};
				if (pv1Seg[&apos;PV1.20&apos;][&apos;PV1.20.1&apos;].toString() != &quot;&quot;) {pid[index].PV1[indexPV1].financialClass.financialClass = pv1Seg[&apos;PV1.20&apos;][&apos;PV1.20.1&apos;]; }
				if (pv1Seg[&apos;PV1.20&apos;][&apos;PV1.20.2&apos;].toString() != &quot;&quot;) {pid[index].PV1[indexPV1].financialClass.effectiveDate = pv1Seg[&apos;PV1.20&apos;][&apos;PV1.20.2&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].financialClass).length == 0) {
					delete pid[index].PV1[indexPV1].financialClass;
				}
		
				// PV1.21, chargePriceIndicator
				if (pv1Seg[&apos;PV1.21&apos;][&apos;PV1.21.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].chargePriceIndicator = pv1Seg[&apos;PV1.21&apos;][&apos;PV1.21.1&apos;]; }
		
				// PV1.22, courtesyCode
				if (pv1Seg[&apos;PV1.22&apos;][&apos;PV1.22.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].courtesyCode = pv1Seg[&apos;PV1.22&apos;][&apos;PV1.22.1&apos;]; }
		
				// PV1.23, creditRating
				if (pv1Seg[&apos;PV1.23&apos;][&apos;PV1.23.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].creditRating = pv1Seg[&apos;PV1.23&apos;][&apos;PV1.23.1&apos;]; }
		
				// PV1.24, contractCode
				pid[index].PV1[indexPV1].contractCode = [];
				for each (field in pv1Seg[&apos;PV1.24&apos;]) {
					if (field[&apos;PV1.24.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].contractCode.push(field[&apos;PV1.24.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].contractCode.length == 0) {
					delete pid[index].PV1[indexPV1].contractCode;
				}
		
				// PV1.25, contractEffectiveDate
				pid[index].PV1[indexPV1].contractEffectiveDate = [];
				for each (field in pv1Seg[&apos;PV1.25&apos;]) {
					if (field[&apos;PV1.25.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].contractEffectiveDate.push(field[&apos;PV1.25.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].contractEffectiveDate.length == 0) {
					delete pid[index].PV1[indexPV1].contractEffectiveDate;
				}
		
				// PV1.26, contractAmount
				pid[index].PV1[indexPV1].contractAmount = [];
				for each (field in pv1Seg[&apos;PV1.26&apos;]) {
					if (field[&apos;PV1.26.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].contractAmount.push(field[&apos;PV1.26.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].contractAmount.length == 0) {
					delete pid[index].PV1[indexPV1].contractAmount;
				}
		
				// PV1.27, contractPeriod
				pid[index].PV1[indexPV1].contractPeriod = [];
				for each (field in pv1Seg[&apos;PV1.27&apos;]) {
					if (field[&apos;PV1.27.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].contractPeriod.push(field[&apos;PV1.27.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].contractPeriod.length == 0) {
					delete pid[index].PV1[indexPV1].contractPeriod;
				}
		
				// PV1.28, interestCode
				if (pv1Seg[&apos;PV1.28&apos;][&apos;PV1.28.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].interestCode = pv1Seg[&apos;PV1.28&apos;][&apos;PV1.28.1&apos;]; }
		
				// PV1.29, transferToBadDebtCode
				if (pv1Seg[&apos;PV1.29&apos;][&apos;PV1.29.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].transferToBadDebtCode = pv1Seg[&apos;PV1.29&apos;][&apos;PV1.29.1&apos;]; }
		
				// PV1.30, transferToBadDebtDate
				if (pv1Seg[&apos;PV1.30&apos;][&apos;PV1.30.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].transferToBadDebtDate = pv1Seg[&apos;PV1.30&apos;][&apos;PV1.30.1&apos;]; }
		
				// PV1.31, badDebtAgencyCode
				if (pv1Seg[&apos;PV1.31&apos;][&apos;PV1.31.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].badDebtAgencyCode = pv1Seg[&apos;PV1.31&apos;][&apos;PV1.31.1&apos;]; }
		
				// PV1.32, badDebtTransferAmount
				if (pv1Seg[&apos;PV1.32&apos;][&apos;PV1.32.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].badDebtTransferAmount = pv1Seg[&apos;PV1.32&apos;][&apos;PV1.32.1&apos;]; }
		
				// PV1.33, badDebtRecoveryAmount
				if (pv1Seg[&apos;PV1.33&apos;][&apos;PV1.33.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].badDebtRecoveryAmount = pv1Seg[&apos;PV1.33&apos;][&apos;PV1.33.1&apos;]; }
		
				// PV1.34, deleteAccountIndicator
				if (pv1Seg[&apos;PV1.34&apos;][&apos;PV1.34.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].deleteAccountIndicator = pv1Seg[&apos;PV1.34&apos;][&apos;PV1.34.1&apos;]; }
		
				// PV1.35, deleteAccountDate
				if (pv1Seg[&apos;PV1.35&apos;][&apos;PV1.35.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].deleteAccountDate = pv1Seg[&apos;PV1.35&apos;][&apos;PV1.35.1&apos;]; }
		
				// PV1.36, dischargeDisposition
				if (pv1Seg[&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dischargeDisposition = pv1Seg[&apos;PV1.36&apos;][&apos;PV1.36.1&apos;]; }
		
				// PV1.37, dischargedtoLocation
				pid[index].PV1[indexPV1].dischargedtoLocation = {};
				if (pv1Seg[&apos;PV1.37&apos;][&apos;PV1.37.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dischargedtoLocation.dischargeLocation = pv1Seg[&apos;PV1.37&apos;][&apos;PV1.37.1&apos;]; }
				if (pv1Seg[&apos;PV1.37&apos;][&apos;PV1.37.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dischargedtoLocation.effectiveDate = pv1Seg[&apos;PV1.37&apos;][&apos;PV1.37.2&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].dischargedtoLocation).length == 0) {
					delete pid[index].PV1[indexPV1].dischargedtoLocation;
				}
		
				// PV1.38, dietType
				if (pv1Seg[&apos;PV1.38&apos;][&apos;PV1.38.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dietType = pv1Seg[&apos;PV1.38&apos;][&apos;PV1.38.1&apos;]; }
		
				// PV1.39, servicingFacility
				if (pv1Seg[&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].servicingFacility = pv1Seg[&apos;PV1.39&apos;][&apos;PV1.39.1&apos;]; }
		
				// PV1.40, bedStatus
				if (pv1Seg[&apos;PV1.40&apos;][&apos;PV1.40.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].bedStatus = pv1Seg[&apos;PV1.40&apos;][&apos;PV1.40.1&apos;]; }
		
				// PV1.41, accountStatus
				if (pv1Seg[&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].accountStatus = pv1Seg[&apos;PV1.41&apos;][&apos;PV1.41.1&apos;]; }
		
				// PV1.42, pendingLocation
				pid[index].PV1[indexPV1].pendingLocation = {};
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.pointOfCare = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.1&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.room = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.2&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.bed = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.3&apos;]; }
				pid[index].PV1[indexPV1].pendingLocation.facility = {};
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.facility.universalId =  pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.facility.universalIdType =  pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].pendingLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;]; }
					else delete pid[index].PV1[indexPV1].pendingLocation.facility;
				}
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.locationStatus = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.5&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.personLocationType = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.6&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.building = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.7&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.floor = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.8&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.locationDescription = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].pendingLocation).length == 0) {
					delete pid[index].PV1[indexPV1].pendingLocation;
				}
		
				// PV1.43, priorTemporaryLocation
				pid[index].PV1[indexPV1].priorTemporaryLocation = {};
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.pointOfCare = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.1&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.room = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.2&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.bed = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.3&apos;]; }
				pid[index].PV1[indexPV1].priorTemporaryLocation.facility = {};
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.facility.universalId =  pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.facility.universalIdType =  pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].priorTemporaryLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;]; }
					else delete pid[index].PV1[indexPV1].priorTemporaryLocation.facility;
				}
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.locationStatus = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.5&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.personLocationType = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.6&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.building = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.7&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.floor = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.8&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.locationDescription = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].priorTemporaryLocation).length == 0) {
					delete pid[index].PV1[indexPV1].priorTemporaryLocation;
				}
		
				// PV1.44, admitDateTime
				if (pv1Seg[&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].admitDateTime = pv1Seg[&apos;PV1.44&apos;][&apos;PV1.44.1&apos;]; }
		
				// PV1.45, dischargeDateTime
				if (pv1Seg[&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dischargeDateTime = pv1Seg[&apos;PV1.45&apos;][&apos;PV1.45.1&apos;]; }
		
				// PV1.46, currentPatientBalance
				if (pv1Seg[&apos;PV1.46&apos;][&apos;PV1.46.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].currentPatientBalance = pv1Seg[&apos;PV1.46&apos;][&apos;PV1.46.1&apos;]; }
		
				// PV1.47, totalCharges
				if (pv1Seg[&apos;PV1.47&apos;][&apos;PV1.47.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].totalCharges = pv1Seg[&apos;PV1.47&apos;][&apos;PV1.47.1&apos;]; }
		
				// PV1.48, totalAdjustments
				if (pv1Seg[&apos;PV1.48&apos;][&apos;PV1.48.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].totalAdjustments = pv1Seg[&apos;PV1.48&apos;][&apos;PV1.48.1&apos;]; }
		
				// PV1.49, totalPayments
				if (pv1Seg[&apos;PV1.49&apos;][&apos;PV1.49.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].totalPayments = pv1Seg[&apos;PV1.49&apos;][&apos;PV1.49.1&apos;]; }
		
				// PV1.50, alternateVisitID
				pid[index].PV1[indexPV1].alternateVisitID = {};
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.id = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.1&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.identifierCheckDigit = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.2&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.codeIdentifyingCheckDigitScheme = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.3&apos;]; }
				pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority = {};
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority.universalId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority.universalIdType = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority).length == 0) {
					if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;]; }
					else delete pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority;
				}
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.idTypeCode = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.5&apos;]; }
				pid[index].PV1[indexPV1].alternateVisitID.assigningFacility = {};
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningFacility.namespaceId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.1&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningFacility.universalId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.2&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningFacility.universalIdType = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].alternateVisitID.assigningFacility).length == 0) {
					if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningFacility.namespaceId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;]; }
					else delete pid[index].PV1[indexPV1].alternateVisitID.assigningFacility;
				}
				if (Object.keys(pid[index].PV1[indexPV1].alternateVisitID).length == 0) {
					delete pid[index].PV1[indexPV1].alternateVisitID;
				}
		
				// PV1.51, visitIndicator
				if (pv1Seg[&apos;PV1.51&apos;][&apos;PV1.51.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitIndicator = pv1Seg[&apos;PV1.51&apos;][&apos;PV1.51.1&apos;]; }
		
				// PV1.52, otherHealthcareProvider
				pid[index].PV1[indexPV1].otherHealthcareProvider = {};
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.1&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.lastName = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.2&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.firstName = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.3&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.middleInitOrName = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.4&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.suffix = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.5&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.prefix = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.6&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.degree = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.7&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.sourceTable = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.8&apos;]; }
				pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority = {};
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.1&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority.universalId = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.2&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority.universalIdType = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority).length == 0) {
					if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;]; }
					else delete pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority;
				}
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.10&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.nameTypeCode = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.10&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.11&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.identifierCheckDigit = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.11&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.12&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.codeIdentifyingCheckDigitScheme = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.12&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.13&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.identifierTypeCode = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.13&apos;]; }
				pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility = {};
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.1&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility.universalId = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.2&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility.universalIdType = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility).length == 0) {
					if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;]; }
					else delete pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility;
				}
				if (Object.keys(pid[index].PV1[indexPV1].otherHealthcareProvider).length == 0) {
					delete pid[index].PV1[indexPV1].otherHealthcareProvider;
				}
		
				// clean up PV1 and increment indexPV1
				if (Object.keys(pid[index].PV1[indexPV1]).length == 0) {
					delete pid[index].PV1[indexPV1];
				} else {
					indexPV1++;
				}
			}

			// Clean up the PV1 object if it&apos;s empty
			if (pid[index].PV1[0] == null){
				delete pid[index].PV1;
			}
		}

		// Increment the PID index
		index++;
	}
}

// Optional: save a copy of the completed PID segment for reference later
//channelMap.put(&quot;pid&quot;, pid); // uncomment to save

// If it has content, add the PID segment to the hl7JSON object
if (pid &amp;&amp; Object.keys(pid).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.PID = pid;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// Pull out the PID JSON to embed the PV1 segments in
var pid = JSON.parse($(&apos;hl7JSON&apos;)).content.PID;

// PID iteration, in order to grab related PV1&apos;s
if (msg[&apos;PID&apos;].length() &gt; 0) {

	// PID is a required to have a PV1, but if the PID was blank and was removed from the JSON, just create a new one to add the PV1 into
	if (!pid) {
		pid = [{}];
	}
	
	var index = 0;
	for each (seg in msg.PID) {

		// PV1 (PID)
		var pv1Group = getSegmentsAfter(msg,seg,&apos;PV1&apos;,false);
		if (pv1Group.length &gt; 0 &amp;&amp; pid) {
			pid[index].PV1 = [];
			var indexPV1 = 0;
			for each (pv1Seg in pv1Group) {
				pid[index].PV1[indexPV1] = {};
		
				// PV1.1, setId
				if (pv1Seg[&apos;PV1.1&apos;][&apos;PV1.1.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].setId = pv1Seg[&apos;PV1.1&apos;][&apos;PV1.1.1&apos;]; }
		
				// PV1.2, patientClass
				if (pv1Seg[&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].patientClass = pv1Seg[&apos;PV1.2&apos;][&apos;PV1.2.1&apos;]; }
		
				// PV1.3, assignedPatientLocation
				pid[index].PV1[indexPV1].assignedPatientLocation = {};
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.pointOfCare = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.1&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.room = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.2&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.bed = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.3&apos;]; }
				pid[index].PV1[indexPV1].assignedPatientLocation.facility = {};
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.facility.universalId =  pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.facility.universalIdType =  pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].assignedPatientLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;]; }
					else delete pid[index].PV1[indexPV1].assignedPatientLocation.facility;
				}
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.locationStatus = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.5&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.personLocationType = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.6&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.building = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.7&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.floor = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.8&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.locationDescription = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].assignedPatientLocation).length == 0) {
					delete pid[index].PV1[indexPV1].assignedPatientLocation;
				}
		
				// PV1.4, admissionType
				if (pv1Seg[&apos;PV1.4&apos;][&apos;PV1.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].admissionType = pv1Seg[&apos;PV1.4&apos;][&apos;PV1.4.1&apos;]; }
		
				// PV1.5, preadmitNumber
				pid[index].PV1[indexPV1].preadmitNumber = {};
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.id = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.1&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.identifierCheckDigit = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.2&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.codeIdentifyingCheckDigitScheme = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.3&apos;]; }
				pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority = {};
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority.universalId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority.universalIdType = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority).length == 0) {
					if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;]; }
					else delete pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority;
				}
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.idTypeCode = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.5&apos;]; }
				pid[index].PV1[indexPV1].preadmitNumber.assigningFacility = {};
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningFacility.namespaceId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.1&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningFacility.universalId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.2&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningFacility.universalIdType = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].preadmitNumber.assigningFacility).length == 0) {
					if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningFacility.namespaceId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;]; }
					else delete pid[index].PV1[indexPV1].preadmitNumber.assigningFacility;
				}
				if (Object.keys(pid[index].PV1[indexPV1].preadmitNumber).length == 0) {
					delete pid[index].PV1[indexPV1].preadmitNumber;
				}
		
				// PV1.6, priorPatientLocation
				pid[index].PV1[indexPV1].priorPatientLocation = {};
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.pointOfCare = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.1&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.room = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.2&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.bed = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.3&apos;]; }
				pid[index].PV1[indexPV1].priorPatientLocation.facility = {};
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.facility.universalId =  pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.facility.universalIdType =  pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].priorPatientLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;]; }
					else delete pid[index].PV1[indexPV1].priorPatientLocation.facility;
				}
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.locationStatus = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.5&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.personLocationType = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.6&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.building = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.7&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.floor = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.8&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.locationDescription = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].priorPatientLocation).length == 0) {
					delete pid[index].PV1[indexPV1].priorPatientLocation;
				}
		
				// PV1.7, attendingDoctor
				pid[index].PV1[indexPV1].attendingDoctor = [];
				for each (field in pv1Seg[&apos;PV1.7&apos;]) {
					var block = {};
					if (field[&apos;PV1.7.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PV1.7.1&apos;]; }
					if (field[&apos;PV1.7.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PV1.7.2&apos;]; }
					if (field[&apos;PV1.7.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PV1.7.3&apos;]; }
					if (field[&apos;PV1.7.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PV1.7.4&apos;]; }
					if (field[&apos;PV1.7.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PV1.7.5&apos;]; }
					if (field[&apos;PV1.7.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PV1.7.6&apos;]; }
					if (field[&apos;PV1.7.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PV1.7.7&apos;]; }
					if (field[&apos;PV1.7.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PV1.7.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.1&apos;]; }
					if (field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.2&apos;]; }
					if (field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PV1.7.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.7.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PV1.7.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PV1.7.10&apos;]; }
					if (field[&apos;PV1.7.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV1.7.11&apos;]; }
					if (field[&apos;PV1.7.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV1.7.12&apos;]; }
					if (field[&apos;PV1.7.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PV1.7.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.1&apos;]; }
					if (field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.2&apos;]; }
					if (field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PV1.7.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.7.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PV1[indexPV1].attendingDoctor.push(block);
					}
				}
				if (pid[index].PV1[indexPV1].attendingDoctor.length == 0) {
					delete pid[index].PV1[indexPV1].attendingDoctor;
				}
		
				// PV1.8, referringDoctor
				pid[index].PV1[indexPV1].referringDoctor = [];
				for each (field in pv1Seg[&apos;PV1.8&apos;]) {
					var block = {};
					if (field[&apos;PV1.8.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PV1.8.1&apos;]; }
					if (field[&apos;PV1.8.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PV1.8.2&apos;]; }
					if (field[&apos;PV1.8.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PV1.8.3&apos;]; }
					if (field[&apos;PV1.8.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PV1.8.4&apos;]; }
					if (field[&apos;PV1.8.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PV1.8.5&apos;]; }
					if (field[&apos;PV1.8.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PV1.8.6&apos;]; }
					if (field[&apos;PV1.8.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PV1.8.7&apos;]; }
					if (field[&apos;PV1.8.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PV1.8.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.1&apos;]; }
					if (field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.2&apos;]; }
					if (field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PV1.8.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.8.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PV1.8.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PV1.8.10&apos;]; }
					if (field[&apos;PV1.8.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV1.8.11&apos;]; }
					if (field[&apos;PV1.8.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV1.8.12&apos;]; }
					if (field[&apos;PV1.8.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PV1.8.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.1&apos;]; }
					if (field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.2&apos;]; }
					if (field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PV1.8.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.8.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PV1[indexPV1].referringDoctor.push(block);
					}
				}
				if (pid[index].PV1[indexPV1].referringDoctor.length == 0) {
					delete pid[index].PV1[indexPV1].referringDoctor;
				}
				
				// PV1.9, consultingDoctor
				pid[index].PV1[indexPV1].consultingDoctor = [];
				for each (field in pv1Seg[&apos;PV1.9&apos;]) {
					var block = {};
					if (field[&apos;PV1.9.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PV1.9.1&apos;]; }
					if (field[&apos;PV1.9.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PV1.9.2&apos;]; }
					if (field[&apos;PV1.9.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PV1.9.3&apos;]; }
					if (field[&apos;PV1.9.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PV1.9.4&apos;]; }
					if (field[&apos;PV1.9.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PV1.9.5&apos;]; }
					if (field[&apos;PV1.9.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PV1.9.6&apos;]; }
					if (field[&apos;PV1.9.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PV1.9.7&apos;]; }
					if (field[&apos;PV1.9.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PV1.9.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.1&apos;]; }
					if (field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.2&apos;]; }
					if (field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PV1.9.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.9.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PV1.9.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PV1.9.10&apos;]; }
					if (field[&apos;PV1.9.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV1.9.11&apos;]; }
					if (field[&apos;PV1.9.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV1.9.12&apos;]; }
					if (field[&apos;PV1.9.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PV1.9.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.1&apos;]; }
					if (field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.2&apos;]; }
					if (field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PV1.9.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.9.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PV1[indexPV1].consultingDoctor.push(block);
					}
				}
				if (pid[index].PV1[indexPV1].consultingDoctor.length == 0) {
					delete pid[index].PV1[indexPV1].consultingDoctor;
				}
				
				// PV1.10, hospitalService
				if (pv1Seg[&apos;PV1.10&apos;][&apos;PV1.10.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].hospitalService = pv1Seg[&apos;PV1.10&apos;][&apos;PV1.10.1&apos;]; }
		
				// PV1.11, temporaryLocation
				pid[index].PV1[indexPV1].temporaryLocation = {};
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.pointOfCare = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.1&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.room = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.2&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.bed = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.3&apos;]; }
				pid[index].PV1[indexPV1].temporaryLocation.facility = {};
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.facility.universalId =  pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.facility.universalIdType =  pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].temporaryLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;]; }
					else delete pid[index].PV1[indexPV1].temporaryLocation.facility;
				}
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.locationStatus = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.5&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.personLocationType = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.6&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.building = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.7&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.floor = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.8&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.locationDescription = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].temporaryLocation).length == 0) {
					delete pid[index].PV1[indexPV1].temporaryLocation;
				}
		
				// PV1.12, preadmitTestIndicator
				if (pv1Seg[&apos;PV1.12&apos;][&apos;PV1.12.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitTestIndicator = pv1Seg[&apos;PV1.12&apos;][&apos;PV1.12.1&apos;]; }
		
				// PV1.13, readmissionIndicator
				if (pv1Seg[&apos;PV1.13&apos;][&apos;PV1.13.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].readmissionIndicator = pv1Seg[&apos;PV1.13&apos;][&apos;PV1.13.1&apos;]; }
		
				// PV1.14, admitSource
				if (pv1Seg[&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].admitSource = pv1Seg[&apos;PV1.14&apos;][&apos;PV1.14.1&apos;]; }
		
				// PV1.15, ambulatoryStatus
				pid[index].PV1[indexPV1].ambulatoryStatus = [];
				for each (field in pv1Seg[&apos;PV1.15&apos;]) {
					if (field[&apos;PV1.15.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].ambulatoryStatus.push(field[&apos;PV1.15.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].ambulatoryStatus.length == 0){
					delete pid[index].PV1[indexPV1].ambulatoryStatus;
				}
		
				// PV1.16, vipIndicator
				if (pv1Seg[&apos;PV1.16&apos;][&apos;PV1.16.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].vipIndicator = pv1Seg[&apos;PV1.16&apos;][&apos;PV1.16.1&apos;]; }
		
				// PV1.17, admittingDoctor
				pid[index].PV1[indexPV1].admittingDoctor = [];
				for each (field in pv1Seg[&apos;PV1.17&apos;]) {
					var block = {};
					if (field[&apos;PV1.17.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PV1.17.1&apos;]; }
					if (field[&apos;PV1.17.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PV1.17.2&apos;]; }
					if (field[&apos;PV1.17.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PV1.17.3&apos;]; }
					if (field[&apos;PV1.17.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PV1.17.4&apos;]; }
					if (field[&apos;PV1.17.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PV1.17.5&apos;]; }
					if (field[&apos;PV1.17.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PV1.17.6&apos;]; }
					if (field[&apos;PV1.17.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PV1.17.7&apos;]; }
					if (field[&apos;PV1.17.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PV1.17.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.1&apos;]; }
					if (field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.2&apos;]; }
					if (field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PV1.17.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.17.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PV1.17.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PV1.17.10&apos;]; }
					if (field[&apos;PV1.17.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV1.17.11&apos;]; }
					if (field[&apos;PV1.17.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV1.17.12&apos;]; }
					if (field[&apos;PV1.17.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PV1.17.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.1&apos;]; }
					if (field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.2&apos;]; }
					if (field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PV1.17.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.17.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PV1[indexPV1].admittingDoctor.push(block);
					}
				}
				if (pid[index].PV1[indexPV1].admittingDoctor.length == 0) {
					delete pid[index].PV1[indexPV1].admittingDoctor;
				}
				
				// PV1.18, patientType
				if (pv1Seg[&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].patientType = pv1Seg[&apos;PV1.18&apos;][&apos;PV1.18.1&apos;]; }
		
				// PV1.19, visitNumber
				pid[index].PV1[indexPV1].visitNumber = {};
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.id = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.1&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.identifierCheckDigit = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.2&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.codeIdentifyingCheckDigitScheme = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.3&apos;]; }
				pid[index].PV1[indexPV1].visitNumber.assigningAuthority = {};
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningAuthority.universalId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningAuthority.universalIdType = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].visitNumber.assigningAuthority).length == 0) {
					if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;]; }
					else delete pid[index].PV1[indexPV1].visitNumber.assigningAuthority;
				}
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.idTypeCode = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.5&apos;]; }
				pid[index].PV1[indexPV1].visitNumber.assigningFacility = {};
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningFacility.namespaceId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.1&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningFacility.universalId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.2&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningFacility.universalIdType = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].visitNumber.assigningFacility).length == 0) {
					if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningFacility.namespaceId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;]; }
					else delete pid[index].PV1[indexPV1].visitNumber.assigningFacility;
				}
				if (Object.keys(pid[index].PV1[indexPV1].visitNumber).length == 0) {
					delete pid[index].PV1[indexPV1].visitNumber;
				}
				
				// PV1.20, financialClass
				pid[index].PV1[indexPV1].financialClass = {};
				if (pv1Seg[&apos;PV1.20&apos;][&apos;PV1.20.1&apos;].toString() != &quot;&quot;) {pid[index].PV1[indexPV1].financialClass.financialClass = pv1Seg[&apos;PV1.20&apos;][&apos;PV1.20.1&apos;]; }
				if (pv1Seg[&apos;PV1.20&apos;][&apos;PV1.20.2&apos;].toString() != &quot;&quot;) {pid[index].PV1[indexPV1].financialClass.effectiveDate = pv1Seg[&apos;PV1.20&apos;][&apos;PV1.20.2&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].financialClass).length == 0) {
					delete pid[index].PV1[indexPV1].financialClass;
				}
		
				// PV1.21, chargePriceIndicator
				if (pv1Seg[&apos;PV1.21&apos;][&apos;PV1.21.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].chargePriceIndicator = pv1Seg[&apos;PV1.21&apos;][&apos;PV1.21.1&apos;]; }
		
				// PV1.22, courtesyCode
				if (pv1Seg[&apos;PV1.22&apos;][&apos;PV1.22.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].courtesyCode = pv1Seg[&apos;PV1.22&apos;][&apos;PV1.22.1&apos;]; }
		
				// PV1.23, creditRating
				if (pv1Seg[&apos;PV1.23&apos;][&apos;PV1.23.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].creditRating = pv1Seg[&apos;PV1.23&apos;][&apos;PV1.23.1&apos;]; }
		
				// PV1.24, contractCode
				pid[index].PV1[indexPV1].contractCode = [];
				for each (field in pv1Seg[&apos;PV1.24&apos;]) {
					if (field[&apos;PV1.24.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].contractCode.push(field[&apos;PV1.24.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].contractCode.length == 0) {
					delete pid[index].PV1[indexPV1].contractCode;
				}
		
				// PV1.25, contractEffectiveDate
				pid[index].PV1[indexPV1].contractEffectiveDate = [];
				for each (field in pv1Seg[&apos;PV1.25&apos;]) {
					if (field[&apos;PV1.25.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].contractEffectiveDate.push(field[&apos;PV1.25.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].contractEffectiveDate.length == 0) {
					delete pid[index].PV1[indexPV1].contractEffectiveDate;
				}
		
				// PV1.26, contractAmount
				pid[index].PV1[indexPV1].contractAmount = [];
				for each (field in pv1Seg[&apos;PV1.26&apos;]) {
					if (field[&apos;PV1.26.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].contractAmount.push(field[&apos;PV1.26.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].contractAmount.length == 0) {
					delete pid[index].PV1[indexPV1].contractAmount;
				}
		
				// PV1.27, contractPeriod
				pid[index].PV1[indexPV1].contractPeriod = [];
				for each (field in pv1Seg[&apos;PV1.27&apos;]) {
					if (field[&apos;PV1.27.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].contractPeriod.push(field[&apos;PV1.27.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].contractPeriod.length == 0) {
					delete pid[index].PV1[indexPV1].contractPeriod;
				}
		
				// PV1.28, interestCode
				if (pv1Seg[&apos;PV1.28&apos;][&apos;PV1.28.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].interestCode = pv1Seg[&apos;PV1.28&apos;][&apos;PV1.28.1&apos;]; }
		
				// PV1.29, transferToBadDebtCode
				if (pv1Seg[&apos;PV1.29&apos;][&apos;PV1.29.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].transferToBadDebtCode = pv1Seg[&apos;PV1.29&apos;][&apos;PV1.29.1&apos;]; }
		
				// PV1.30, transferToBadDebtDate
				if (pv1Seg[&apos;PV1.30&apos;][&apos;PV1.30.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].transferToBadDebtDate = pv1Seg[&apos;PV1.30&apos;][&apos;PV1.30.1&apos;]; }
		
				// PV1.31, badDebtAgencyCode
				if (pv1Seg[&apos;PV1.31&apos;][&apos;PV1.31.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].badDebtAgencyCode = pv1Seg[&apos;PV1.31&apos;][&apos;PV1.31.1&apos;]; }
		
				// PV1.32, badDebtTransferAmount
				if (pv1Seg[&apos;PV1.32&apos;][&apos;PV1.32.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].badDebtTransferAmount = pv1Seg[&apos;PV1.32&apos;][&apos;PV1.32.1&apos;]; }
		
				// PV1.33, badDebtRecoveryAmount
				if (pv1Seg[&apos;PV1.33&apos;][&apos;PV1.33.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].badDebtRecoveryAmount = pv1Seg[&apos;PV1.33&apos;][&apos;PV1.33.1&apos;]; }
		
				// PV1.34, deleteAccountIndicator
				if (pv1Seg[&apos;PV1.34&apos;][&apos;PV1.34.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].deleteAccountIndicator = pv1Seg[&apos;PV1.34&apos;][&apos;PV1.34.1&apos;]; }
		
				// PV1.35, deleteAccountDate
				if (pv1Seg[&apos;PV1.35&apos;][&apos;PV1.35.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].deleteAccountDate = pv1Seg[&apos;PV1.35&apos;][&apos;PV1.35.1&apos;]; }
		
				// PV1.36, dischargeDisposition
				if (pv1Seg[&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dischargeDisposition = pv1Seg[&apos;PV1.36&apos;][&apos;PV1.36.1&apos;]; }
		
				// PV1.37, dischargedtoLocation
				pid[index].PV1[indexPV1].dischargedtoLocation = {};
				if (pv1Seg[&apos;PV1.37&apos;][&apos;PV1.37.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dischargedtoLocation.dischargeLocation = pv1Seg[&apos;PV1.37&apos;][&apos;PV1.37.1&apos;]; }
				if (pv1Seg[&apos;PV1.37&apos;][&apos;PV1.37.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dischargedtoLocation.effectiveDate = pv1Seg[&apos;PV1.37&apos;][&apos;PV1.37.2&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].dischargedtoLocation).length == 0) {
					delete pid[index].PV1[indexPV1].dischargedtoLocation;
				}
		
				// PV1.38, dietType
				if (pv1Seg[&apos;PV1.38&apos;][&apos;PV1.38.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dietType = pv1Seg[&apos;PV1.38&apos;][&apos;PV1.38.1&apos;]; }
		
				// PV1.39, servicingFacility
				if (pv1Seg[&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].servicingFacility = pv1Seg[&apos;PV1.39&apos;][&apos;PV1.39.1&apos;]; }
		
				// PV1.40, bedStatus
				if (pv1Seg[&apos;PV1.40&apos;][&apos;PV1.40.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].bedStatus = pv1Seg[&apos;PV1.40&apos;][&apos;PV1.40.1&apos;]; }
		
				// PV1.41, accountStatus
				if (pv1Seg[&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].accountStatus = pv1Seg[&apos;PV1.41&apos;][&apos;PV1.41.1&apos;]; }
		
				// PV1.42, pendingLocation
				pid[index].PV1[indexPV1].pendingLocation = {};
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.pointOfCare = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.1&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.room = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.2&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.bed = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.3&apos;]; }
				pid[index].PV1[indexPV1].pendingLocation.facility = {};
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.facility.universalId =  pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.facility.universalIdType =  pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].pendingLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;]; }
					else delete pid[index].PV1[indexPV1].pendingLocation.facility;
				}
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.locationStatus = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.5&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.personLocationType = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.6&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.building = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.7&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.floor = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.8&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.locationDescription = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].pendingLocation).length == 0) {
					delete pid[index].PV1[indexPV1].pendingLocation;
				}
		
				// PV1.43, priorTemporaryLocation
				pid[index].PV1[indexPV1].priorTemporaryLocation = {};
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.pointOfCare = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.1&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.room = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.2&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.bed = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.3&apos;]; }
				pid[index].PV1[indexPV1].priorTemporaryLocation.facility = {};
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.facility.universalId =  pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.facility.universalIdType =  pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].priorTemporaryLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;]; }
					else delete pid[index].PV1[indexPV1].priorTemporaryLocation.facility;
				}
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.locationStatus = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.5&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.personLocationType = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.6&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.building = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.7&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.floor = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.8&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.locationDescription = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].priorTemporaryLocation).length == 0) {
					delete pid[index].PV1[indexPV1].priorTemporaryLocation;
				}
		
				// PV1.44, admitDateTime
				if (pv1Seg[&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].admitDateTime = pv1Seg[&apos;PV1.44&apos;][&apos;PV1.44.1&apos;]; }
		
				// PV1.45, dischargeDateTime
				if (pv1Seg[&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dischargeDateTime = pv1Seg[&apos;PV1.45&apos;][&apos;PV1.45.1&apos;]; }
		
				// PV1.46, currentPatientBalance
				if (pv1Seg[&apos;PV1.46&apos;][&apos;PV1.46.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].currentPatientBalance = pv1Seg[&apos;PV1.46&apos;][&apos;PV1.46.1&apos;]; }
		
				// PV1.47, totalCharges
				if (pv1Seg[&apos;PV1.47&apos;][&apos;PV1.47.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].totalCharges = pv1Seg[&apos;PV1.47&apos;][&apos;PV1.47.1&apos;]; }
		
				// PV1.48, totalAdjustments
				if (pv1Seg[&apos;PV1.48&apos;][&apos;PV1.48.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].totalAdjustments = pv1Seg[&apos;PV1.48&apos;][&apos;PV1.48.1&apos;]; }
		
				// PV1.49, totalPayments
				if (pv1Seg[&apos;PV1.49&apos;][&apos;PV1.49.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].totalPayments = pv1Seg[&apos;PV1.49&apos;][&apos;PV1.49.1&apos;]; }
		
				// PV1.50, alternateVisitID
				pid[index].PV1[indexPV1].alternateVisitID = {};
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.id = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.1&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.identifierCheckDigit = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.2&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.codeIdentifyingCheckDigitScheme = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.3&apos;]; }
				pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority = {};
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority.universalId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority.universalIdType = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority).length == 0) {
					if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;]; }
					else delete pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority;
				}
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.idTypeCode = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.5&apos;]; }
				pid[index].PV1[indexPV1].alternateVisitID.assigningFacility = {};
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningFacility.namespaceId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.1&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningFacility.universalId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.2&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningFacility.universalIdType = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].alternateVisitID.assigningFacility).length == 0) {
					if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningFacility.namespaceId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;]; }
					else delete pid[index].PV1[indexPV1].alternateVisitID.assigningFacility;
				}
				if (Object.keys(pid[index].PV1[indexPV1].alternateVisitID).length == 0) {
					delete pid[index].PV1[indexPV1].alternateVisitID;
				}
		
				// PV1.51, visitIndicator
				if (pv1Seg[&apos;PV1.51&apos;][&apos;PV1.51.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitIndicator = pv1Seg[&apos;PV1.51&apos;][&apos;PV1.51.1&apos;]; }
		
				// PV1.52, otherHealthcareProvider
				pid[index].PV1[indexPV1].otherHealthcareProvider = {};
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.1&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.lastName = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.2&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.firstName = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.3&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.middleInitOrName = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.4&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.suffix = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.5&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.prefix = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.6&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.degree = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.7&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.sourceTable = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.8&apos;]; }
				pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority = {};
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.1&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority.universalId = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.2&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority.universalIdType = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority).length == 0) {
					if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;]; }
					else delete pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority;
				}
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.10&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.nameTypeCode = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.10&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.11&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.identifierCheckDigit = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.11&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.12&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.codeIdentifyingCheckDigitScheme = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.12&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.13&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.identifierTypeCode = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.13&apos;]; }
				pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility = {};
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.1&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility.universalId = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.2&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility.universalIdType = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility).length == 0) {
					if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;]; }
					else delete pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility;
				}
				if (Object.keys(pid[index].PV1[indexPV1].otherHealthcareProvider).length == 0) {
					delete pid[index].PV1[indexPV1].otherHealthcareProvider;
				}
		
				// clean up PV1 and increment indexPV1
				if (Object.keys(pid[index].PV1[indexPV1]).length == 0) {
					delete pid[index].PV1[indexPV1];
				} else {
					indexPV1++;
				}
			}

			// Clean up the PV1 object if it&apos;s empty
			if (pid[index].PV1[0] == null){
				delete pid[index].PV1;
			}
		}

		// Increment the PID index
		index++;
	}
}

// Optional: save a copy of the completed PID segment for reference later
//channelMap.put(&quot;pid&quot;, pid); // uncomment to save

// If it has content, add the PID segment to the hl7JSON object
if (pid &amp;&amp; Object.keys(pid).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.PID = pid;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>5</sequenceNumber>
          <name>----PV2 (Additional Patient Visit Info) Segment - REQUIRES PV1 MAPPING STEP ABOVE</name>
          <script>// Pull out the PID JSON to embed the PV1 segments in
var pid = JSON.parse($(&apos;hl7JSON&apos;)).content.PID;

// PID iteration, in order to grab related PV1&apos;s
if (msg[&apos;PID&apos;].length() &gt; 0) {

	// PID is required to have a PV1, but if the PID was blank and was removed from the JSON, just create a new one to add the PV1 into
	if (!pid) {
		pid = [{}];
	}

	var index = 0;
	for each (seg in msg.PID) {

		// PV1 (PID)
		var pv1Group = getSegmentsAfter(msg,seg,&apos;PV1&apos;,false);
		if (pv1Group.length &gt; 0 &amp;&amp; pid) {
			var indexPV1 = 0;

			// PV1 is required for PV2, so create it if it&apos;s not already present in the PID object
			if (!pid[index].PV1) {
				pid[index].PV1 = [{}];
			}
				
			for each (pv1Seg in pv1Group) {

				// PV2 (PV1) [PID]
				var pv2Group = getSegmentsAfter(msg,pv1Seg,&apos;PV2&apos;,true);
				if (pv2Group.length &gt; 0 &amp;&amp; pid[index].PV1) {
					pid[index].PV1[indexPV1].PV2 = [];
					var indexPV2 = 0;
					for each (pv2Seg in pv2Group) {
						pid[index].PV1[indexPV1].PV2[indexPV2] = {};
		
						// PV2.1, priorPendingLocation
						pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation = {};
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.pointOfCare = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.1&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.room = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.2&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.bed = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.3&apos;]; }
						pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility = {};
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility.nameSpaceId =  pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.1&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility.universalId =  pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.2&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility.universalIdType =  pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.3&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility).length == 0) {
							if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility.nameSpaceId = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;]; }
							else delete pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility;
						}
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.locationStatus = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.5&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.personLocationType = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.6&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.building = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.7&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.floor = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.8&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.locationDescription = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.9&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation;
						}
		
						// PV2.2, accommodationCode
						pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode = {};
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.id = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.1&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.text = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.2&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.codingSystem = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.3&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.altId = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.4&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.altText = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.5&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.altCodingSystem = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.6&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode;
						}
		
						// PV2.3, admitReason
						pid[index].PV1[indexPV1].PV2[indexPV2].admitReason = {};
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.id = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.1&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.text = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.2&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.codingSystem = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.3&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.altId = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.4&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.altText = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.5&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.altCodingSystem = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.6&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].admitReason).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].admitReason;
						}
		
						// PV2.4, transferReason
						pid[index].PV1[indexPV1].PV2[indexPV2].transferReason = {};
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.id = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.1&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.text = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.2&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.codingSystem = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.3&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.altId = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.4&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.altText = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.5&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.altCodingSystem = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.6&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].transferReason).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].transferReason;
						}
		
						// PV2.5, patientValuables
						pid[index].PV1[indexPV1].PV2[indexPV2].patientValuables = [];
						for each (field in pv2Seg[&apos;PV2.5&apos;]) {
							if (field[&apos;PV2.5.1&apos;].toString() != &quot;&quot;) {
								pid[index].PV1[indexPV1].PV2[indexPV2].patientValuables.push(field[&apos;PV2.5.1&apos;]);
							}
						}
						if (pid[index].PV1[indexPV1].PV2[indexPV2].patientValuables.length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].patientValuables;
						}
		
						// PV2.6, patientValuablesLocation
						if (pv2Seg[&apos;PV2.6&apos;][&apos;PV2.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].patientValuablesLocation = pv2Seg[&apos;PV2.6&apos;][&apos;PV2.6.1&apos;]; }
		
						// PV2.7, visitUserCode
						if (pv2Seg[&apos;PV2.7&apos;][&apos;PV2.7.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitUserCode = pv2Seg[&apos;PV2.7&apos;][&apos;PV2.7.1&apos;]; }
						
						// PV2.8, expectedAdmitDateTime
						if (pv2Seg[&apos;PV2.8&apos;][&apos;PV2.8.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedAdmitDateTime = pv2Seg[&apos;PV2.8&apos;][&apos;PV2.8.1&apos;]; }
						
						// PV2.9, expectedDischargeDateTime
						if (pv2Seg[&apos;PV2.9&apos;][&apos;PV2.9.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedDischargeDateTime = pv2Seg[&apos;PV2.9&apos;][&apos;PV2.9.1&apos;]; }
						
						// PV2.10, estimatedLengthInpatientStay
						if (pv2Seg[&apos;PV2.10&apos;][&apos;PV2.10.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].estimatedLengthInpatientStay = pv2Seg[&apos;PV2.10&apos;][&apos;PV2.10.1&apos;]; }
						
						// PV2.11, actualLengthInpatientStay
						if (pv2Seg[&apos;PV2.11&apos;][&apos;PV2.11.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].actualLengthInpatientStay = pv2Seg[&apos;PV2.11&apos;][&apos;PV2.11.1&apos;]; }
						
						// PV2.12, visitDescription
						if (pv2Seg[&apos;PV2.12&apos;][&apos;PV2.12.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitDescription = pv2Seg[&apos;PV2.12&apos;][&apos;PV2.12.1&apos;]; }
						
						// PV2.13, referralSourceCode
						pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode = {};
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.1&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.lastName = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.2&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.firstName = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.3&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.middleInitOrName = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.4&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.suffix = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.5&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.prefix = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.6&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.degree = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.7&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.sourceTable = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.8&apos;]; }
						pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority = {};
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.1&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority.universalId = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.2&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority.universalIdType = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.3&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority).length == 0) {
							if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;]; }
							else delete pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority;
						}
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.10&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.nameTypeCode = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.10&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.11&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.identifierCheckDigit = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.11&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.12&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.codeIdentifyingCheckDigitScheme = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.12&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.13&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.identifierTypeCode = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.13&apos;]; }
						pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility = {};
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.1&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility.universalId = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.2&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility.universalIdType = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.3&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility).length == 0) {
							if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;]; }
							else delete pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility;
						}
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode;
						}
		
						// PV2.14, previousServiceDate
						if (pv2Seg[&apos;PV2.14&apos;][&apos;PV2.14.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].previousServiceDate = pv2Seg[&apos;PV2.14&apos;][&apos;PV2.14.1&apos;]; }
						
						// PV2.15, employmentIllnessRelatedIndicator
						if (pv2Seg[&apos;PV2.15&apos;][&apos;PV2.15.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].employmentIllnessRelatedIndicator = pv2Seg[&apos;PV2.15&apos;][&apos;PV2.15.1&apos;]; }
						
						// PV2.16, purgeStatusCode
						if (pv2Seg[&apos;PV2.16&apos;][&apos;PV2.16.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].purgeStatusCode = pv2Seg[&apos;PV2.16&apos;][&apos;PV2.16.1&apos;]; }
						
						// PV2.17, purgeStatusDate
						if (pv2Seg[&apos;PV2.17&apos;][&apos;PV2.17.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].purgeStatusDate = pv2Seg[&apos;PV2.17&apos;][&apos;PV2.17.1&apos;]; }
						
						// PV2.18, specialProgramCode
						if (pv2Seg[&apos;PV2.18&apos;][&apos;PV2.18.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].specialProgramCode = pv2Seg[&apos;PV2.18&apos;][&apos;PV2.18.1&apos;]; }
						
						// PV2.19, retentionIndicator
						if (pv2Seg[&apos;PV2.19&apos;][&apos;PV2.19.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].retentionIndicator = pv2Seg[&apos;PV2.19&apos;][&apos;PV2.19.1&apos;]; }
						
						// PV2.20, expectedNumInsurancePlans
						if (pv2Seg[&apos;PV2.20&apos;][&apos;PV2.20.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedNumInsurancePlans = pv2Seg[&apos;PV2.20&apos;][&apos;PV2.20.1&apos;]; }
						
						// PV2.21, visitPublicityCode
						if (pv2Seg[&apos;PV2.21&apos;][&apos;PV2.21.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitPublicityCode = pv2Seg[&apos;PV2.21&apos;][&apos;PV2.21.1&apos;]; }
						
						// PV2.22, visitProtectionIndicator
						if (pv2Seg[&apos;PV2.22&apos;][&apos;PV2.22.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitProtectionIndicator = pv2Seg[&apos;PV2.22&apos;][&apos;PV2.22.1&apos;]; }
						
						// PV2.23, clinicOrganizationName
						pid[index].PV1[indexPV1].PV2[indexPV2].clinicOrganizationName = [];
						for each (field in pv2Seg[&apos;PV2.23&apos;]) {
							var block = {};
							if (field[&apos;PV2.23.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;PV2.23.1&apos;]; }
							if (field[&apos;PV2.23.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;PV2.23.2&apos;]; }
							if (field[&apos;PV2.23.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;PV2.23.3&apos;]; }
							if (field[&apos;PV2.23.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV2.23.4&apos;]; }
							if (field[&apos;PV2.23.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV2.23.5&apos;]; }
							block.assigningAuthority = {};
							if (field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.1&apos;]; }
							if (field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.2&apos;]; }
							if (field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.3&apos;]; }
							if (Object.keys(block.assigningAuthority).length == 0) {
								if (field[&apos;PV2.23.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PV2.23.6&apos;]; }
								else delete block.assigningAuthority;
							}
							if (field[&apos;PV2.23.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PV2.23.7&apos;]; }
							block.assigningFacility = {};
							if (field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.1&apos;]; }
							if (field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.2&apos;]; }
							if (field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.3&apos;]; }
							if (Object.keys(block.assigningFacility).length == 0) {
								if (field[&apos;PV2.23.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PV2.23.8&apos;]; }
								else delete block.assigningFacility;
							}
							if (Object.keys(block).length &gt; 0) {
								pid[index].PV1[indexPV1].PV2[indexPV2].clinicOrganizationName.push(block);
							}
						}
						if (pid[index].PV1[indexPV1].PV2[indexPV2].clinicOrganizationName.length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].clinicOrganizationName;
						}
		
						// PV2.24, patientStatusCode
						if (pv2Seg[&apos;PV2.24&apos;][&apos;PV2.24.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].patientStatusCode = pv2Seg[&apos;PV2.24&apos;][&apos;PV2.24.1&apos;]; }
						
						// PV2.25, visitPriorityCode
						if (pv2Seg[&apos;PV2.25&apos;][&apos;PV2.25.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitPriorityCode = pv2Seg[&apos;PV2.25&apos;][&apos;PV2.25.1&apos;]; }
						
						// PV2.26, previousTreatmentDate
						if (pv2Seg[&apos;PV2.26&apos;][&apos;PV2.26.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].previousTreatmentDate = pv2Seg[&apos;PV2.26&apos;][&apos;PV2.26.1&apos;]; }
						
						// PV2.27, expectedDischargeDisposition
						if (pv2Seg[&apos;PV2.27&apos;][&apos;PV2.27.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedDischargeDisposition = pv2Seg[&apos;PV2.27&apos;][&apos;PV2.27.1&apos;]; }
						
						// PV2.28, signatureOnFileDate
						if (pv2Seg[&apos;PV2.28&apos;][&apos;PV2.28.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].signatureOnFileDate = pv2Seg[&apos;PV2.28&apos;][&apos;PV2.28.1&apos;]; }
						
						// PV2.29, firstSimilarIllnessDate
						if (pv2Seg[&apos;PV2.29&apos;][&apos;PV2.29.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].firstSimilarIllnessDate = pv2Seg[&apos;PV2.29&apos;][&apos;PV2.29.1&apos;]; }
						
						// PV2.30, patientChargeAdjustmentCode
						if (pv2Seg[&apos;PV2.30&apos;][&apos;PV2.30.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].patientChargeAdjustmentCode = pv2Seg[&apos;PV2.30&apos;][&apos;PV2.30.1&apos;]; }
						
						// PV2.31, recurringServiceCode
						if (pv2Seg[&apos;PV2.31&apos;][&apos;PV2.31.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].recurringServiceCode = pv2Seg[&apos;PV2.31&apos;][&apos;PV2.31.1&apos;]; }
						
						// PV2.32, billingMediaCode
						if (pv2Seg[&apos;PV2.32&apos;][&apos;PV2.32.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].billingMediaCode = pv2Seg[&apos;PV2.32&apos;][&apos;PV2.32.1&apos;]; }
						
						// PV2.33, expectedSurgeryDateTime
						if (pv2Seg[&apos;PV2.33&apos;][&apos;PV2.33.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedSurgeryDateTime = pv2Seg[&apos;PV2.33&apos;][&apos;PV2.33.1&apos;]; }
						
						// PV2.34, militaryPartnershipCode
						if (pv2Seg[&apos;PV2.34&apos;][&apos;PV2.34.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].militaryPartnershipCode = pv2Seg[&apos;PV2.34&apos;][&apos;PV2.34.1&apos;]; }
						
						// PV2.35, militaryNonAvailabilityCode
						if (pv2Seg[&apos;PV2.35&apos;][&apos;PV2.35.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].militaryNonAvailabilityCode = pv2Seg[&apos;PV2.35&apos;][&apos;PV2.35.1&apos;]; }
						
						// PV2.36, newbornBabyIndicator
						if (pv2Seg[&apos;PV2.36&apos;][&apos;PV2.36.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].newbornBabyIndicator = pv2Seg[&apos;PV2.36&apos;][&apos;PV2.36.1&apos;]; }
						
						// PV2.37, babyDetainedIndicator
						if (pv2Seg[&apos;PV2.37&apos;][&apos;PV2.37.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].babyDetainedIndicator = pv2Seg[&apos;PV2.37&apos;][&apos;PV2.37.1&apos;]; }
						
						// clean up PV2 and increment index
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2]).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2];
						} else {
							indexPV2++;
						}
					}
		
					// Clean up the PV2 object if it&apos;s empty
					if (pid[index].PV1[indexPV1].PV2[0] == null){
						delete pid[index].PV1[indexPV1].PV2;
					}
				}
			}

			// Increment the PV1 index
			indexPV1++;
		}

		// Increment the PID index
		index++;
	}
}

// Optional: save a copy of the completed PID segment for reference later
//channelMap.put(&quot;pid&quot;, pid); // uncomment to save

// Re-add the PID segment to the hl7JSON object
if (pid &amp;&amp; Object.keys(pid).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.PID = pid;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// Pull out the PID JSON to embed the PV1 segments in
var pid = JSON.parse($(&apos;hl7JSON&apos;)).content.PID;

// PID iteration, in order to grab related PV1&apos;s
if (msg[&apos;PID&apos;].length() &gt; 0) {

	// PID is required to have a PV1, but if the PID was blank and was removed from the JSON, just create a new one to add the PV1 into
	if (!pid) {
		pid = [{}];
	}

	var index = 0;
	for each (seg in msg.PID) {

		// PV1 (PID)
		var pv1Group = getSegmentsAfter(msg,seg,&apos;PV1&apos;,false);
		if (pv1Group.length &gt; 0 &amp;&amp; pid) {
			var indexPV1 = 0;

			// PV1 is required for PV2, so create it if it&apos;s not already present in the PID object
			if (!pid[index].PV1) {
				pid[index].PV1 = [{}];
			}
				
			for each (pv1Seg in pv1Group) {

				// PV2 (PV1) [PID]
				var pv2Group = getSegmentsAfter(msg,pv1Seg,&apos;PV2&apos;,true);
				if (pv2Group.length &gt; 0 &amp;&amp; pid[index].PV1) {
					pid[index].PV1[indexPV1].PV2 = [];
					var indexPV2 = 0;
					for each (pv2Seg in pv2Group) {
						pid[index].PV1[indexPV1].PV2[indexPV2] = {};
		
						// PV2.1, priorPendingLocation
						pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation = {};
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.pointOfCare = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.1&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.room = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.2&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.bed = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.3&apos;]; }
						pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility = {};
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility.nameSpaceId =  pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.1&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility.universalId =  pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.2&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility.universalIdType =  pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.3&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility).length == 0) {
							if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility.nameSpaceId = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;]; }
							else delete pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility;
						}
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.locationStatus = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.5&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.personLocationType = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.6&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.building = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.7&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.floor = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.8&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.locationDescription = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.9&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation;
						}
		
						// PV2.2, accommodationCode
						pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode = {};
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.id = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.1&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.text = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.2&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.codingSystem = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.3&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.altId = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.4&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.altText = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.5&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.altCodingSystem = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.6&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode;
						}
		
						// PV2.3, admitReason
						pid[index].PV1[indexPV1].PV2[indexPV2].admitReason = {};
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.id = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.1&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.text = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.2&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.codingSystem = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.3&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.altId = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.4&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.altText = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.5&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.altCodingSystem = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.6&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].admitReason).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].admitReason;
						}
		
						// PV2.4, transferReason
						pid[index].PV1[indexPV1].PV2[indexPV2].transferReason = {};
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.id = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.1&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.text = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.2&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.codingSystem = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.3&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.altId = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.4&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.altText = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.5&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.altCodingSystem = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.6&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].transferReason).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].transferReason;
						}
		
						// PV2.5, patientValuables
						pid[index].PV1[indexPV1].PV2[indexPV2].patientValuables = [];
						for each (field in pv2Seg[&apos;PV2.5&apos;]) {
							if (field[&apos;PV2.5.1&apos;].toString() != &quot;&quot;) {
								pid[index].PV1[indexPV1].PV2[indexPV2].patientValuables.push(field[&apos;PV2.5.1&apos;]);
							}
						}
						if (pid[index].PV1[indexPV1].PV2[indexPV2].patientValuables.length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].patientValuables;
						}
		
						// PV2.6, patientValuablesLocation
						if (pv2Seg[&apos;PV2.6&apos;][&apos;PV2.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].patientValuablesLocation = pv2Seg[&apos;PV2.6&apos;][&apos;PV2.6.1&apos;]; }
		
						// PV2.7, visitUserCode
						if (pv2Seg[&apos;PV2.7&apos;][&apos;PV2.7.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitUserCode = pv2Seg[&apos;PV2.7&apos;][&apos;PV2.7.1&apos;]; }
						
						// PV2.8, expectedAdmitDateTime
						if (pv2Seg[&apos;PV2.8&apos;][&apos;PV2.8.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedAdmitDateTime = pv2Seg[&apos;PV2.8&apos;][&apos;PV2.8.1&apos;]; }
						
						// PV2.9, expectedDischargeDateTime
						if (pv2Seg[&apos;PV2.9&apos;][&apos;PV2.9.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedDischargeDateTime = pv2Seg[&apos;PV2.9&apos;][&apos;PV2.9.1&apos;]; }
						
						// PV2.10, estimatedLengthInpatientStay
						if (pv2Seg[&apos;PV2.10&apos;][&apos;PV2.10.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].estimatedLengthInpatientStay = pv2Seg[&apos;PV2.10&apos;][&apos;PV2.10.1&apos;]; }
						
						// PV2.11, actualLengthInpatientStay
						if (pv2Seg[&apos;PV2.11&apos;][&apos;PV2.11.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].actualLengthInpatientStay = pv2Seg[&apos;PV2.11&apos;][&apos;PV2.11.1&apos;]; }
						
						// PV2.12, visitDescription
						if (pv2Seg[&apos;PV2.12&apos;][&apos;PV2.12.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitDescription = pv2Seg[&apos;PV2.12&apos;][&apos;PV2.12.1&apos;]; }
						
						// PV2.13, referralSourceCode
						pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode = {};
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.1&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.lastName = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.2&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.firstName = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.3&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.middleInitOrName = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.4&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.suffix = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.5&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.prefix = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.6&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.degree = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.7&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.sourceTable = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.8&apos;]; }
						pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority = {};
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.1&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority.universalId = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.2&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority.universalIdType = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.3&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority).length == 0) {
							if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;]; }
							else delete pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority;
						}
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.10&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.nameTypeCode = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.10&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.11&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.identifierCheckDigit = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.11&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.12&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.codeIdentifyingCheckDigitScheme = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.12&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.13&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.identifierTypeCode = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.13&apos;]; }
						pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility = {};
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.1&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility.universalId = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.2&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility.universalIdType = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.3&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility).length == 0) {
							if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;]; }
							else delete pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility;
						}
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode;
						}
		
						// PV2.14, previousServiceDate
						if (pv2Seg[&apos;PV2.14&apos;][&apos;PV2.14.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].previousServiceDate = pv2Seg[&apos;PV2.14&apos;][&apos;PV2.14.1&apos;]; }
						
						// PV2.15, employmentIllnessRelatedIndicator
						if (pv2Seg[&apos;PV2.15&apos;][&apos;PV2.15.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].employmentIllnessRelatedIndicator = pv2Seg[&apos;PV2.15&apos;][&apos;PV2.15.1&apos;]; }
						
						// PV2.16, purgeStatusCode
						if (pv2Seg[&apos;PV2.16&apos;][&apos;PV2.16.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].purgeStatusCode = pv2Seg[&apos;PV2.16&apos;][&apos;PV2.16.1&apos;]; }
						
						// PV2.17, purgeStatusDate
						if (pv2Seg[&apos;PV2.17&apos;][&apos;PV2.17.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].purgeStatusDate = pv2Seg[&apos;PV2.17&apos;][&apos;PV2.17.1&apos;]; }
						
						// PV2.18, specialProgramCode
						if (pv2Seg[&apos;PV2.18&apos;][&apos;PV2.18.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].specialProgramCode = pv2Seg[&apos;PV2.18&apos;][&apos;PV2.18.1&apos;]; }
						
						// PV2.19, retentionIndicator
						if (pv2Seg[&apos;PV2.19&apos;][&apos;PV2.19.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].retentionIndicator = pv2Seg[&apos;PV2.19&apos;][&apos;PV2.19.1&apos;]; }
						
						// PV2.20, expectedNumInsurancePlans
						if (pv2Seg[&apos;PV2.20&apos;][&apos;PV2.20.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedNumInsurancePlans = pv2Seg[&apos;PV2.20&apos;][&apos;PV2.20.1&apos;]; }
						
						// PV2.21, visitPublicityCode
						if (pv2Seg[&apos;PV2.21&apos;][&apos;PV2.21.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitPublicityCode = pv2Seg[&apos;PV2.21&apos;][&apos;PV2.21.1&apos;]; }
						
						// PV2.22, visitProtectionIndicator
						if (pv2Seg[&apos;PV2.22&apos;][&apos;PV2.22.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitProtectionIndicator = pv2Seg[&apos;PV2.22&apos;][&apos;PV2.22.1&apos;]; }
						
						// PV2.23, clinicOrganizationName
						pid[index].PV1[indexPV1].PV2[indexPV2].clinicOrganizationName = [];
						for each (field in pv2Seg[&apos;PV2.23&apos;]) {
							var block = {};
							if (field[&apos;PV2.23.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;PV2.23.1&apos;]; }
							if (field[&apos;PV2.23.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;PV2.23.2&apos;]; }
							if (field[&apos;PV2.23.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;PV2.23.3&apos;]; }
							if (field[&apos;PV2.23.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV2.23.4&apos;]; }
							if (field[&apos;PV2.23.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV2.23.5&apos;]; }
							block.assigningAuthority = {};
							if (field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.1&apos;]; }
							if (field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.2&apos;]; }
							if (field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.3&apos;]; }
							if (Object.keys(block.assigningAuthority).length == 0) {
								if (field[&apos;PV2.23.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PV2.23.6&apos;]; }
								else delete block.assigningAuthority;
							}
							if (field[&apos;PV2.23.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PV2.23.7&apos;]; }
							block.assigningFacility = {};
							if (field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.1&apos;]; }
							if (field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.2&apos;]; }
							if (field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.3&apos;]; }
							if (Object.keys(block.assigningFacility).length == 0) {
								if (field[&apos;PV2.23.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PV2.23.8&apos;]; }
								else delete block.assigningFacility;
							}
							if (Object.keys(block).length &gt; 0) {
								pid[index].PV1[indexPV1].PV2[indexPV2].clinicOrganizationName.push(block);
							}
						}
						if (pid[index].PV1[indexPV1].PV2[indexPV2].clinicOrganizationName.length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].clinicOrganizationName;
						}
		
						// PV2.24, patientStatusCode
						if (pv2Seg[&apos;PV2.24&apos;][&apos;PV2.24.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].patientStatusCode = pv2Seg[&apos;PV2.24&apos;][&apos;PV2.24.1&apos;]; }
						
						// PV2.25, visitPriorityCode
						if (pv2Seg[&apos;PV2.25&apos;][&apos;PV2.25.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitPriorityCode = pv2Seg[&apos;PV2.25&apos;][&apos;PV2.25.1&apos;]; }
						
						// PV2.26, previousTreatmentDate
						if (pv2Seg[&apos;PV2.26&apos;][&apos;PV2.26.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].previousTreatmentDate = pv2Seg[&apos;PV2.26&apos;][&apos;PV2.26.1&apos;]; }
						
						// PV2.27, expectedDischargeDisposition
						if (pv2Seg[&apos;PV2.27&apos;][&apos;PV2.27.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedDischargeDisposition = pv2Seg[&apos;PV2.27&apos;][&apos;PV2.27.1&apos;]; }
						
						// PV2.28, signatureOnFileDate
						if (pv2Seg[&apos;PV2.28&apos;][&apos;PV2.28.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].signatureOnFileDate = pv2Seg[&apos;PV2.28&apos;][&apos;PV2.28.1&apos;]; }
						
						// PV2.29, firstSimilarIllnessDate
						if (pv2Seg[&apos;PV2.29&apos;][&apos;PV2.29.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].firstSimilarIllnessDate = pv2Seg[&apos;PV2.29&apos;][&apos;PV2.29.1&apos;]; }
						
						// PV2.30, patientChargeAdjustmentCode
						if (pv2Seg[&apos;PV2.30&apos;][&apos;PV2.30.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].patientChargeAdjustmentCode = pv2Seg[&apos;PV2.30&apos;][&apos;PV2.30.1&apos;]; }
						
						// PV2.31, recurringServiceCode
						if (pv2Seg[&apos;PV2.31&apos;][&apos;PV2.31.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].recurringServiceCode = pv2Seg[&apos;PV2.31&apos;][&apos;PV2.31.1&apos;]; }
						
						// PV2.32, billingMediaCode
						if (pv2Seg[&apos;PV2.32&apos;][&apos;PV2.32.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].billingMediaCode = pv2Seg[&apos;PV2.32&apos;][&apos;PV2.32.1&apos;]; }
						
						// PV2.33, expectedSurgeryDateTime
						if (pv2Seg[&apos;PV2.33&apos;][&apos;PV2.33.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedSurgeryDateTime = pv2Seg[&apos;PV2.33&apos;][&apos;PV2.33.1&apos;]; }
						
						// PV2.34, militaryPartnershipCode
						if (pv2Seg[&apos;PV2.34&apos;][&apos;PV2.34.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].militaryPartnershipCode = pv2Seg[&apos;PV2.34&apos;][&apos;PV2.34.1&apos;]; }
						
						// PV2.35, militaryNonAvailabilityCode
						if (pv2Seg[&apos;PV2.35&apos;][&apos;PV2.35.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].militaryNonAvailabilityCode = pv2Seg[&apos;PV2.35&apos;][&apos;PV2.35.1&apos;]; }
						
						// PV2.36, newbornBabyIndicator
						if (pv2Seg[&apos;PV2.36&apos;][&apos;PV2.36.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].newbornBabyIndicator = pv2Seg[&apos;PV2.36&apos;][&apos;PV2.36.1&apos;]; }
						
						// PV2.37, babyDetainedIndicator
						if (pv2Seg[&apos;PV2.37&apos;][&apos;PV2.37.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].babyDetainedIndicator = pv2Seg[&apos;PV2.37&apos;][&apos;PV2.37.1&apos;]; }
						
						// clean up PV2 and increment index
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2]).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2];
						} else {
							indexPV2++;
						}
					}
		
					// Clean up the PV2 object if it&apos;s empty
					if (pid[index].PV1[indexPV1].PV2[0] == null){
						delete pid[index].PV1[indexPV1].PV2;
					}
				}
			}

			// Increment the PV1 index
			indexPV1++;
		}

		// Increment the PID index
		index++;
	}
}

// Optional: save a copy of the completed PID segment for reference later
//channelMap.put(&quot;pid&quot;, pid); // uncomment to save

// Re-add the PID segment to the hl7JSON object
if (pid &amp;&amp; Object.keys(pid).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.PID = pid;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>6</sequenceNumber>
          <name>IN1 (Insurance) Segment</name>
          <script>// IN1
var in1;
if (msg[&apos;IN1&apos;].length() &gt; 0) {
	in1 = [];
	var index = 0;
	for each (seg in msg.IN1) {
		in1[index] = {};
		
		// IN1.1, setId
		if (seg[&apos;IN1.1&apos;][&apos;IN1.1.1&apos;].toString() != &quot;&quot;) { in1[index].setId = seg[&apos;IN1.1&apos;][&apos;IN1.1.1&apos;]; }

		// IN1.2, planId
		in1[index].planId = {};
		if (seg[&apos;IN1.2&apos;][&apos;IN1.2.1&apos;].toString() != &quot;&quot;) { in1[index].planId.id = seg[&apos;IN1.2&apos;][&apos;IN1.2.1&apos;]; }
		if (seg[&apos;IN1.2&apos;][&apos;IN1.2.2&apos;].toString() != &quot;&quot;) { in1[index].planId.text = seg[&apos;IN1.2&apos;][&apos;IN1.2.2&apos;]; }
		if (seg[&apos;IN1.2&apos;][&apos;IN1.2.3&apos;].toString() != &quot;&quot;) { in1[index].planId.codingSystem = seg[&apos;IN1.2&apos;][&apos;IN1.2.3&apos;]; }
		if (seg[&apos;IN1.2&apos;][&apos;IN1.2.4&apos;].toString() != &quot;&quot;) { in1[index].planId.altId = seg[&apos;IN1.2&apos;][&apos;IN1.2.4&apos;]; }
		if (seg[&apos;IN1.2&apos;][&apos;IN1.2.5&apos;].toString() != &quot;&quot;) { in1[index].planId.altText = seg[&apos;IN1.2&apos;][&apos;IN1.2.5&apos;]; }
		if (seg[&apos;IN1.2&apos;][&apos;IN1.2.6&apos;].toString() != &quot;&quot;) { in1[index].planId.altCodingSystem = seg[&apos;IN1.2&apos;][&apos;IN1.2.6&apos;]; }
		if (Object.keys(in1[index].planId).length == 0) {
			delete in1[index].planId;
		}

		// IN1.3, companyId
		in1[index].companyId = [];
		for each (field in seg[&apos;IN1.3&apos;]) {
			var block = {};
			if (field[&apos;IN1.3.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN1.3.1&apos;]; }
			if (field[&apos;IN1.3.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN1.3.2&apos;]; }
			if (field[&apos;IN1.3.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN1.3.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;IN1.3.4&apos;][&apos;IN1.3.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.3.4&apos;][&apos;IN1.3.4.1&apos;]; }
			if (field[&apos;IN1.3.4&apos;][&apos;IN1.3.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN1.3.4&apos;][&apos;IN1.3.4.2&apos;]; }
			if (field[&apos;IN1.3.4&apos;][&apos;IN1.3.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN1.3.4&apos;][&apos;IN1.3.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;IN1.3.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.3.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;IN1.3.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN1.3.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;IN1.3.6&apos;][&apos;IN1.3.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.3.6&apos;][&apos;IN1.3.6.1&apos;]; }
			if (field[&apos;IN1.3.6&apos;][&apos;IN1.3.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN1.3.6&apos;][&apos;IN1.3.6.2&apos;]; }
			if (field[&apos;IN1.3.6&apos;][&apos;IN1.3.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN1.3.6&apos;][&apos;IN1.3.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;IN1.3.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.3.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				in1[index].companyId.push(block);
			}
		}
		if (in1[index].companyId.length == 0) {
			delete in1[index].companyId;
		}

		// IN1.4, companyName
		in1[index].companyName = [];
		for each (field in seg[&apos;IN1.4&apos;]) {
			var block = {};
			if (field[&apos;IN1.4.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;IN1.4.1&apos;]; }
			if (field[&apos;IN1.4.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;IN1.4.2&apos;]; }
			if (field[&apos;IN1.4.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;IN1.4.3&apos;]; }
			if (field[&apos;IN1.4.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN1.4.4&apos;]; }
			if (field[&apos;IN1.4.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN1.4.5&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;IN1.4.6&apos;][&apos;IN1.4.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.4.6&apos;][&apos;IN1.4.6.1&apos;]; }
			if (field[&apos;IN1.4.6&apos;][&apos;IN1.4.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN1.4.6&apos;][&apos;IN1.4.6.2&apos;]; }
			if (field[&apos;IN1.4.6&apos;][&apos;IN1.4.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN1.4.6&apos;][&apos;IN1.4.6.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;IN1.4.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.4.6&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;IN1.4.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN1.4.7&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;IN1.4.8&apos;][&apos;IN1.4.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.4.8&apos;][&apos;IN1.4.8.1&apos;]; }
			if (field[&apos;IN1.4.8&apos;][&apos;IN1.4.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN1.4.8&apos;][&apos;IN1.4.8.2&apos;]; }
			if (field[&apos;IN1.4.8&apos;][&apos;IN1.4.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN1.4.8&apos;][&apos;IN1.4.8.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;IN1.4.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.4.8&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				in1[index].companyName.push(block);
			}
		}
		if (in1[index].companyName.length == 0) {
			delete in1[index].companyName;
		}
		
		// IN1.5, companyAddress
		in1[index].companyAddress = [];
		for each (field in seg[&apos;IN1.5&apos;]) {
			var block = {};
			if (field[&apos;IN1.5.1&apos;].toString() != &quot;&quot;) { block.streetAddress = field[&apos;IN1.5.1&apos;]; }
			if (field[&apos;IN1.5.2&apos;].toString() != &quot;&quot;) { block.otherDesignation = field[&apos;IN1.5.2&apos;]; }
			if (field[&apos;IN1.5.3&apos;].toString() != &quot;&quot;) { block.city = field[&apos;IN1.5.3&apos;]; }
			if (field[&apos;IN1.5.4&apos;].toString() != &quot;&quot;) { block.stateOrProvince = field[&apos;IN1.5.4&apos;]; }
			if (field[&apos;IN1.5.5&apos;].toString() != &quot;&quot;) { block.zip = field[&apos;IN1.5.5&apos;]; }
			if (field[&apos;IN1.5.6&apos;].toString() != &quot;&quot;) { block.country = field[&apos;IN1.5.6&apos;]; }
			if (field[&apos;IN1.5.7&apos;].toString() != &quot;&quot;) { block.addressType = field[&apos;IN1.5.7&apos;]; }
			if (field[&apos;IN1.5.8&apos;].toString() != &quot;&quot;) { block.otherGeographicDesignation = field[&apos;IN1.5.8&apos;]; }
			if (field[&apos;IN1.5.9&apos;].toString() != &quot;&quot;) { block.countyOrParishCode = field[&apos;IN1.5.9&apos;]; }
			if (field[&apos;IN1.5.10&apos;].toString() != &quot;&quot;) { block.censusTract = field[&apos;IN1.5.10&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				in1[index].companyAddress.push(block);
			}
		}
		if (in1[index].companyAddress.length == 0) {
			delete in1[index].companyAddress;
		}

		// IN1.6, companyContactPerson
		in1[index].companyContactPerson = [];
		for each (field in seg[&apos;IN1.6&apos;]) {
			var block = {};
			if (field[&apos;IN1.6.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN1.6.1&apos;]; }
			if (field[&apos;IN1.6.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN1.6.2&apos;]; }
			if (field[&apos;IN1.6.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN1.6.3&apos;]; }
			if (field[&apos;IN1.6.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN1.6.4&apos;]; }
			if (field[&apos;IN1.6.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN1.6.5&apos;]; }
			if (field[&apos;IN1.6.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN1.6.6&apos;]; }
			if (field[&apos;IN1.6.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN1.6.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				in1[index].companyContactPerson.push(block);
			}	
		}
		if (in1[index].companyContactPerson.length == 0) {
			delete in1[index].companyContactPerson;
		}

		// IN1.7, companyPhoneNumber
		in1[index].companyPhoneNumber = [];
		for each (field in seg[&apos;IN1.7&apos;]) {
			var block = {};
			if (field[&apos;IN1.7.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;IN1.7.1&apos;]; }
			if (field[&apos;IN1.7.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;IN1.7.2&apos;]; }
			if (field[&apos;IN1.7.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;IN1.7.3&apos;]; }
			if (field[&apos;IN1.7.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;IN1.7.4&apos;]; }
			if (field[&apos;IN1.7.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;IN1.7.5&apos;]; }
			if (field[&apos;IN1.7.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;IN1.7.6&apos;]; }
			if (field[&apos;IN1.7.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;IN1.7.7&apos;]; }
			if (field[&apos;IN1.7.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;IN1.7.8&apos;]; }
			if (field[&apos;IN1.7.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;IN1.7.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				in1[index].companyPhoneNumber.push(block);
			}
		}
		if (in1[index].companyPhoneNumber.length == 0) {
			delete in1[index].companyPhoneNumber;
		}

		// IN1.8, groupNumber
		if (seg[&apos;IN1.8&apos;][&apos;IN1.8.1&apos;].toString() != &quot;&quot;) { in1[index].groupNumber = seg[&apos;IN1.8&apos;][&apos;IN1.8.1&apos;]; }

		// IN1.9, groupName
		in1[index].groupName = [];
		for each (field in seg[&apos;IN1.9&apos;]) {
			var block = {};
			if (field[&apos;IN1.9.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;IN1.9.1&apos;]; }
			if (field[&apos;IN1.9.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;IN1.9.2&apos;]; }
			if (field[&apos;IN1.9.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;IN1.9.3&apos;]; }
			if (field[&apos;IN1.9.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN1.9.4&apos;]; }
			if (field[&apos;IN1.9.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN1.9.5&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;IN1.9.6&apos;][&apos;IN1.9.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.9.6&apos;][&apos;IN1.9.6.1&apos;]; }
			if (field[&apos;IN1.9.6&apos;][&apos;IN1.9.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN1.9.6&apos;][&apos;IN1.9.6.2&apos;]; }
			if (field[&apos;IN1.9.6&apos;][&apos;IN1.9.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN1.9.6&apos;][&apos;IN1.9.6.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;IN1.9.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.9.6&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;IN1.9.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN1.9.7&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;IN1.9.8&apos;][&apos;IN1.9.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.9.8&apos;][&apos;IN1.9.8.1&apos;]; }
			if (field[&apos;IN1.9.8&apos;][&apos;IN1.9.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN1.9.8&apos;][&apos;IN1.9.8.2&apos;]; }
			if (field[&apos;IN1.9.8&apos;][&apos;IN1.9.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN1.9.8&apos;][&apos;IN1.9.8.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;IN1.9.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.9.8&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				in1[index].groupName.push(block);
			}
		}
		if (in1[index].groupName.length == 0) {
			delete in1[index].groupName;
		}

		// IN1.10, groupEmpId
		in1[index].groupEmpId = [];
		for each (field in seg[&apos;IN1.10&apos;]) {
			var block = {};
			if (field[&apos;IN1.10.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN1.10.1&apos;]; }
			if (field[&apos;IN1.10.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN1.10.2&apos;]; }
			if (field[&apos;IN1.10.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN1.10.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;IN1.10.4&apos;][&apos;IN1.10.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.10.4&apos;][&apos;IN1.10.4.1&apos;]; }
			if (field[&apos;IN1.10.4&apos;][&apos;IN1.10.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN1.10.4&apos;][&apos;IN1.10.4.2&apos;]; }
			if (field[&apos;IN1.10.4&apos;][&apos;IN1.10.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN1.10.4&apos;][&apos;IN1.10.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;IN1.10.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.10.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;IN1.10.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN1.10.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;IN1.10.6&apos;][&apos;IN1.10.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.10.6&apos;][&apos;IN1.10.6.1&apos;]; }
			if (field[&apos;IN1.10.6&apos;][&apos;IN1.10.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN1.10.6&apos;][&apos;IN1.10.6.2&apos;]; }
			if (field[&apos;IN1.10.6&apos;][&apos;IN1.10.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN1.10.6&apos;][&apos;IN1.10.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;IN1.10.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.10.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				in1[index].groupEmpId.push(block);
			}
		}
		if (in1[index].groupEmpId.length == 0) {
			delete in1[index].groupEmpId;
		}

		// IN1.11, groupEmpName
		in1[index].groupEmpName = [];
		for each (field in seg[&apos;IN1.11&apos;]) {
			var block = {};
			if (field[&apos;IN1.11.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;IN1.11.1&apos;]; }
			if (field[&apos;IN1.11.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;IN1.11.2&apos;]; }
			if (field[&apos;IN1.11.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;IN1.11.3&apos;]; }
			if (field[&apos;IN1.11.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN1.11.4&apos;]; }
			if (field[&apos;IN1.11.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN1.11.5&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;IN1.11.6&apos;][&apos;IN1.11.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.11.6&apos;][&apos;IN1.11.6.1&apos;]; }
			if (field[&apos;IN1.11.6&apos;][&apos;IN1.11.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN1.11.6&apos;][&apos;IN1.11.6.2&apos;]; }
			if (field[&apos;IN1.11.6&apos;][&apos;IN1.11.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN1.11.6&apos;][&apos;IN1.11.6.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;IN1.11.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.11.6&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;IN1.11.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN1.11.7&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;IN1.11.8&apos;][&apos;IN1.11.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.11.8&apos;][&apos;IN1.11.8.1&apos;]; }
			if (field[&apos;IN1.11.8&apos;][&apos;IN1.11.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN1.11.8&apos;][&apos;IN1.11.8.2&apos;]; }
			if (field[&apos;IN1.11.8&apos;][&apos;IN1.11.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN1.11.8&apos;][&apos;IN1.11.8.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;IN1.11.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.11.8&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				in1[index].groupEmpName.push(block);
			}
		}
		if (in1[index].groupEmpName.length == 0) {
			delete in1[index].groupEmpName;
		}

		// IN1.12, planEffectiveDate
		if (seg[&apos;IN1.12&apos;][&apos;IN1.12.1&apos;].toString() != &quot;&quot;) { in1[index].planEffectiveDate = seg[&apos;IN1.12&apos;][&apos;IN1.12.1&apos;]; }

		// IN1.13, planExpirationDate
		if (seg[&apos;IN1.13&apos;][&apos;IN1.13.1&apos;].toString() != &quot;&quot;) { in1[index].planExpirationDate = seg[&apos;IN1.13&apos;][&apos;IN1.13.1&apos;]; }

		// IN1.14, authorizationInformation
		in1[index].authorizationInformation = {};
		if (seg[&apos;IN1.14&apos;][&apos;IN1.14.1&apos;].toString() != &quot;&quot;) { in1[index].authorizationInformation.authorizationNumber = seg[&apos;IN1.14&apos;][&apos;IN1.14.1&apos;]; }
		if (seg[&apos;IN1.14&apos;][&apos;IN1.14.2&apos;].toString() != &quot;&quot;) { in1[index].authorizationInformation.date = seg[&apos;IN1.14&apos;][&apos;IN1.14.2&apos;]; }
		if (seg[&apos;IN1.14&apos;][&apos;IN1.14.3&apos;].toString() != &quot;&quot;) { in1[index].authorizationInformation.source = seg[&apos;IN1.14&apos;][&apos;IN1.14.3&apos;]; }
		if (Object.keys(in1[index].authorizationInformation).length == 0) {
			delete in1[index].authorizationInformation;
		}

		// IN1.15, planType
		if (seg[&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString() != &quot;&quot;) { in1[index].planType = seg[&apos;IN1.15&apos;][&apos;IN1.15.1&apos;]; }
		
		// IN1.16, insuredName
		in1[index].insuredName = [];
		for each (field in seg[&apos;IN1.16&apos;]) {
			var block = {};
			if (field[&apos;IN1.16.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN1.16.1&apos;]; }
			if (field[&apos;IN1.16.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN1.16.2&apos;]; }
			if (field[&apos;IN1.16.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN1.16.3&apos;]; }
			if (field[&apos;IN1.16.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN1.16.4&apos;]; }
			if (field[&apos;IN1.16.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN1.16.5&apos;]; }
			if (field[&apos;IN1.16.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN1.16.6&apos;]; }
			if (field[&apos;IN1.16.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN1.16.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				in1[index].insuredName.push(block);
			}	
		}
		if (in1[index].insuredName.length == 0) {
			delete in1[index].insuredName;
		}

		// IN1.17, insuredRelationshipToPatient
		if (seg[&apos;IN1.17&apos;][&apos;IN1.17.1&apos;].toString() != &quot;&quot;) { in1[index].insuredRelationshipToPatient = seg[&apos;IN1.17&apos;][&apos;IN1.17.1&apos;]; }
		
		// IN1.18, insuredDob
		if (seg[&apos;IN1.18&apos;][&apos;IN1.18.1&apos;].toString() != &quot;&quot;) { in1[index].insuredDob = seg[&apos;IN1.18&apos;][&apos;IN1.18.1&apos;]; }
		
		// IN1.19, insuredAddress
		in1[index].insuredAddress = [];
		for each (field in seg[&apos;IN1.19&apos;]) {
			var block = {};
			if (field[&apos;IN1.19.1&apos;].toString() != &quot;&quot;) { block.streetAddress = field[&apos;IN1.19.1&apos;]; }
			if (field[&apos;IN1.19.2&apos;].toString() != &quot;&quot;) { block.otherDesignation = field[&apos;IN1.19.2&apos;]; }
			if (field[&apos;IN1.19.3&apos;].toString() != &quot;&quot;) { block.city = field[&apos;IN1.19.3&apos;]; }
			if (field[&apos;IN1.19.4&apos;].toString() != &quot;&quot;) { block.stateOrProvince = field[&apos;IN1.19.4&apos;]; }
			if (field[&apos;IN1.19.5&apos;].toString() != &quot;&quot;) { block.zip = field[&apos;IN1.19.5&apos;]; }
			if (field[&apos;IN1.19.6&apos;].toString() != &quot;&quot;) { block.country = field[&apos;IN1.19.6&apos;]; }
			if (field[&apos;IN1.19.7&apos;].toString() != &quot;&quot;) { block.addressType = field[&apos;IN1.19.7&apos;]; }
			if (field[&apos;IN1.19.8&apos;].toString() != &quot;&quot;) { block.otherGeographicDesignation = field[&apos;IN1.19.8&apos;]; }
			if (field[&apos;IN1.19.9&apos;].toString() != &quot;&quot;) { block.countyOrParishCode = field[&apos;IN1.19.9&apos;]; }
			if (field[&apos;IN1.19.10&apos;].toString() != &quot;&quot;) { block.censusTract = field[&apos;IN1.19.10&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				in1[index].insuredAddress.push(block);
			}
		}
		if (in1[index].insuredAddress.length == 0) {
			delete in1[index].insuredAddress;
		}

		// IN1.20, assignmentOfBenefits
		if (seg[&apos;IN1.20&apos;][&apos;IN1.20.1&apos;].toString() != &quot;&quot;) { in1[index].assignmentOfBenefits = seg[&apos;IN1.20&apos;][&apos;IN1.20.1&apos;]; }
		
		// IN1.21, coordinationOfBenefits
		if (seg[&apos;IN1.21&apos;][&apos;IN1.21.1&apos;].toString() != &quot;&quot;) { in1[index].coordinationOfBenefits = seg[&apos;IN1.21&apos;][&apos;IN1.21.1&apos;]; }
		
		// IN1.22, coordinationOfBenefitsPriority
		if (seg[&apos;IN1.22&apos;][&apos;IN1.22.1&apos;].toString() != &quot;&quot;) { in1[index].coordinationOfBenefitsPriority = seg[&apos;IN1.22&apos;][&apos;IN1.22.1&apos;]; }
		
		// IN1.23, noticeOfAdmissionFlag
		if (seg[&apos;IN1.23&apos;][&apos;IN1.23.1&apos;].toString() != &quot;&quot;) { in1[index].noticeOfAdmissionFlag = seg[&apos;IN1.23&apos;][&apos;IN1.23.1&apos;]; }
		
		// IN1.24, noticeOfAdmissionDate
		if (seg[&apos;IN1.24&apos;][&apos;IN1.24.1&apos;].toString() != &quot;&quot;) { in1[index].noticeOfAdmissionDate = seg[&apos;IN1.24&apos;][&apos;IN1.24.1&apos;]; }
		
		// IN1.25, reportOfEligibilityFlag
		if (seg[&apos;IN1.25&apos;][&apos;IN1.25.1&apos;].toString() != &quot;&quot;) { in1[index].reportOfEligibilityFlag = seg[&apos;IN1.25&apos;][&apos;IN1.25.1&apos;]; }
		
		// IN1.26, reportOfEligibilityDate
		if (seg[&apos;IN1.26&apos;][&apos;IN1.26.1&apos;].toString() != &quot;&quot;) { in1[index].reportOfEligibilityDate = seg[&apos;IN1.26&apos;][&apos;IN1.26.1&apos;]; }
		
		// IN1.27, releaseInformationCode
		if (seg[&apos;IN1.27&apos;][&apos;IN1.27.1&apos;].toString() != &quot;&quot;) { in1[index].releaseInformationCode = seg[&apos;IN1.27&apos;][&apos;IN1.27.1&apos;]; }
		
		// IN1.28, preAdmitCert
		if (seg[&apos;IN1.28&apos;][&apos;IN1.28.1&apos;].toString() != &quot;&quot;) { in1[index].preAdmitCert = seg[&apos;IN1.28&apos;][&apos;IN1.28.1&apos;]; }
		
		// IN1.29, verificationDateTime
		if (seg[&apos;IN1.29&apos;][&apos;IN1.29.1&apos;].toString() != &quot;&quot;) { in1[index].verificationDateTime = seg[&apos;IN1.29&apos;][&apos;IN1.29.1&apos;]; }
		
		// IN1.30, verificationBy
		in1[index].verificationBy = {};
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.1&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.id = seg[&apos;IN1.30&apos;][&apos;IN1.30.1&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.2&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.lastName = seg[&apos;IN1.30&apos;][&apos;IN1.30.2&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.3&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.firstName = seg[&apos;IN1.30&apos;][&apos;IN1.30.3&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.4&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.middleInitOrName = seg[&apos;IN1.30&apos;][&apos;IN1.30.4&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.5&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.suffix = seg[&apos;IN1.30&apos;][&apos;IN1.30.5&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.6&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.prefix = seg[&apos;IN1.30&apos;][&apos;IN1.30.6&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.7&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.degree = seg[&apos;IN1.30&apos;][&apos;IN1.30.7&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.8&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.sourceTable = seg[&apos;IN1.30&apos;][&apos;IN1.30.8&apos;]; }
		in1[index].verificationBy.assigningAuthority = {};
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.9&apos;][&apos;IN1.30.9.1&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.assigningAuthority.id = seg[&apos;IN1.30&apos;][&apos;IN1.30.9&apos;][&apos;IN1.30.9.1&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.9&apos;][&apos;IN1.30.9.2&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.assigningAuthority.universalId = seg[&apos;IN1.30&apos;][&apos;IN1.30.9&apos;][&apos;IN1.30.9.2&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.9&apos;][&apos;IN1.30.9.3&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.assigningAuthority.universalIdType = seg[&apos;IN1.30&apos;][&apos;IN1.30.9&apos;][&apos;IN1.30.9.3&apos;]; }
		if (Object.keys(in1[index].verificationBy.assigningAuthority).length == 0) {
			if (seg[&apos;IN1.30&apos;][&apos;IN1.30.9&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.assigningAuthority.id = seg[&apos;IN1.30&apos;][&apos;IN1.30.9&apos;]; }
			else delete in1[index].verificationBy.assigningAuthority;
		}
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.10&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.nameTypeCode = seg[&apos;IN1.30&apos;][&apos;IN1.30.10&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.11&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.identifierCheckDigit = seg[&apos;IN1.30&apos;][&apos;IN1.30.11&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.12&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.codeIdentifyingCheckDigitScheme = seg[&apos;IN1.30&apos;][&apos;IN1.30.12&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.13&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.identifierTypeCode = seg[&apos;IN1.30&apos;][&apos;IN1.30.13&apos;]; }
		in1[index].verificationBy.assigningFacility = {};
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.14&apos;][&apos;IN1.30.14.1&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.assigningFacility.id = seg[&apos;IN1.30&apos;][&apos;IN1.30.14&apos;][&apos;IN1.30.14.1&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.14&apos;][&apos;IN1.30.14.2&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.assigningFacility.universalId = seg[&apos;IN1.30&apos;][&apos;IN1.30.14&apos;][&apos;IN1.30.14.2&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.14&apos;][&apos;IN1.30.14.3&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.assigningFacility.universalIdType = seg[&apos;IN1.30&apos;][&apos;IN1.30.14&apos;][&apos;IN1.30.14.3&apos;]; }
		if (Object.keys(in1[index].verificationBy.assigningFacility).length == 0) {
			if (seg[&apos;IN1.30&apos;][&apos;IN1.30.14&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.assigningFacility.id = seg[&apos;IN1.30&apos;][&apos;IN1.30.14&apos;]; }
			else delete in1[index].verificationBy.assigningFacility;
		}
		if (Object.keys(in1[index].verificationBy).length == 0) {
			delete in1[index].verificationBy;
		}

		// IN1.31, typeOfAgreementCode
		if (seg[&apos;IN1.31&apos;][&apos;IN1.31.1&apos;].toString() != &quot;&quot;) { in1[index].typeOfAgreementCode = seg[&apos;IN1.31&apos;][&apos;IN1.31.1&apos;]; }
		
		// IN1.32, billingStatus
		if (seg[&apos;IN1.32&apos;][&apos;IN1.32.1&apos;].toString() != &quot;&quot;) { in1[index].billingStatus = seg[&apos;IN1.32&apos;][&apos;IN1.32.1&apos;]; }
		
		// IN1.33, lifetimeReserveDays
		if (seg[&apos;IN1.33&apos;][&apos;IN1.33.1&apos;].toString() != &quot;&quot;) { in1[index].lifetimeReserveDays = seg[&apos;IN1.33&apos;][&apos;IN1.33.1&apos;]; }
		
		// IN1.34, delayBeforeLrDay
		if (seg[&apos;IN1.34&apos;][&apos;IN1.34.1&apos;].toString() != &quot;&quot;) { in1[index].delayBeforeLrDay = seg[&apos;IN1.34&apos;][&apos;IN1.34.1&apos;]; }
		
		// IN1.35, companyPlanCode
		if (seg[&apos;IN1.35&apos;][&apos;IN1.35.1&apos;].toString() != &quot;&quot;) { in1[index].companyPlanCode = seg[&apos;IN1.35&apos;][&apos;IN1.35.1&apos;]; }
		
		// IN1.36, policyNumber
		if (seg[&apos;IN1.36&apos;][&apos;IN1.36.1&apos;].toString() != &quot;&quot;) { in1[index].policyNumber = seg[&apos;IN1.36&apos;][&apos;IN1.36.1&apos;]; }
		
		// IN1.37, policyDeductible
		in1[index].policyDeductible = {};
		in1[index].policyDeductible.price = {};
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.1&apos;][&apos;IN1.37.1.1&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.price.quantity = seg[&apos;IN1.37&apos;][&apos;IN1.37.1&apos;][&apos;IN1.37.1.1&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.1&apos;][&apos;IN1.37.1.2&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.price.denomination = seg[&apos;IN1.37&apos;][&apos;IN1.37.1&apos;][&apos;IN1.37.1.2&apos;]; }
		if (Object.keys(in1[index].policyDeductible.price).length == 0) {
			if (seg[&apos;IN1.37&apos;][&apos;IN1.37.1&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.price.quantity = seg[&apos;IN1.37&apos;][&apos;IN1.37.1&apos;]; }
			else delete in1[index].policyDeductible.price;
		}
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.2&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.priceType = seg[&apos;IN1.37&apos;][&apos;IN1.37.2&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.3&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.fromValue = seg[&apos;IN1.37&apos;][&apos;IN1.37.3&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.4&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.toValue = seg[&apos;IN1.37&apos;][&apos;IN1.37.4&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.5&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.rangeUnits = seg[&apos;IN1.37&apos;][&apos;IN1.37.5&apos;]; }
		in1[index].policyDeductible.rangeType = {};
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.1&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.rangeType.id = seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.1&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.2&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.rangeType.text = seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.2&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.3&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.rangeType.codingSystem = seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.3&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.4&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.rangeType.altId = seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.4&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.5&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.rangeType.altText = seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.5&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.6&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.rangeType.altCodingSystem = seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.6&apos;]; }
		if (Object.keys(in1[index].policyDeductible.rangeType).length == 0) {
			if (seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.rangeType.id = seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;]; }
			else delete in1[index].policyDeductible.rangeType;
		}
		if (Object.keys(in1[index].policyDeductible).length == 0) {
			delete in1[index].policyDeductible;
		}

		// IN1.38, policyLimitAmount
		in1[index].policyLimitAmount = {};
		in1[index].policyLimitAmount.price = {};
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.1&apos;][&apos;IN1.38.1.1&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.price.quantity = seg[&apos;IN1.38&apos;][&apos;IN1.38.1&apos;][&apos;IN1.38.1.1&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.1&apos;][&apos;IN1.38.1.2&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.price.denomination = seg[&apos;IN1.38&apos;][&apos;IN1.38.1&apos;][&apos;IN1.38.1.2&apos;]; }
		if (Object.keys(in1[index].policyLimitAmount.price).length == 0) {
			if (seg[&apos;IN1.38&apos;][&apos;IN1.38.1&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.price.quantity = seg[&apos;IN1.38&apos;][&apos;IN1.38.1&apos;]; }
			else delete in1[index].policyLimitAmount.price;
		}
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.2&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.priceType = seg[&apos;IN1.38&apos;][&apos;IN1.38.2&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.3&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.fromValue = seg[&apos;IN1.38&apos;][&apos;IN1.38.3&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.4&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.toValue = seg[&apos;IN1.38&apos;][&apos;IN1.38.4&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.5&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.rangeUnits = seg[&apos;IN1.38&apos;][&apos;IN1.38.5&apos;]; }
		in1[index].policyLimitAmount.rangeType = {};
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.1&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.rangeType.id = seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.1&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.2&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.rangeType.text = seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.2&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.3&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.rangeType.codingSystem = seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.3&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.4&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.rangeType.altId = seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.4&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.5&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.rangeType.altText = seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.5&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.6&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.rangeType.altCodingSystem = seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.6&apos;]; }
		if (Object.keys(in1[index].policyLimitAmount.rangeType).length == 0) {
			if (seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.rangeType.id = seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;]; }
			else delete in1[index].policyLimitAmount.rangeType;
		}
		if (Object.keys(in1[index].policyLimitAmount).length == 0) {
			delete in1[index].policyLimitAmount;
		}

		// IN1.39, policyLimitDays
		if (seg[&apos;IN1.39&apos;][&apos;IN1.39.1&apos;].toString() != &quot;&quot;) { in1[index].policyLimitDays = seg[&apos;IN1.39&apos;][&apos;IN1.39.1&apos;]; }
		
		// IN1.40, roomRateSemiPrivate
		in1[index].roomRateSemiPrivate = {};
		in1[index].roomRateSemiPrivate.price = {};
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.1&apos;][&apos;IN1.40.1.1&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.price.quantity = seg[&apos;IN1.40&apos;][&apos;IN1.40.1&apos;][&apos;IN1.40.1.1&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.1&apos;][&apos;IN1.40.1.2&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.price.denomination = seg[&apos;IN1.40&apos;][&apos;IN1.40.1&apos;][&apos;IN1.40.1.2&apos;]; }
		if (Object.keys(in1[index].roomRateSemiPrivate.price).length == 0) {
			if (seg[&apos;IN1.40&apos;][&apos;IN1.40.1&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.price.quantity = seg[&apos;IN1.40&apos;][&apos;IN1.40.1&apos;]; }
			else delete in1[index].roomRateSemiPrivate.price;
		}
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.2&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.priceType = seg[&apos;IN1.40&apos;][&apos;IN1.40.2&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.3&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.fromValue = seg[&apos;IN1.40&apos;][&apos;IN1.40.3&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.4&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.toValue = seg[&apos;IN1.40&apos;][&apos;IN1.40.4&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.5&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.rangeUnits = seg[&apos;IN1.40&apos;][&apos;IN1.40.5&apos;]; }
		in1[index].roomRateSemiPrivate.rangeType = {};
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.1&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.rangeType.id = seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.1&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.2&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.rangeType.text = seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.2&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.3&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.rangeType.codingSystem = seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.3&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.4&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.rangeType.altId = seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.4&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.5&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.rangeType.altText = seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.5&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.6&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.rangeType.altCodingSystem = seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.6&apos;]; }
		if (Object.keys(in1[index].roomRateSemiPrivate.rangeType).length == 0) {
			if (seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.rangeType.id = seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;]; }
			else delete in1[index].roomRateSemiPrivate.rangeType;
		}
		if (Object.keys(in1[index].roomRateSemiPrivate).length == 0) {
			delete in1[index].roomRateSemiPrivate;
		}

		// IN1.41, roomRatePrivate
		in1[index].roomRatePrivate = {};
		in1[index].roomRatePrivate.price = {};
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.1&apos;][&apos;IN1.41.1.1&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.price.quantity = seg[&apos;IN1.41&apos;][&apos;IN1.41.1&apos;][&apos;IN1.41.1.1&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.1&apos;][&apos;IN1.41.1.2&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.price.denomination = seg[&apos;IN1.41&apos;][&apos;IN1.41.1&apos;][&apos;IN1.41.1.2&apos;]; }
		if (Object.keys(in1[index].roomRatePrivate.price).length == 0) {
			if (seg[&apos;IN1.41&apos;][&apos;IN1.41.1&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.price.quantity = seg[&apos;IN1.41&apos;][&apos;IN1.41.1&apos;]; }
			else delete in1[index].roomRatePrivate.price;
		}
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.2&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.priceType = seg[&apos;IN1.41&apos;][&apos;IN1.41.2&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.3&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.fromValue = seg[&apos;IN1.41&apos;][&apos;IN1.41.3&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.4&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.toValue = seg[&apos;IN1.41&apos;][&apos;IN1.41.4&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.5&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.rangeUnits = seg[&apos;IN1.41&apos;][&apos;IN1.41.5&apos;]; }
		in1[index].roomRatePrivate.rangeType = {};
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.1&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.rangeType.id = seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.1&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.2&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.rangeType.text = seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.2&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.3&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.rangeType.codingSystem = seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.3&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.4&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.rangeType.altId = seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.4&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.5&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.rangeType.altText = seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.5&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.6&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.rangeType.altCodingSystem = seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.6&apos;]; }
		if (Object.keys(in1[index].roomRatePrivate.rangeType).length == 0) {
			if (seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.rangeType.id = seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;]; }
			else delete in1[index].roomRatePrivate.rangeType;
		}
		if (Object.keys(in1[index].roomRatePrivate).length == 0) {
			delete in1[index].roomRatePrivate;
		}

		// IN1.42, insuredEmploymentStatus
		in1[index].insuredEmploymentStatus = {};
		if (seg[&apos;IN1.42&apos;][&apos;IN1.42.1&apos;].toString() != &quot;&quot;) { in1[index].insuredEmploymentStatus.id = seg[&apos;IN1.42&apos;][&apos;IN1.42.1&apos;]; }
		if (seg[&apos;IN1.42&apos;][&apos;IN1.42.2&apos;].toString() != &quot;&quot;) { in1[index].insuredEmploymentStatus.text = seg[&apos;IN1.42&apos;][&apos;IN1.42.2&apos;]; }
		if (seg[&apos;IN1.42&apos;][&apos;IN1.42.3&apos;].toString() != &quot;&quot;) { in1[index].insuredEmploymentStatus.codingSystem = seg[&apos;IN1.42&apos;][&apos;IN1.42.3&apos;]; }
		if (seg[&apos;IN1.42&apos;][&apos;IN1.42.4&apos;].toString() != &quot;&quot;) { in1[index].insuredEmploymentStatus.altId = seg[&apos;IN1.42&apos;][&apos;IN1.42.4&apos;]; }
		if (seg[&apos;IN1.42&apos;][&apos;IN1.42.5&apos;].toString() != &quot;&quot;) { in1[index].insuredEmploymentStatus.altText = seg[&apos;IN1.42&apos;][&apos;IN1.42.5&apos;]; }
		if (seg[&apos;IN1.42&apos;][&apos;IN1.42.6&apos;].toString() != &quot;&quot;) { in1[index].insuredEmploymentStatus.altCodingSystem = seg[&apos;IN1.42&apos;][&apos;IN1.42.6&apos;]; }
		if (Object.keys(in1[index].insuredEmploymentStatus).length == 0) {
			delete in1[index].insuredEmploymentStatus;
		}
		// IN1.43, insuredSex
		if (seg[&apos;IN1.43&apos;][&apos;IN1.43.1&apos;].toString() != &quot;&quot;) { in1[index].insuredSex = seg[&apos;IN1.43&apos;][&apos;IN1.43.1&apos;]; }
		
		// IN1.44, insuredEmployerAddress
		in1[index].insuredEmployerAddress = [];
		for each (field in seg[&apos;IN1.44&apos;]) {
			var block = {};
			if (field[&apos;IN1.44.1&apos;].toString() != &quot;&quot;) { block.streetAddress = field[&apos;IN1.44.1&apos;]; }
			if (field[&apos;IN1.44.2&apos;].toString() != &quot;&quot;) { block.otherDesignation = field[&apos;IN1.44.2&apos;]; }
			if (field[&apos;IN1.44.3&apos;].toString() != &quot;&quot;) { block.city = field[&apos;IN1.44.3&apos;]; }
			if (field[&apos;IN1.44.4&apos;].toString() != &quot;&quot;) { block.stateOrProvince = field[&apos;IN1.44.4&apos;]; }
			if (field[&apos;IN1.44.5&apos;].toString() != &quot;&quot;) { block.zip = field[&apos;IN1.44.5&apos;]; }
			if (field[&apos;IN1.44.6&apos;].toString() != &quot;&quot;) { block.country = field[&apos;IN1.44.6&apos;]; }
			if (field[&apos;IN1.44.7&apos;].toString() != &quot;&quot;) { block.addressType = field[&apos;IN1.44.7&apos;]; }
			if (field[&apos;IN1.44.8&apos;].toString() != &quot;&quot;) { block.otherGeographicDesignation = field[&apos;IN1.44.8&apos;]; }
			if (field[&apos;IN1.44.9&apos;].toString() != &quot;&quot;) { block.countyOrParishCode = field[&apos;IN1.44.9&apos;]; }
			if (field[&apos;IN1.44.10&apos;].toString() != &quot;&quot;) { block.censusTract = field[&apos;IN1.44.10&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				in1[index].insuredEmployerAddress.push(block);
			}
		}
		if (in1[index].insuredEmployerAddress.length == 0) {
			delete in1[index].insuredEmployerAddress;
		}

		// IN1.45, verificationStatus
		if (seg[&apos;IN1.45&apos;][&apos;IN1.45.1&apos;].toString() != &quot;&quot;) { in1[index].verificationStatus = seg[&apos;IN1.45&apos;][&apos;IN1.45.1&apos;]; }
		
		// IN1.46, priorInsurancePlanId
		if (seg[&apos;IN1.46&apos;][&apos;IN1.46.1&apos;].toString() != &quot;&quot;) { in1[index].priorInsurancePlanId = seg[&apos;IN1.46&apos;][&apos;IN1.46.1&apos;]; }
		
		// IN1.47, coverageType
		if (seg[&apos;IN1.47&apos;][&apos;IN1.47.1&apos;].toString() != &quot;&quot;) { in1[index].coverageType = seg[&apos;IN1.47&apos;][&apos;IN1.47.1&apos;]; }
		
		// IN1.48, handicap
		if (seg[&apos;IN1.48&apos;][&apos;IN1.48.1&apos;].toString() != &quot;&quot;) { in1[index].handicap = seg[&apos;IN1.48&apos;][&apos;IN1.48.1&apos;]; }
		
		// IN1.49, insuredIdNumber
		in1[index].insuredIdNumber = [];
		for each (field in seg[&apos;IN1.49&apos;]) {
			var block = {};
			if (field[&apos;IN1.49.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN1.49.1&apos;]; }
			if (field[&apos;IN1.49.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN1.49.2&apos;]; }
			if (field[&apos;IN1.49.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN1.49.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;IN1.49.4&apos;][&apos;IN1.49.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.49.4&apos;][&apos;IN1.49.4.1&apos;]; }
			if (field[&apos;IN1.49.4&apos;][&apos;IN1.49.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN1.49.4&apos;][&apos;IN1.49.4.2&apos;]; }
			if (field[&apos;IN1.49.4&apos;][&apos;IN1.49.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN1.49.4&apos;][&apos;IN1.49.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;IN1.49.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.49.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;IN1.49.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN1.49.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;IN1.49.6&apos;][&apos;IN1.49.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.49.6&apos;][&apos;IN1.49.6.1&apos;]; }
			if (field[&apos;IN1.49.6&apos;][&apos;IN1.49.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN1.49.6&apos;][&apos;IN1.49.6.2&apos;]; }
			if (field[&apos;IN1.49.6&apos;][&apos;IN1.49.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN1.49.6&apos;][&apos;IN1.49.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;IN1.49.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.49.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				in1[index].insuredIdNumber.push(block);
			}
		}
		if (in1[index].insuredIdNumber.length == 0) {
			delete in1[index].insuredIdNumber;
		}

		// clean up IN1 and increment index
		if (Object.keys(in1[index]).length == 0) {
			delete in1[index];
		} else {
			index++;
		}
	}
}

// Optional: save a copy of the completed IN1 segment for reference later
//channelMap.put(&quot;in1&quot;, in1); // uncomment to save

// If it has content, add the IN1 segment to the hl7JSON object
if (in1 &amp;&amp; Object.keys(in1).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.IN1 = in1;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// IN1
var in1;
if (msg[&apos;IN1&apos;].length() &gt; 0) {
	in1 = [];
	var index = 0;
	for each (seg in msg.IN1) {
		in1[index] = {};
		
		// IN1.1, setId
		if (seg[&apos;IN1.1&apos;][&apos;IN1.1.1&apos;].toString() != &quot;&quot;) { in1[index].setId = seg[&apos;IN1.1&apos;][&apos;IN1.1.1&apos;]; }

		// IN1.2, planId
		in1[index].planId = {};
		if (seg[&apos;IN1.2&apos;][&apos;IN1.2.1&apos;].toString() != &quot;&quot;) { in1[index].planId.id = seg[&apos;IN1.2&apos;][&apos;IN1.2.1&apos;]; }
		if (seg[&apos;IN1.2&apos;][&apos;IN1.2.2&apos;].toString() != &quot;&quot;) { in1[index].planId.text = seg[&apos;IN1.2&apos;][&apos;IN1.2.2&apos;]; }
		if (seg[&apos;IN1.2&apos;][&apos;IN1.2.3&apos;].toString() != &quot;&quot;) { in1[index].planId.codingSystem = seg[&apos;IN1.2&apos;][&apos;IN1.2.3&apos;]; }
		if (seg[&apos;IN1.2&apos;][&apos;IN1.2.4&apos;].toString() != &quot;&quot;) { in1[index].planId.altId = seg[&apos;IN1.2&apos;][&apos;IN1.2.4&apos;]; }
		if (seg[&apos;IN1.2&apos;][&apos;IN1.2.5&apos;].toString() != &quot;&quot;) { in1[index].planId.altText = seg[&apos;IN1.2&apos;][&apos;IN1.2.5&apos;]; }
		if (seg[&apos;IN1.2&apos;][&apos;IN1.2.6&apos;].toString() != &quot;&quot;) { in1[index].planId.altCodingSystem = seg[&apos;IN1.2&apos;][&apos;IN1.2.6&apos;]; }
		if (Object.keys(in1[index].planId).length == 0) {
			delete in1[index].planId;
		}

		// IN1.3, companyId
		in1[index].companyId = [];
		for each (field in seg[&apos;IN1.3&apos;]) {
			var block = {};
			if (field[&apos;IN1.3.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN1.3.1&apos;]; }
			if (field[&apos;IN1.3.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN1.3.2&apos;]; }
			if (field[&apos;IN1.3.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN1.3.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;IN1.3.4&apos;][&apos;IN1.3.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.3.4&apos;][&apos;IN1.3.4.1&apos;]; }
			if (field[&apos;IN1.3.4&apos;][&apos;IN1.3.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN1.3.4&apos;][&apos;IN1.3.4.2&apos;]; }
			if (field[&apos;IN1.3.4&apos;][&apos;IN1.3.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN1.3.4&apos;][&apos;IN1.3.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;IN1.3.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.3.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;IN1.3.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN1.3.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;IN1.3.6&apos;][&apos;IN1.3.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.3.6&apos;][&apos;IN1.3.6.1&apos;]; }
			if (field[&apos;IN1.3.6&apos;][&apos;IN1.3.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN1.3.6&apos;][&apos;IN1.3.6.2&apos;]; }
			if (field[&apos;IN1.3.6&apos;][&apos;IN1.3.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN1.3.6&apos;][&apos;IN1.3.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;IN1.3.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.3.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				in1[index].companyId.push(block);
			}
		}
		if (in1[index].companyId.length == 0) {
			delete in1[index].companyId;
		}

		// IN1.4, companyName
		in1[index].companyName = [];
		for each (field in seg[&apos;IN1.4&apos;]) {
			var block = {};
			if (field[&apos;IN1.4.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;IN1.4.1&apos;]; }
			if (field[&apos;IN1.4.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;IN1.4.2&apos;]; }
			if (field[&apos;IN1.4.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;IN1.4.3&apos;]; }
			if (field[&apos;IN1.4.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN1.4.4&apos;]; }
			if (field[&apos;IN1.4.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN1.4.5&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;IN1.4.6&apos;][&apos;IN1.4.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.4.6&apos;][&apos;IN1.4.6.1&apos;]; }
			if (field[&apos;IN1.4.6&apos;][&apos;IN1.4.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN1.4.6&apos;][&apos;IN1.4.6.2&apos;]; }
			if (field[&apos;IN1.4.6&apos;][&apos;IN1.4.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN1.4.6&apos;][&apos;IN1.4.6.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;IN1.4.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.4.6&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;IN1.4.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN1.4.7&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;IN1.4.8&apos;][&apos;IN1.4.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.4.8&apos;][&apos;IN1.4.8.1&apos;]; }
			if (field[&apos;IN1.4.8&apos;][&apos;IN1.4.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN1.4.8&apos;][&apos;IN1.4.8.2&apos;]; }
			if (field[&apos;IN1.4.8&apos;][&apos;IN1.4.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN1.4.8&apos;][&apos;IN1.4.8.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;IN1.4.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.4.8&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				in1[index].companyName.push(block);
			}
		}
		if (in1[index].companyName.length == 0) {
			delete in1[index].companyName;
		}
		
		// IN1.5, companyAddress
		in1[index].companyAddress = [];
		for each (field in seg[&apos;IN1.5&apos;]) {
			var block = {};
			if (field[&apos;IN1.5.1&apos;].toString() != &quot;&quot;) { block.streetAddress = field[&apos;IN1.5.1&apos;]; }
			if (field[&apos;IN1.5.2&apos;].toString() != &quot;&quot;) { block.otherDesignation = field[&apos;IN1.5.2&apos;]; }
			if (field[&apos;IN1.5.3&apos;].toString() != &quot;&quot;) { block.city = field[&apos;IN1.5.3&apos;]; }
			if (field[&apos;IN1.5.4&apos;].toString() != &quot;&quot;) { block.stateOrProvince = field[&apos;IN1.5.4&apos;]; }
			if (field[&apos;IN1.5.5&apos;].toString() != &quot;&quot;) { block.zip = field[&apos;IN1.5.5&apos;]; }
			if (field[&apos;IN1.5.6&apos;].toString() != &quot;&quot;) { block.country = field[&apos;IN1.5.6&apos;]; }
			if (field[&apos;IN1.5.7&apos;].toString() != &quot;&quot;) { block.addressType = field[&apos;IN1.5.7&apos;]; }
			if (field[&apos;IN1.5.8&apos;].toString() != &quot;&quot;) { block.otherGeographicDesignation = field[&apos;IN1.5.8&apos;]; }
			if (field[&apos;IN1.5.9&apos;].toString() != &quot;&quot;) { block.countyOrParishCode = field[&apos;IN1.5.9&apos;]; }
			if (field[&apos;IN1.5.10&apos;].toString() != &quot;&quot;) { block.censusTract = field[&apos;IN1.5.10&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				in1[index].companyAddress.push(block);
			}
		}
		if (in1[index].companyAddress.length == 0) {
			delete in1[index].companyAddress;
		}

		// IN1.6, companyContactPerson
		in1[index].companyContactPerson = [];
		for each (field in seg[&apos;IN1.6&apos;]) {
			var block = {};
			if (field[&apos;IN1.6.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN1.6.1&apos;]; }
			if (field[&apos;IN1.6.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN1.6.2&apos;]; }
			if (field[&apos;IN1.6.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN1.6.3&apos;]; }
			if (field[&apos;IN1.6.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN1.6.4&apos;]; }
			if (field[&apos;IN1.6.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN1.6.5&apos;]; }
			if (field[&apos;IN1.6.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN1.6.6&apos;]; }
			if (field[&apos;IN1.6.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN1.6.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				in1[index].companyContactPerson.push(block);
			}	
		}
		if (in1[index].companyContactPerson.length == 0) {
			delete in1[index].companyContactPerson;
		}

		// IN1.7, companyPhoneNumber
		in1[index].companyPhoneNumber = [];
		for each (field in seg[&apos;IN1.7&apos;]) {
			var block = {};
			if (field[&apos;IN1.7.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;IN1.7.1&apos;]; }
			if (field[&apos;IN1.7.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;IN1.7.2&apos;]; }
			if (field[&apos;IN1.7.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;IN1.7.3&apos;]; }
			if (field[&apos;IN1.7.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;IN1.7.4&apos;]; }
			if (field[&apos;IN1.7.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;IN1.7.5&apos;]; }
			if (field[&apos;IN1.7.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;IN1.7.6&apos;]; }
			if (field[&apos;IN1.7.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;IN1.7.7&apos;]; }
			if (field[&apos;IN1.7.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;IN1.7.8&apos;]; }
			if (field[&apos;IN1.7.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;IN1.7.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				in1[index].companyPhoneNumber.push(block);
			}
		}
		if (in1[index].companyPhoneNumber.length == 0) {
			delete in1[index].companyPhoneNumber;
		}

		// IN1.8, groupNumber
		if (seg[&apos;IN1.8&apos;][&apos;IN1.8.1&apos;].toString() != &quot;&quot;) { in1[index].groupNumber = seg[&apos;IN1.8&apos;][&apos;IN1.8.1&apos;]; }

		// IN1.9, groupName
		in1[index].groupName = [];
		for each (field in seg[&apos;IN1.9&apos;]) {
			var block = {};
			if (field[&apos;IN1.9.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;IN1.9.1&apos;]; }
			if (field[&apos;IN1.9.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;IN1.9.2&apos;]; }
			if (field[&apos;IN1.9.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;IN1.9.3&apos;]; }
			if (field[&apos;IN1.9.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN1.9.4&apos;]; }
			if (field[&apos;IN1.9.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN1.9.5&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;IN1.9.6&apos;][&apos;IN1.9.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.9.6&apos;][&apos;IN1.9.6.1&apos;]; }
			if (field[&apos;IN1.9.6&apos;][&apos;IN1.9.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN1.9.6&apos;][&apos;IN1.9.6.2&apos;]; }
			if (field[&apos;IN1.9.6&apos;][&apos;IN1.9.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN1.9.6&apos;][&apos;IN1.9.6.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;IN1.9.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.9.6&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;IN1.9.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN1.9.7&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;IN1.9.8&apos;][&apos;IN1.9.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.9.8&apos;][&apos;IN1.9.8.1&apos;]; }
			if (field[&apos;IN1.9.8&apos;][&apos;IN1.9.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN1.9.8&apos;][&apos;IN1.9.8.2&apos;]; }
			if (field[&apos;IN1.9.8&apos;][&apos;IN1.9.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN1.9.8&apos;][&apos;IN1.9.8.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;IN1.9.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.9.8&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				in1[index].groupName.push(block);
			}
		}
		if (in1[index].groupName.length == 0) {
			delete in1[index].groupName;
		}

		// IN1.10, groupEmpId
		in1[index].groupEmpId = [];
		for each (field in seg[&apos;IN1.10&apos;]) {
			var block = {};
			if (field[&apos;IN1.10.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN1.10.1&apos;]; }
			if (field[&apos;IN1.10.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN1.10.2&apos;]; }
			if (field[&apos;IN1.10.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN1.10.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;IN1.10.4&apos;][&apos;IN1.10.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.10.4&apos;][&apos;IN1.10.4.1&apos;]; }
			if (field[&apos;IN1.10.4&apos;][&apos;IN1.10.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN1.10.4&apos;][&apos;IN1.10.4.2&apos;]; }
			if (field[&apos;IN1.10.4&apos;][&apos;IN1.10.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN1.10.4&apos;][&apos;IN1.10.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;IN1.10.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.10.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;IN1.10.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN1.10.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;IN1.10.6&apos;][&apos;IN1.10.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.10.6&apos;][&apos;IN1.10.6.1&apos;]; }
			if (field[&apos;IN1.10.6&apos;][&apos;IN1.10.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN1.10.6&apos;][&apos;IN1.10.6.2&apos;]; }
			if (field[&apos;IN1.10.6&apos;][&apos;IN1.10.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN1.10.6&apos;][&apos;IN1.10.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;IN1.10.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.10.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				in1[index].groupEmpId.push(block);
			}
		}
		if (in1[index].groupEmpId.length == 0) {
			delete in1[index].groupEmpId;
		}

		// IN1.11, groupEmpName
		in1[index].groupEmpName = [];
		for each (field in seg[&apos;IN1.11&apos;]) {
			var block = {};
			if (field[&apos;IN1.11.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;IN1.11.1&apos;]; }
			if (field[&apos;IN1.11.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;IN1.11.2&apos;]; }
			if (field[&apos;IN1.11.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;IN1.11.3&apos;]; }
			if (field[&apos;IN1.11.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN1.11.4&apos;]; }
			if (field[&apos;IN1.11.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN1.11.5&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;IN1.11.6&apos;][&apos;IN1.11.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.11.6&apos;][&apos;IN1.11.6.1&apos;]; }
			if (field[&apos;IN1.11.6&apos;][&apos;IN1.11.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN1.11.6&apos;][&apos;IN1.11.6.2&apos;]; }
			if (field[&apos;IN1.11.6&apos;][&apos;IN1.11.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN1.11.6&apos;][&apos;IN1.11.6.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;IN1.11.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.11.6&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;IN1.11.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN1.11.7&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;IN1.11.8&apos;][&apos;IN1.11.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.11.8&apos;][&apos;IN1.11.8.1&apos;]; }
			if (field[&apos;IN1.11.8&apos;][&apos;IN1.11.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN1.11.8&apos;][&apos;IN1.11.8.2&apos;]; }
			if (field[&apos;IN1.11.8&apos;][&apos;IN1.11.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN1.11.8&apos;][&apos;IN1.11.8.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;IN1.11.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.11.8&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				in1[index].groupEmpName.push(block);
			}
		}
		if (in1[index].groupEmpName.length == 0) {
			delete in1[index].groupEmpName;
		}

		// IN1.12, planEffectiveDate
		if (seg[&apos;IN1.12&apos;][&apos;IN1.12.1&apos;].toString() != &quot;&quot;) { in1[index].planEffectiveDate = seg[&apos;IN1.12&apos;][&apos;IN1.12.1&apos;]; }

		// IN1.13, planExpirationDate
		if (seg[&apos;IN1.13&apos;][&apos;IN1.13.1&apos;].toString() != &quot;&quot;) { in1[index].planExpirationDate = seg[&apos;IN1.13&apos;][&apos;IN1.13.1&apos;]; }

		// IN1.14, authorizationInformation
		in1[index].authorizationInformation = {};
		if (seg[&apos;IN1.14&apos;][&apos;IN1.14.1&apos;].toString() != &quot;&quot;) { in1[index].authorizationInformation.authorizationNumber = seg[&apos;IN1.14&apos;][&apos;IN1.14.1&apos;]; }
		if (seg[&apos;IN1.14&apos;][&apos;IN1.14.2&apos;].toString() != &quot;&quot;) { in1[index].authorizationInformation.date = seg[&apos;IN1.14&apos;][&apos;IN1.14.2&apos;]; }
		if (seg[&apos;IN1.14&apos;][&apos;IN1.14.3&apos;].toString() != &quot;&quot;) { in1[index].authorizationInformation.source = seg[&apos;IN1.14&apos;][&apos;IN1.14.3&apos;]; }
		if (Object.keys(in1[index].authorizationInformation).length == 0) {
			delete in1[index].authorizationInformation;
		}

		// IN1.15, planType
		if (seg[&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString() != &quot;&quot;) { in1[index].planType = seg[&apos;IN1.15&apos;][&apos;IN1.15.1&apos;]; }
		
		// IN1.16, insuredName
		in1[index].insuredName = [];
		for each (field in seg[&apos;IN1.16&apos;]) {
			var block = {};
			if (field[&apos;IN1.16.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN1.16.1&apos;]; }
			if (field[&apos;IN1.16.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN1.16.2&apos;]; }
			if (field[&apos;IN1.16.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN1.16.3&apos;]; }
			if (field[&apos;IN1.16.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN1.16.4&apos;]; }
			if (field[&apos;IN1.16.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN1.16.5&apos;]; }
			if (field[&apos;IN1.16.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN1.16.6&apos;]; }
			if (field[&apos;IN1.16.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN1.16.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				in1[index].insuredName.push(block);
			}	
		}
		if (in1[index].insuredName.length == 0) {
			delete in1[index].insuredName;
		}

		// IN1.17, insuredRelationshipToPatient
		if (seg[&apos;IN1.17&apos;][&apos;IN1.17.1&apos;].toString() != &quot;&quot;) { in1[index].insuredRelationshipToPatient = seg[&apos;IN1.17&apos;][&apos;IN1.17.1&apos;]; }
		
		// IN1.18, insuredDob
		if (seg[&apos;IN1.18&apos;][&apos;IN1.18.1&apos;].toString() != &quot;&quot;) { in1[index].insuredDob = seg[&apos;IN1.18&apos;][&apos;IN1.18.1&apos;]; }
		
		// IN1.19, insuredAddress
		in1[index].insuredAddress = [];
		for each (field in seg[&apos;IN1.19&apos;]) {
			var block = {};
			if (field[&apos;IN1.19.1&apos;].toString() != &quot;&quot;) { block.streetAddress = field[&apos;IN1.19.1&apos;]; }
			if (field[&apos;IN1.19.2&apos;].toString() != &quot;&quot;) { block.otherDesignation = field[&apos;IN1.19.2&apos;]; }
			if (field[&apos;IN1.19.3&apos;].toString() != &quot;&quot;) { block.city = field[&apos;IN1.19.3&apos;]; }
			if (field[&apos;IN1.19.4&apos;].toString() != &quot;&quot;) { block.stateOrProvince = field[&apos;IN1.19.4&apos;]; }
			if (field[&apos;IN1.19.5&apos;].toString() != &quot;&quot;) { block.zip = field[&apos;IN1.19.5&apos;]; }
			if (field[&apos;IN1.19.6&apos;].toString() != &quot;&quot;) { block.country = field[&apos;IN1.19.6&apos;]; }
			if (field[&apos;IN1.19.7&apos;].toString() != &quot;&quot;) { block.addressType = field[&apos;IN1.19.7&apos;]; }
			if (field[&apos;IN1.19.8&apos;].toString() != &quot;&quot;) { block.otherGeographicDesignation = field[&apos;IN1.19.8&apos;]; }
			if (field[&apos;IN1.19.9&apos;].toString() != &quot;&quot;) { block.countyOrParishCode = field[&apos;IN1.19.9&apos;]; }
			if (field[&apos;IN1.19.10&apos;].toString() != &quot;&quot;) { block.censusTract = field[&apos;IN1.19.10&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				in1[index].insuredAddress.push(block);
			}
		}
		if (in1[index].insuredAddress.length == 0) {
			delete in1[index].insuredAddress;
		}

		// IN1.20, assignmentOfBenefits
		if (seg[&apos;IN1.20&apos;][&apos;IN1.20.1&apos;].toString() != &quot;&quot;) { in1[index].assignmentOfBenefits = seg[&apos;IN1.20&apos;][&apos;IN1.20.1&apos;]; }
		
		// IN1.21, coordinationOfBenefits
		if (seg[&apos;IN1.21&apos;][&apos;IN1.21.1&apos;].toString() != &quot;&quot;) { in1[index].coordinationOfBenefits = seg[&apos;IN1.21&apos;][&apos;IN1.21.1&apos;]; }
		
		// IN1.22, coordinationOfBenefitsPriority
		if (seg[&apos;IN1.22&apos;][&apos;IN1.22.1&apos;].toString() != &quot;&quot;) { in1[index].coordinationOfBenefitsPriority = seg[&apos;IN1.22&apos;][&apos;IN1.22.1&apos;]; }
		
		// IN1.23, noticeOfAdmissionFlag
		if (seg[&apos;IN1.23&apos;][&apos;IN1.23.1&apos;].toString() != &quot;&quot;) { in1[index].noticeOfAdmissionFlag = seg[&apos;IN1.23&apos;][&apos;IN1.23.1&apos;]; }
		
		// IN1.24, noticeOfAdmissionDate
		if (seg[&apos;IN1.24&apos;][&apos;IN1.24.1&apos;].toString() != &quot;&quot;) { in1[index].noticeOfAdmissionDate = seg[&apos;IN1.24&apos;][&apos;IN1.24.1&apos;]; }
		
		// IN1.25, reportOfEligibilityFlag
		if (seg[&apos;IN1.25&apos;][&apos;IN1.25.1&apos;].toString() != &quot;&quot;) { in1[index].reportOfEligibilityFlag = seg[&apos;IN1.25&apos;][&apos;IN1.25.1&apos;]; }
		
		// IN1.26, reportOfEligibilityDate
		if (seg[&apos;IN1.26&apos;][&apos;IN1.26.1&apos;].toString() != &quot;&quot;) { in1[index].reportOfEligibilityDate = seg[&apos;IN1.26&apos;][&apos;IN1.26.1&apos;]; }
		
		// IN1.27, releaseInformationCode
		if (seg[&apos;IN1.27&apos;][&apos;IN1.27.1&apos;].toString() != &quot;&quot;) { in1[index].releaseInformationCode = seg[&apos;IN1.27&apos;][&apos;IN1.27.1&apos;]; }
		
		// IN1.28, preAdmitCert
		if (seg[&apos;IN1.28&apos;][&apos;IN1.28.1&apos;].toString() != &quot;&quot;) { in1[index].preAdmitCert = seg[&apos;IN1.28&apos;][&apos;IN1.28.1&apos;]; }
		
		// IN1.29, verificationDateTime
		if (seg[&apos;IN1.29&apos;][&apos;IN1.29.1&apos;].toString() != &quot;&quot;) { in1[index].verificationDateTime = seg[&apos;IN1.29&apos;][&apos;IN1.29.1&apos;]; }
		
		// IN1.30, verificationBy
		in1[index].verificationBy = {};
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.1&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.id = seg[&apos;IN1.30&apos;][&apos;IN1.30.1&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.2&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.lastName = seg[&apos;IN1.30&apos;][&apos;IN1.30.2&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.3&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.firstName = seg[&apos;IN1.30&apos;][&apos;IN1.30.3&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.4&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.middleInitOrName = seg[&apos;IN1.30&apos;][&apos;IN1.30.4&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.5&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.suffix = seg[&apos;IN1.30&apos;][&apos;IN1.30.5&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.6&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.prefix = seg[&apos;IN1.30&apos;][&apos;IN1.30.6&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.7&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.degree = seg[&apos;IN1.30&apos;][&apos;IN1.30.7&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.8&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.sourceTable = seg[&apos;IN1.30&apos;][&apos;IN1.30.8&apos;]; }
		in1[index].verificationBy.assigningAuthority = {};
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.9&apos;][&apos;IN1.30.9.1&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.assigningAuthority.id = seg[&apos;IN1.30&apos;][&apos;IN1.30.9&apos;][&apos;IN1.30.9.1&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.9&apos;][&apos;IN1.30.9.2&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.assigningAuthority.universalId = seg[&apos;IN1.30&apos;][&apos;IN1.30.9&apos;][&apos;IN1.30.9.2&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.9&apos;][&apos;IN1.30.9.3&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.assigningAuthority.universalIdType = seg[&apos;IN1.30&apos;][&apos;IN1.30.9&apos;][&apos;IN1.30.9.3&apos;]; }
		if (Object.keys(in1[index].verificationBy.assigningAuthority).length == 0) {
			if (seg[&apos;IN1.30&apos;][&apos;IN1.30.9&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.assigningAuthority.id = seg[&apos;IN1.30&apos;][&apos;IN1.30.9&apos;]; }
			else delete in1[index].verificationBy.assigningAuthority;
		}
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.10&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.nameTypeCode = seg[&apos;IN1.30&apos;][&apos;IN1.30.10&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.11&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.identifierCheckDigit = seg[&apos;IN1.30&apos;][&apos;IN1.30.11&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.12&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.codeIdentifyingCheckDigitScheme = seg[&apos;IN1.30&apos;][&apos;IN1.30.12&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.13&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.identifierTypeCode = seg[&apos;IN1.30&apos;][&apos;IN1.30.13&apos;]; }
		in1[index].verificationBy.assigningFacility = {};
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.14&apos;][&apos;IN1.30.14.1&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.assigningFacility.id = seg[&apos;IN1.30&apos;][&apos;IN1.30.14&apos;][&apos;IN1.30.14.1&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.14&apos;][&apos;IN1.30.14.2&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.assigningFacility.universalId = seg[&apos;IN1.30&apos;][&apos;IN1.30.14&apos;][&apos;IN1.30.14.2&apos;]; }
		if (seg[&apos;IN1.30&apos;][&apos;IN1.30.14&apos;][&apos;IN1.30.14.3&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.assigningFacility.universalIdType = seg[&apos;IN1.30&apos;][&apos;IN1.30.14&apos;][&apos;IN1.30.14.3&apos;]; }
		if (Object.keys(in1[index].verificationBy.assigningFacility).length == 0) {
			if (seg[&apos;IN1.30&apos;][&apos;IN1.30.14&apos;].toString() != &quot;&quot;) { in1[index].verificationBy.assigningFacility.id = seg[&apos;IN1.30&apos;][&apos;IN1.30.14&apos;]; }
			else delete in1[index].verificationBy.assigningFacility;
		}
		if (Object.keys(in1[index].verificationBy).length == 0) {
			delete in1[index].verificationBy;
		}

		// IN1.31, typeOfAgreementCode
		if (seg[&apos;IN1.31&apos;][&apos;IN1.31.1&apos;].toString() != &quot;&quot;) { in1[index].typeOfAgreementCode = seg[&apos;IN1.31&apos;][&apos;IN1.31.1&apos;]; }
		
		// IN1.32, billingStatus
		if (seg[&apos;IN1.32&apos;][&apos;IN1.32.1&apos;].toString() != &quot;&quot;) { in1[index].billingStatus = seg[&apos;IN1.32&apos;][&apos;IN1.32.1&apos;]; }
		
		// IN1.33, lifetimeReserveDays
		if (seg[&apos;IN1.33&apos;][&apos;IN1.33.1&apos;].toString() != &quot;&quot;) { in1[index].lifetimeReserveDays = seg[&apos;IN1.33&apos;][&apos;IN1.33.1&apos;]; }
		
		// IN1.34, delayBeforeLrDay
		if (seg[&apos;IN1.34&apos;][&apos;IN1.34.1&apos;].toString() != &quot;&quot;) { in1[index].delayBeforeLrDay = seg[&apos;IN1.34&apos;][&apos;IN1.34.1&apos;]; }
		
		// IN1.35, companyPlanCode
		if (seg[&apos;IN1.35&apos;][&apos;IN1.35.1&apos;].toString() != &quot;&quot;) { in1[index].companyPlanCode = seg[&apos;IN1.35&apos;][&apos;IN1.35.1&apos;]; }
		
		// IN1.36, policyNumber
		if (seg[&apos;IN1.36&apos;][&apos;IN1.36.1&apos;].toString() != &quot;&quot;) { in1[index].policyNumber = seg[&apos;IN1.36&apos;][&apos;IN1.36.1&apos;]; }
		
		// IN1.37, policyDeductible
		in1[index].policyDeductible = {};
		in1[index].policyDeductible.price = {};
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.1&apos;][&apos;IN1.37.1.1&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.price.quantity = seg[&apos;IN1.37&apos;][&apos;IN1.37.1&apos;][&apos;IN1.37.1.1&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.1&apos;][&apos;IN1.37.1.2&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.price.denomination = seg[&apos;IN1.37&apos;][&apos;IN1.37.1&apos;][&apos;IN1.37.1.2&apos;]; }
		if (Object.keys(in1[index].policyDeductible.price).length == 0) {
			if (seg[&apos;IN1.37&apos;][&apos;IN1.37.1&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.price.quantity = seg[&apos;IN1.37&apos;][&apos;IN1.37.1&apos;]; }
			else delete in1[index].policyDeductible.price;
		}
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.2&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.priceType = seg[&apos;IN1.37&apos;][&apos;IN1.37.2&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.3&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.fromValue = seg[&apos;IN1.37&apos;][&apos;IN1.37.3&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.4&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.toValue = seg[&apos;IN1.37&apos;][&apos;IN1.37.4&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.5&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.rangeUnits = seg[&apos;IN1.37&apos;][&apos;IN1.37.5&apos;]; }
		in1[index].policyDeductible.rangeType = {};
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.1&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.rangeType.id = seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.1&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.2&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.rangeType.text = seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.2&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.3&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.rangeType.codingSystem = seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.3&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.4&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.rangeType.altId = seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.4&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.5&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.rangeType.altText = seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.5&apos;]; }
		if (seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.6&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.rangeType.altCodingSystem = seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;][&apos;IN1.37.6.6&apos;]; }
		if (Object.keys(in1[index].policyDeductible.rangeType).length == 0) {
			if (seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;].toString() != &quot;&quot;) { in1[index].policyDeductible.rangeType.id = seg[&apos;IN1.37&apos;][&apos;IN1.37.6&apos;]; }
			else delete in1[index].policyDeductible.rangeType;
		}
		if (Object.keys(in1[index].policyDeductible).length == 0) {
			delete in1[index].policyDeductible;
		}

		// IN1.38, policyLimitAmount
		in1[index].policyLimitAmount = {};
		in1[index].policyLimitAmount.price = {};
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.1&apos;][&apos;IN1.38.1.1&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.price.quantity = seg[&apos;IN1.38&apos;][&apos;IN1.38.1&apos;][&apos;IN1.38.1.1&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.1&apos;][&apos;IN1.38.1.2&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.price.denomination = seg[&apos;IN1.38&apos;][&apos;IN1.38.1&apos;][&apos;IN1.38.1.2&apos;]; }
		if (Object.keys(in1[index].policyLimitAmount.price).length == 0) {
			if (seg[&apos;IN1.38&apos;][&apos;IN1.38.1&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.price.quantity = seg[&apos;IN1.38&apos;][&apos;IN1.38.1&apos;]; }
			else delete in1[index].policyLimitAmount.price;
		}
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.2&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.priceType = seg[&apos;IN1.38&apos;][&apos;IN1.38.2&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.3&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.fromValue = seg[&apos;IN1.38&apos;][&apos;IN1.38.3&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.4&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.toValue = seg[&apos;IN1.38&apos;][&apos;IN1.38.4&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.5&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.rangeUnits = seg[&apos;IN1.38&apos;][&apos;IN1.38.5&apos;]; }
		in1[index].policyLimitAmount.rangeType = {};
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.1&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.rangeType.id = seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.1&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.2&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.rangeType.text = seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.2&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.3&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.rangeType.codingSystem = seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.3&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.4&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.rangeType.altId = seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.4&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.5&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.rangeType.altText = seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.5&apos;]; }
		if (seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.6&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.rangeType.altCodingSystem = seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;][&apos;IN1.38.6.6&apos;]; }
		if (Object.keys(in1[index].policyLimitAmount.rangeType).length == 0) {
			if (seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;].toString() != &quot;&quot;) { in1[index].policyLimitAmount.rangeType.id = seg[&apos;IN1.38&apos;][&apos;IN1.38.6&apos;]; }
			else delete in1[index].policyLimitAmount.rangeType;
		}
		if (Object.keys(in1[index].policyLimitAmount).length == 0) {
			delete in1[index].policyLimitAmount;
		}

		// IN1.39, policyLimitDays
		if (seg[&apos;IN1.39&apos;][&apos;IN1.39.1&apos;].toString() != &quot;&quot;) { in1[index].policyLimitDays = seg[&apos;IN1.39&apos;][&apos;IN1.39.1&apos;]; }
		
		// IN1.40, roomRateSemiPrivate
		in1[index].roomRateSemiPrivate = {};
		in1[index].roomRateSemiPrivate.price = {};
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.1&apos;][&apos;IN1.40.1.1&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.price.quantity = seg[&apos;IN1.40&apos;][&apos;IN1.40.1&apos;][&apos;IN1.40.1.1&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.1&apos;][&apos;IN1.40.1.2&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.price.denomination = seg[&apos;IN1.40&apos;][&apos;IN1.40.1&apos;][&apos;IN1.40.1.2&apos;]; }
		if (Object.keys(in1[index].roomRateSemiPrivate.price).length == 0) {
			if (seg[&apos;IN1.40&apos;][&apos;IN1.40.1&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.price.quantity = seg[&apos;IN1.40&apos;][&apos;IN1.40.1&apos;]; }
			else delete in1[index].roomRateSemiPrivate.price;
		}
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.2&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.priceType = seg[&apos;IN1.40&apos;][&apos;IN1.40.2&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.3&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.fromValue = seg[&apos;IN1.40&apos;][&apos;IN1.40.3&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.4&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.toValue = seg[&apos;IN1.40&apos;][&apos;IN1.40.4&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.5&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.rangeUnits = seg[&apos;IN1.40&apos;][&apos;IN1.40.5&apos;]; }
		in1[index].roomRateSemiPrivate.rangeType = {};
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.1&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.rangeType.id = seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.1&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.2&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.rangeType.text = seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.2&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.3&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.rangeType.codingSystem = seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.3&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.4&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.rangeType.altId = seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.4&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.5&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.rangeType.altText = seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.5&apos;]; }
		if (seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.6&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.rangeType.altCodingSystem = seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;][&apos;IN1.40.6.6&apos;]; }
		if (Object.keys(in1[index].roomRateSemiPrivate.rangeType).length == 0) {
			if (seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;].toString() != &quot;&quot;) { in1[index].roomRateSemiPrivate.rangeType.id = seg[&apos;IN1.40&apos;][&apos;IN1.40.6&apos;]; }
			else delete in1[index].roomRateSemiPrivate.rangeType;
		}
		if (Object.keys(in1[index].roomRateSemiPrivate).length == 0) {
			delete in1[index].roomRateSemiPrivate;
		}

		// IN1.41, roomRatePrivate
		in1[index].roomRatePrivate = {};
		in1[index].roomRatePrivate.price = {};
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.1&apos;][&apos;IN1.41.1.1&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.price.quantity = seg[&apos;IN1.41&apos;][&apos;IN1.41.1&apos;][&apos;IN1.41.1.1&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.1&apos;][&apos;IN1.41.1.2&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.price.denomination = seg[&apos;IN1.41&apos;][&apos;IN1.41.1&apos;][&apos;IN1.41.1.2&apos;]; }
		if (Object.keys(in1[index].roomRatePrivate.price).length == 0) {
			if (seg[&apos;IN1.41&apos;][&apos;IN1.41.1&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.price.quantity = seg[&apos;IN1.41&apos;][&apos;IN1.41.1&apos;]; }
			else delete in1[index].roomRatePrivate.price;
		}
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.2&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.priceType = seg[&apos;IN1.41&apos;][&apos;IN1.41.2&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.3&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.fromValue = seg[&apos;IN1.41&apos;][&apos;IN1.41.3&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.4&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.toValue = seg[&apos;IN1.41&apos;][&apos;IN1.41.4&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.5&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.rangeUnits = seg[&apos;IN1.41&apos;][&apos;IN1.41.5&apos;]; }
		in1[index].roomRatePrivate.rangeType = {};
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.1&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.rangeType.id = seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.1&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.2&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.rangeType.text = seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.2&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.3&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.rangeType.codingSystem = seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.3&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.4&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.rangeType.altId = seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.4&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.5&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.rangeType.altText = seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.5&apos;]; }
		if (seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.6&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.rangeType.altCodingSystem = seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;][&apos;IN1.41.6.6&apos;]; }
		if (Object.keys(in1[index].roomRatePrivate.rangeType).length == 0) {
			if (seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;].toString() != &quot;&quot;) { in1[index].roomRatePrivate.rangeType.id = seg[&apos;IN1.41&apos;][&apos;IN1.41.6&apos;]; }
			else delete in1[index].roomRatePrivate.rangeType;
		}
		if (Object.keys(in1[index].roomRatePrivate).length == 0) {
			delete in1[index].roomRatePrivate;
		}

		// IN1.42, insuredEmploymentStatus
		in1[index].insuredEmploymentStatus = {};
		if (seg[&apos;IN1.42&apos;][&apos;IN1.42.1&apos;].toString() != &quot;&quot;) { in1[index].insuredEmploymentStatus.id = seg[&apos;IN1.42&apos;][&apos;IN1.42.1&apos;]; }
		if (seg[&apos;IN1.42&apos;][&apos;IN1.42.2&apos;].toString() != &quot;&quot;) { in1[index].insuredEmploymentStatus.text = seg[&apos;IN1.42&apos;][&apos;IN1.42.2&apos;]; }
		if (seg[&apos;IN1.42&apos;][&apos;IN1.42.3&apos;].toString() != &quot;&quot;) { in1[index].insuredEmploymentStatus.codingSystem = seg[&apos;IN1.42&apos;][&apos;IN1.42.3&apos;]; }
		if (seg[&apos;IN1.42&apos;][&apos;IN1.42.4&apos;].toString() != &quot;&quot;) { in1[index].insuredEmploymentStatus.altId = seg[&apos;IN1.42&apos;][&apos;IN1.42.4&apos;]; }
		if (seg[&apos;IN1.42&apos;][&apos;IN1.42.5&apos;].toString() != &quot;&quot;) { in1[index].insuredEmploymentStatus.altText = seg[&apos;IN1.42&apos;][&apos;IN1.42.5&apos;]; }
		if (seg[&apos;IN1.42&apos;][&apos;IN1.42.6&apos;].toString() != &quot;&quot;) { in1[index].insuredEmploymentStatus.altCodingSystem = seg[&apos;IN1.42&apos;][&apos;IN1.42.6&apos;]; }
		if (Object.keys(in1[index].insuredEmploymentStatus).length == 0) {
			delete in1[index].insuredEmploymentStatus;
		}
		// IN1.43, insuredSex
		if (seg[&apos;IN1.43&apos;][&apos;IN1.43.1&apos;].toString() != &quot;&quot;) { in1[index].insuredSex = seg[&apos;IN1.43&apos;][&apos;IN1.43.1&apos;]; }
		
		// IN1.44, insuredEmployerAddress
		in1[index].insuredEmployerAddress = [];
		for each (field in seg[&apos;IN1.44&apos;]) {
			var block = {};
			if (field[&apos;IN1.44.1&apos;].toString() != &quot;&quot;) { block.streetAddress = field[&apos;IN1.44.1&apos;]; }
			if (field[&apos;IN1.44.2&apos;].toString() != &quot;&quot;) { block.otherDesignation = field[&apos;IN1.44.2&apos;]; }
			if (field[&apos;IN1.44.3&apos;].toString() != &quot;&quot;) { block.city = field[&apos;IN1.44.3&apos;]; }
			if (field[&apos;IN1.44.4&apos;].toString() != &quot;&quot;) { block.stateOrProvince = field[&apos;IN1.44.4&apos;]; }
			if (field[&apos;IN1.44.5&apos;].toString() != &quot;&quot;) { block.zip = field[&apos;IN1.44.5&apos;]; }
			if (field[&apos;IN1.44.6&apos;].toString() != &quot;&quot;) { block.country = field[&apos;IN1.44.6&apos;]; }
			if (field[&apos;IN1.44.7&apos;].toString() != &quot;&quot;) { block.addressType = field[&apos;IN1.44.7&apos;]; }
			if (field[&apos;IN1.44.8&apos;].toString() != &quot;&quot;) { block.otherGeographicDesignation = field[&apos;IN1.44.8&apos;]; }
			if (field[&apos;IN1.44.9&apos;].toString() != &quot;&quot;) { block.countyOrParishCode = field[&apos;IN1.44.9&apos;]; }
			if (field[&apos;IN1.44.10&apos;].toString() != &quot;&quot;) { block.censusTract = field[&apos;IN1.44.10&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				in1[index].insuredEmployerAddress.push(block);
			}
		}
		if (in1[index].insuredEmployerAddress.length == 0) {
			delete in1[index].insuredEmployerAddress;
		}

		// IN1.45, verificationStatus
		if (seg[&apos;IN1.45&apos;][&apos;IN1.45.1&apos;].toString() != &quot;&quot;) { in1[index].verificationStatus = seg[&apos;IN1.45&apos;][&apos;IN1.45.1&apos;]; }
		
		// IN1.46, priorInsurancePlanId
		if (seg[&apos;IN1.46&apos;][&apos;IN1.46.1&apos;].toString() != &quot;&quot;) { in1[index].priorInsurancePlanId = seg[&apos;IN1.46&apos;][&apos;IN1.46.1&apos;]; }
		
		// IN1.47, coverageType
		if (seg[&apos;IN1.47&apos;][&apos;IN1.47.1&apos;].toString() != &quot;&quot;) { in1[index].coverageType = seg[&apos;IN1.47&apos;][&apos;IN1.47.1&apos;]; }
		
		// IN1.48, handicap
		if (seg[&apos;IN1.48&apos;][&apos;IN1.48.1&apos;].toString() != &quot;&quot;) { in1[index].handicap = seg[&apos;IN1.48&apos;][&apos;IN1.48.1&apos;]; }
		
		// IN1.49, insuredIdNumber
		in1[index].insuredIdNumber = [];
		for each (field in seg[&apos;IN1.49&apos;]) {
			var block = {};
			if (field[&apos;IN1.49.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN1.49.1&apos;]; }
			if (field[&apos;IN1.49.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN1.49.2&apos;]; }
			if (field[&apos;IN1.49.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN1.49.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;IN1.49.4&apos;][&apos;IN1.49.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.49.4&apos;][&apos;IN1.49.4.1&apos;]; }
			if (field[&apos;IN1.49.4&apos;][&apos;IN1.49.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN1.49.4&apos;][&apos;IN1.49.4.2&apos;]; }
			if (field[&apos;IN1.49.4&apos;][&apos;IN1.49.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN1.49.4&apos;][&apos;IN1.49.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;IN1.49.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN1.49.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;IN1.49.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN1.49.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;IN1.49.6&apos;][&apos;IN1.49.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.49.6&apos;][&apos;IN1.49.6.1&apos;]; }
			if (field[&apos;IN1.49.6&apos;][&apos;IN1.49.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN1.49.6&apos;][&apos;IN1.49.6.2&apos;]; }
			if (field[&apos;IN1.49.6&apos;][&apos;IN1.49.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN1.49.6&apos;][&apos;IN1.49.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;IN1.49.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN1.49.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				in1[index].insuredIdNumber.push(block);
			}
		}
		if (in1[index].insuredIdNumber.length == 0) {
			delete in1[index].insuredIdNumber;
		}

		// clean up IN1 and increment index
		if (Object.keys(in1[index]).length == 0) {
			delete in1[index];
		} else {
			index++;
		}
	}
}

// Optional: save a copy of the completed IN1 segment for reference later
//channelMap.put(&quot;in1&quot;, in1); // uncomment to save

// If it has content, add the IN1 segment to the hl7JSON object
if (in1 &amp;&amp; Object.keys(in1).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.IN1 = in1;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>7</sequenceNumber>
          <name>--IN2 (Insurance Additional Info) Segment - REQUIRES IN1 MAPPING STEP ABOVE</name>
          <script>// Pull out the IN1 JSON to embed the IN2 segments in
var in1 = JSON.parse($(&apos;hl7JSON&apos;)).content.IN1;

// IN1
if (msg[&apos;IN1&apos;].length() &gt; 0) {

	// IN1 is a required to have a IN2, but if the IN1 was blank and was removed from the JSON, just create a new one to add the IN2 into
	if (!in1) {
		in1 = [{}];
	}
	
	var index = 0;
	for each (seg in msg.IN1) {

		// IN2 (IN1)
		var in2Group = getSegmentsAfter(msg,seg,&apos;IN2&apos;,true);
		if (in2Group.length &gt; 0 &amp;&amp; in1) {
			in1[index].IN2 = [];
			var indexIN2 = 0;
			for each (in2Seg in in2Group) {
				in1[index].IN2[indexIN2] = {};

				// IN2.1, insuredEmployeeId
				in1[index].IN2[indexIN2].insuredEmployeeId = [];
				for each (field in in2Seg[&apos;IN2.1&apos;]) {
					var block = {};
					if (field[&apos;IN2.1.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN2.1.1&apos;]; }
					if (field[&apos;IN2.1.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN2.1.2&apos;]; }
					if (field[&apos;IN2.1.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN2.1.3&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN2.1.4&apos;][&apos;IN2.1.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.1.4&apos;][&apos;IN2.1.4.1&apos;]; }
					if (field[&apos;IN2.1.4&apos;][&apos;IN2.1.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN2.1.4&apos;][&apos;IN2.1.4.2&apos;]; }
					if (field[&apos;IN2.1.4&apos;][&apos;IN2.1.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN2.1.4&apos;][&apos;IN2.1.4.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN2.1.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.1.4&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN2.1.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN2.1.5&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN2.1.6&apos;][&apos;IN2.1.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.1.6&apos;][&apos;IN2.1.6.1&apos;]; }
					if (field[&apos;IN2.1.6&apos;][&apos;IN2.1.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN2.1.6&apos;][&apos;IN2.1.6.2&apos;]; }
					if (field[&apos;IN2.1.6&apos;][&apos;IN2.1.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN2.1.6&apos;][&apos;IN2.1.6.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN2.1.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.1.6&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].insuredEmployeeId.push(block);
					}
				}
				if (Object.keys(in1[index].IN2[indexIN2].insuredEmployeeId).length == 0) {
					delete in1[index].IN2[indexIN2].insuredEmployeeId;
				}

				// IN2.2, insuredSSN
				if (in2Seg[&apos;IN2.2&apos;][&apos;IN2.2.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuredSSN = in2Seg[&apos;IN2.2&apos;][&apos;IN2.2.1&apos;]; }

				// IN2.3, insuredEmployerName
				in1[index].IN2[indexIN2].insuredEmployerName = [];
				for each (field in in2Seg[&apos;IN2.3&apos;]) {
					var block = {};
					if (field[&apos;IN2.3.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN2.3.1&apos;]; }
					if (field[&apos;IN2.3.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN2.3.2&apos;]; }
					if (field[&apos;IN2.3.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN2.3.3&apos;]; }
					if (field[&apos;IN2.3.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN2.3.4&apos;]; }
					if (field[&apos;IN2.3.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN2.3.5&apos;]; }
					if (field[&apos;IN2.3.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN2.3.6&apos;]; }
					if (field[&apos;IN2.3.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN2.3.7&apos;]; }
					if (field[&apos;IN2.3.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;IN2.3.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN2.3.9&apos;][&apos;IN2.3.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN2.3.9&apos;][&apos;IN2.3.9.1&apos;]; }
					if (field[&apos;IN2.3.9&apos;][&apos;IN2.3.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN2.3.9&apos;][&apos;IN2.3.9.2&apos;]; }
					if (field[&apos;IN2.3.9&apos;][&apos;IN2.3.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN2.3.9&apos;][&apos;IN2.3.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN2.3.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN2.3.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN2.3.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN2.3.10&apos;]; }
					if (field[&apos;IN2.3.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN2.3.11&apos;]; }
					if (field[&apos;IN2.3.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN2.3.12&apos;]; }
					if (field[&apos;IN2.3.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;IN2.3.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN2.3.14&apos;][&apos;IN2.3.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN2.3.14&apos;][&apos;IN2.3.14.1&apos;]; }
					if (field[&apos;IN2.3.14&apos;][&apos;IN2.3.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN2.3.14&apos;][&apos;IN2.3.14.2&apos;]; }
					if (field[&apos;IN2.3.14&apos;][&apos;IN2.3.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN2.3.14&apos;][&apos;IN2.3.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN2.3.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN2.3.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].insuredEmployerName.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].insuredEmployerName.length == 0) {
					delete in1[index].IN2[indexIN2].insuredEmployerName;
				}

				// IN2.4, employerInfoData
				if (in2Seg[&apos;IN2.4&apos;][&apos;IN2.4.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].employerInfoData = in2Seg[&apos;IN2.4&apos;][&apos;IN2.4.1&apos;]; }
				
				// IN2.5, mailClaimParty
				in1[index].IN2[indexIN2].mailClaimParty = [];
				for each (field in in2Seg[&apos;IN2.5&apos;]) {
					if (field[&apos;IN2.5.1&apos;].toString() != &quot;&quot;) {
						in1[index].IN2[indexIN2].mailClaimParty.push(field[&apos;IN2.5.1&apos;]);
					}
				}
				if (in1[index].IN2[indexIN2].mailClaimParty.length ==0) {
					delete in1[index].IN2[indexIN2].mailClaimParty
				}

				// IN2.6, medicareHealthInsCardNumber
				if (in2Seg[&apos;IN2.6&apos;][&apos;IN2.6.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].medicareHealthInsCardNumber = in2Seg[&apos;IN2.6&apos;][&apos;IN2.6.1&apos;]; }
				
				// IN2.7, medicaidCaseName
				in1[index].IN2[indexIN2].medicaidCaseName = [];
				for each (field in in2Seg[&apos;IN2.7&apos;]) {
					var block = {};
					if (field[&apos;IN2.7.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN2.7.1&apos;]; }
					if (field[&apos;IN2.7.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN2.7.2&apos;]; }
					if (field[&apos;IN2.7.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN2.7.3&apos;]; }
					if (field[&apos;IN2.7.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN2.7.4&apos;]; }
					if (field[&apos;IN2.7.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN2.7.5&apos;]; }
					if (field[&apos;IN2.7.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN2.7.6&apos;]; }
					if (field[&apos;IN2.7.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN2.7.7&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].medicaidCaseName.push(block);
					}	
				}
				if (in1[index].IN2[indexIN2].medicaidCaseName.length == 0) {
					delete in1[index].IN2[indexIN2].medicaidCaseName;
				}
				
				// IN2.8, medicaidCaseNumber
				if (in2Seg[&apos;IN2.8&apos;][&apos;IN2.8.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].medicaidCaseNumber = in2Seg[&apos;IN2.8&apos;][&apos;IN2.8.1&apos;]; }

				// IN2.9, champusSponsorName
				in1[index].IN2[indexIN2].champusSponsorName = [];
				for each (field in in2Seg[&apos;IN2.9&apos;]) {
					var block = {};
					if (field[&apos;IN2.9.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN2.9.1&apos;]; }
					if (field[&apos;IN2.9.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN2.9.2&apos;]; }
					if (field[&apos;IN2.9.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN2.9.3&apos;]; }
					if (field[&apos;IN2.9.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN2.9.4&apos;]; }
					if (field[&apos;IN2.9.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN2.9.5&apos;]; }
					if (field[&apos;IN2.9.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN2.9.6&apos;]; }
					if (field[&apos;IN2.9.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN2.9.7&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].champusSponsorName.push(block);
					}	
				}
				if (in1[index].IN2[indexIN2].champusSponsorName.length == 0) {
					delete in1[index].IN2[indexIN2].champusSponsorName;
				}
				
				// IN2.10, champusIdNumber
				if (in2Seg[&apos;IN2.10&apos;][&apos;IN2.10.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].champusIdNumber = in2Seg[&apos;IN2.10&apos;][&apos;IN2.10.1&apos;]; }
				
				// IN2.11, dependentOfChampusRecipient
				in1[index].IN2[indexIN2].dependentOfChampusRecipient = {};
				if (in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dependentOfChampusRecipient.id = in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.1&apos;]; }
				if (in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dependentOfChampusRecipient.text = in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.2&apos;]; }
				if (in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dependentOfChampusRecipient.codingSystem = in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.3&apos;]; }
				if (in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.4&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dependentOfChampusRecipient.altId = in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.4&apos;]; }
				if (in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.5&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dependentOfChampusRecipient.altText = in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.5&apos;]; }
				if (in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.6&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dependentOfChampusRecipient.altCodingSystem = in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.6&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].dependentOfChampusRecipient).length == 0) {
					delete in1[index].IN2[indexIN2].dependentOfChampusRecipient;
				}

				// IN2.12, champusOrganization
				if (in2Seg[&apos;IN2.12&apos;][&apos;IN2.12.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].champusOrganization = in2Seg[&apos;IN2.12&apos;][&apos;IN2.12.1&apos;]; }
				
				// IN2.13, champusStation
				if (in2Seg[&apos;IN2.13&apos;][&apos;IN2.13.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].champusStation = in2Seg[&apos;IN2.13&apos;][&apos;IN2.13.1&apos;]; }
				
				// IN2.14, champusService
				if (in2Seg[&apos;IN2.14&apos;][&apos;IN2.14.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].champusService = in2Seg[&apos;IN2.14&apos;][&apos;IN2.14.1&apos;]; }
				
				// IN2.15, champusRankGrade
				if (in2Seg[&apos;IN2.15&apos;][&apos;IN2.15.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].champusRankGrade = in2Seg[&apos;IN2.15&apos;][&apos;IN2.15.1&apos;]; }
				
				// IN2.16, champusStatus
				if (in2Seg[&apos;IN2.16&apos;][&apos;IN2.16.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].champusStatus = in2Seg[&apos;IN2.16&apos;][&apos;IN2.16.1&apos;]; }
				
				// IN2.17, champusRetireDate
				if (in2Seg[&apos;IN2.17&apos;][&apos;IN2.17.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].champusRetireDate = in2Seg[&apos;IN2.17&apos;][&apos;IN2.17.1&apos;]; }
				
				// IN2.18, champusNonAvailCertOnFile
				if (in2Seg[&apos;IN2.18&apos;][&apos;IN2.18.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].champusNonAvailCertOnFile = in2Seg[&apos;IN2.18&apos;][&apos;IN2.18.1&apos;]; }
				
				// IN2.19, babyCoverage
				if (in2Seg[&apos;IN2.19&apos;][&apos;IN2.19.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].babyCoverage = in2Seg[&apos;IN2.19&apos;][&apos;IN2.19.1&apos;]; }
				
				// IN2.20, combineBabyBill
				if (in2Seg[&apos;IN2.20&apos;][&apos;IN2.20.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].combineBabyBill = in2Seg[&apos;IN2.20&apos;][&apos;IN2.20.1&apos;]; }
				
				// IN2.21, bloodDeductible
				if (in2Seg[&apos;IN2.21&apos;][&apos;IN2.21.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].bloodDeductible = in2Seg[&apos;IN2.21&apos;][&apos;IN2.21.1&apos;]; }
				
				// IN2.22, specialCoverageApprovalName
				in1[index].IN2[indexIN2].specialCoverageApprovalName = [];
				for each (field in in2Seg[&apos;IN2.22&apos;]) {
					var block = {};
					if (field[&apos;IN2.22.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN2.22.1&apos;]; }
					if (field[&apos;IN2.22.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN2.22.2&apos;]; }
					if (field[&apos;IN2.22.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN2.22.3&apos;]; }
					if (field[&apos;IN2.22.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN2.22.4&apos;]; }
					if (field[&apos;IN2.22.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN2.22.5&apos;]; }
					if (field[&apos;IN2.22.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN2.22.6&apos;]; }
					if (field[&apos;IN2.22.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN2.22.7&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].specialCoverageApprovalName.push(block);
					}	
				}
				if (in1[index].IN2[indexIN2].specialCoverageApprovalName.length == 0) {
					delete in1[index].IN2[indexIN2].specialCoverageApprovalName;
				}
				
				// IN2.23, specialCoverageApprovalTitle
				if (in2Seg[&apos;IN2.23&apos;][&apos;IN2.23.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].specialCoverageApprovalTitle = in2Seg[&apos;IN2.23&apos;][&apos;IN2.23.1&apos;]; }
				
				// IN2.24, nonCoveredInsuranceCode
				in1[index].IN2[indexIN2].nonCoveredInsuranceCode = [];
				for each (field in in2Seg[&apos;IN2.24&apos;]) {
					if (field[&apos;IN2.24.1&apos;].toString() != &quot;&quot;) {
						in1[index].IN2[indexIN2].nonCoveredInsuranceCode.push(field[&apos;IN2.24.1&apos;]);
					}
				}
				if (in1[index].IN2[indexIN2].nonCoveredInsuranceCode.length ==0) {
					delete in1[index].IN2[indexIN2].nonCoveredInsuranceCode
				}

				// IN2.25, payorId
				in1[index].IN2[indexIN2].payorId = [];
				for each (field in in2Seg[&apos;IN2.25&apos;]) {
					var block = {};
					if (field[&apos;IN2.25.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN2.25.1&apos;]; }
					if (field[&apos;IN2.25.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN2.25.2&apos;]; }
					if (field[&apos;IN2.25.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN2.25.3&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN2.25.4&apos;][&apos;IN2.25.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.25.4&apos;][&apos;IN2.25.4.1&apos;]; }
					if (field[&apos;IN2.25.4&apos;][&apos;IN2.25.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN2.25.4&apos;][&apos;IN2.25.4.2&apos;]; }
					if (field[&apos;IN2.25.4&apos;][&apos;IN2.25.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN2.25.4&apos;][&apos;IN2.25.4.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN2.25.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.25.4&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN2.25.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN2.25.5&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN2.25.6&apos;][&apos;IN2.25.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.25.6&apos;][&apos;IN2.25.6.1&apos;]; }
					if (field[&apos;IN2.25.6&apos;][&apos;IN2.25.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN2.25.6&apos;][&apos;IN2.25.6.2&apos;]; }
					if (field[&apos;IN2.25.6&apos;][&apos;IN2.25.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN2.25.6&apos;][&apos;IN2.25.6.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN2.25.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.25.6&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].payorId.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].payorId.length == 0) {
					delete in1[index].IN2[indexIN2].payorId;
				}

				// IN2.26, payorSubscriberId
				in1[index].IN2[indexIN2].payorSubscriberId = [];
				for each (field in in2Seg[&apos;IN2.26&apos;]) {
					var block = {};
					if (field[&apos;IN2.26.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN2.26.1&apos;]; }
					if (field[&apos;IN2.26.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN2.26.2&apos;]; }
					if (field[&apos;IN2.26.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN2.26.3&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN2.26.4&apos;][&apos;IN2.26.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.26.4&apos;][&apos;IN2.26.4.1&apos;]; }
					if (field[&apos;IN2.26.4&apos;][&apos;IN2.26.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN2.26.4&apos;][&apos;IN2.26.4.2&apos;]; }
					if (field[&apos;IN2.26.4&apos;][&apos;IN2.26.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN2.26.4&apos;][&apos;IN2.26.4.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN2.26.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.26.4&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN2.26.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN2.26.5&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN2.26.6&apos;][&apos;IN2.26.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.26.6&apos;][&apos;IN2.26.6.1&apos;]; }
					if (field[&apos;IN2.26.6&apos;][&apos;IN2.26.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN2.26.6&apos;][&apos;IN2.26.6.2&apos;]; }
					if (field[&apos;IN2.26.6&apos;][&apos;IN2.26.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN2.26.6&apos;][&apos;IN2.26.6.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN2.26.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.26.6&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].payorSubscriberId.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].payorSubscriberId.length == 0) {
					delete in1[index].IN2[indexIN2].payorSubscriberId;
				}

				// IN2.27, eligibilitySource
				if (in2Seg[&apos;IN2.27&apos;][&apos;IN2.27.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].eligibilitySource = in2Seg[&apos;IN2.27&apos;][&apos;IN2.27.1&apos;]; }
				
				// IN2.28, roomCoverageTypeAmount
				in1[index].IN2[indexIN2].roomCoverageTypeAmount = [];
				for each (field in in2Seg[&apos;IN2.28&apos;]) {
					var block = {};
					if (field[&apos;IN2.28.1&apos;].toString() != &quot;&quot;) { block.roomType =  field[&apos;IN2.28.1&apos;]; }
					if (field[&apos;IN2.28.2&apos;].toString() != &quot;&quot;) { block.amountType =  field[&apos;IN2.28.2&apos;]; }
					if (field[&apos;IN2.28.3&apos;].toString() != &quot;&quot;) { block.coverageAmount =  field[&apos;IN2.28.3&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].roomCoverageTypeAmount.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].roomCoverageTypeAmount.length == 0) {	
					delete in1[index].IN2[indexIN2].roomCoverageTypeAmount;
				}

				// IN2.29, policyTypeAmount
				in1[index].IN2[indexIN2].policyTypeAmount = [];
				for each (field in in2Seg[&apos;IN2.29&apos;]) {
					var block = {};
					if (field[&apos;IN2.29.1&apos;].toString() != &quot;&quot;) { block.policyType =  field[&apos;IN2.29.1&apos;]; }
					if (field[&apos;IN2.29.2&apos;].toString() != &quot;&quot;) { block.amountClass =  field[&apos;IN2.29.2&apos;]; }
					if (field[&apos;IN2.29.3&apos;].toString() != &quot;&quot;) { block.amount =  field[&apos;IN2.29.3&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].policyTypeAmount.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].policyTypeAmount.length == 0) {
					delete in1[index].IN2[indexIN2].policyTypeAmount;
				}
				// IN2.30, dailyDeductible
				in1[index].IN2[indexIN2].dailyDeductible = {};
				if(in2Seg[&apos;IN2.30&apos;][&apos;IN2.30.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dailyDeductible.delayDays = in2Seg[&apos;IN2.30&apos;][&apos;IN2.30.1&apos;]; }
				if(in2Seg[&apos;IN2.30&apos;][&apos;IN2.30.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dailyDeductible.amount = in2Seg[&apos;IN2.30&apos;][&apos;IN2.30.2&apos;]; }
				if(in2Seg[&apos;IN2.30&apos;][&apos;IN2.30.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dailyDeductible.numberOfDays = in2Seg[&apos;IN2.30&apos;][&apos;IN2.30.3&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].dailyDeductible).length == 0) {
					delete in1[index].IN2[indexIN2].dailyDeductible;
				}

				// IN2.31, livingDependency
				if (in2Seg[&apos;IN2.31&apos;][&apos;IN2.31.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].livingDependency = in2Seg[&apos;IN2.31&apos;][&apos;IN2.31.1&apos;]; }
				
				// IN2.32, ambulatoryStatus
				if (in2Seg[&apos;IN2.32&apos;][&apos;IN2.32.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].ambulatoryStatus = in2Seg[&apos;IN2.32&apos;][&apos;IN2.32.1&apos;]; }
				
				// IN2.33, citizenship
				if (in2Seg[&apos;IN2.33&apos;][&apos;IN2.33.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].citizenship = in2Seg[&apos;IN2.33&apos;][&apos;IN2.33.1&apos;]; }
				
				// IN2.34, primaryLanguage
				in1[index].IN2[indexIN2].primaryLanguage = {};
				if (in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].primaryLanguage.id = in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.1&apos;]; }
				if (in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].primaryLanguage.text = in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.2&apos;]; }
				if (in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].primaryLanguage.codingSystem = in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.3&apos;]; }
				if (in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.4&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].primaryLanguage.altId = in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.4&apos;]; }
				if (in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.5&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].primaryLanguage.altText = in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.5&apos;]; }
				if (in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.6&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].primaryLanguage.altCodingSystem = in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.6&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].primaryLanguage).length == 0) {
					delete in1[index].IN2[indexIN2].primaryLanguage;
				}

				// IN2.35, livingArrangement
				if (in2Seg[&apos;IN2.35&apos;][&apos;IN2.35.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].livingArrangement = in2Seg[&apos;IN2.35&apos;][&apos;IN2.35.1&apos;]; }
				
				// IN2.36, publicityIndicator
				in1[index].IN2[indexIN2].publicityIndicator = {};
				if (in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].publicityIndicator.id = in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.1&apos;]; }
				if (in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].publicityIndicator.text = in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.2&apos;]; }
				if (in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].publicityIndicator.codingSystem = in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.3&apos;]; }
				if (in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.4&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].publicityIndicator.altId = in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.4&apos;]; }
				if (in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.5&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].publicityIndicator.altText = in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.5&apos;]; }
				if (in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.6&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].publicityIndicator.altCodingSystem = in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.6&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].publicityIndicator).length == 0) {
					delete in1[index].IN2[indexIN2].publicityIndicator;
				}

				// IN2.37, protectionIndicator
				if (in2Seg[&apos;IN2.37&apos;][&apos;IN2.37.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].protectionIndicator = in2Seg[&apos;IN2.37&apos;][&apos;IN2.37.1&apos;]; }
				
				// IN2.38, studentIndicator
				if (in2Seg[&apos;IN2.38&apos;][&apos;IN2.38.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].studentIndicator = in2Seg[&apos;IN2.38&apos;][&apos;IN2.38.1&apos;]; }
				
				// IN2.39, religion
				if (in2Seg[&apos;IN2.39&apos;][&apos;IN2.39.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].religion = in2Seg[&apos;IN2.39&apos;][&apos;IN2.39.1&apos;]; }
				
				// IN2.40, motherMaidenName
				in1[index].IN2[indexIN2].motherMaidenName = {};
				if (in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].motherMaidenName.lastName = in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.1&apos;]; }
				if (in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].motherMaidenName.firstName = in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.2&apos;]; }
				if (in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].motherMaidenName.middleInitOrName = in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.3&apos;]; }
				if (in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.4&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].motherMaidenName.suffix = in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.4&apos;]; }
				if (in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.5&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].motherMaidenName.prefix = in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.5&apos;]; }
				if (in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.6&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].motherMaidenName.degree = in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.6&apos;]; }
				if (in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.7&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].motherMaidenName.nameTypeCode = in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.7&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].motherMaidenName).length == 0) {
					delete in1[index].IN2[indexIN2].motherMaidenName;
				}
				
				// IN2.41, nationality
				in1[index].IN2[indexIN2].nationality = {};
				if (in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].nationality.id = in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.1&apos;]; }
				if (in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].nationality.text = in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.2&apos;]; }
				if (in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].nationality.codingSystem = in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.3&apos;]; }
				if (in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.4&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].nationality.altId = in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.4&apos;]; }
				if (in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.5&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].nationality.altText = in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.5&apos;]; }
				if (in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.6&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].nationality.altCodingSystem = in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.6&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].nationality).length == 0) {
					delete in1[index].IN2[indexIN2].nationality;
				}

				// IN2.42, ethnicGroup
				if (in2Seg[&apos;IN2.42&apos;][&apos;IN2.42.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].ethnicGroup = in2Seg[&apos;IN2.42&apos;][&apos;IN2.42.1&apos;]; }
				
				// IN2.43, maritalStatus
				in1[index].IN2[indexIN2].maritalStatus = [];
				for each (field in in2Seg[&apos;IN2.43&apos;]) {
					if (field[&apos;IN2.43.1&apos;].toString() != &quot;&quot;) {
						in1[index].IN2[indexIN2].maritalStatus.push(field[&apos;IN2.43.1&apos;]);
					}
				}
				if (in1[index].IN2[indexIN2].maritalStatus.length ==0) {
					delete in1[index].IN2[indexIN2].maritalStatus
				}

				// IN2.44, insuredEmploymentStartDate
				if (in2Seg[&apos;IN2.44&apos;][&apos;IN2.44.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuredEmploymentStartDate = in2Seg[&apos;IN2.44&apos;][&apos;IN2.44.1&apos;]; }
				
				// IN2.45, insuredEmploymentStopDate
				if (in2Seg[&apos;IN2.45&apos;][&apos;IN2.45.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuredEmploymentStopDate = in2Seg[&apos;IN2.45&apos;][&apos;IN2.45.1&apos;]; }
				
				// IN2.46, jobTitle
				if (in2Seg[&apos;IN2.46&apos;][&apos;IN2.46.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].jobTitle = in2Seg[&apos;IN2.46&apos;][&apos;IN2.46.1&apos;]; }
				
				// IN2.47, jobCodeClass
				in1[index].IN2[indexIN2].jobCodeClass = {};
				if (in2Seg[&apos;IN2.47&apos;][&apos;IN2.47.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].jobCodeClass.jobCode = in2Seg[&apos;IN2.47&apos;][&apos;IN2.47.1&apos;]; }
				if (in2Seg[&apos;IN2.47&apos;][&apos;IN2.47.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].jobCodeClass.jobClass = in2Seg[&apos;IN2.47&apos;][&apos;IN2.47.2&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].jobCodeClass).length == 0) {
					delete in1[index].IN2[indexIN2].jobCodeClass;
				}

				// IN2.48, jobStatus
				if (in2Seg[&apos;IN2.48&apos;][&apos;IN2.48.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].jobStatus = in2Seg[&apos;IN2.48&apos;][&apos;IN2.48.1&apos;]; }
				
				// IN2.49, employerContactPersonName
				in1[index].IN2[indexIN2].employerContactPersonName = [];
				for each (field in in2Seg[&apos;IN2.49&apos;]) {
					var block = {};
					if (field[&apos;IN2.49.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN2.49.1&apos;]; }
					if (field[&apos;IN2.49.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN2.49.2&apos;]; }
					if (field[&apos;IN2.49.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN2.49.3&apos;]; }
					if (field[&apos;IN2.49.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN2.49.4&apos;]; }
					if (field[&apos;IN2.49.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN2.49.5&apos;]; }
					if (field[&apos;IN2.49.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN2.49.6&apos;]; }
					if (field[&apos;IN2.49.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN2.49.7&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].employerContactPersonName.push(block);
					}	
				}
				if (in1[index].IN2[indexIN2].employerContactPersonName.length == 0) {
					delete in1[index].IN2[indexIN2].employerContactPersonName;
				}
				
				// IN2.50, employerContactPersonPhone
				in1[index].IN2[indexIN2].employerContactPersonPhone = [];
				for each (field in in2Seg[&apos;IN2.50&apos;]) {
					var block = {};
					if (field[&apos;IN2.50.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;IN2.50.1&apos;]; }
					if (field[&apos;IN2.50.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;IN2.50.2&apos;]; }
					if (field[&apos;IN2.50.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;IN2.50.3&apos;]; }
					if (field[&apos;IN2.50.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;IN2.50.4&apos;]; }
					if (field[&apos;IN2.50.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;IN2.50.5&apos;]; }
					if (field[&apos;IN2.50.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;IN2.50.6&apos;]; }
					if (field[&apos;IN2.50.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;IN2.50.7&apos;]; }
					if (field[&apos;IN2.50.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;IN2.50.8&apos;]; }
					if (field[&apos;IN2.50.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;IN2.50.9&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].employerContactPersonPhone.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].employerContactPersonPhone.length == 0) {
					delete in1[index].IN2[indexIN2].employerContactPersonPhone;
				}

				// IN2.51, employerContactReason
				if (in2Seg[&apos;IN2.51&apos;][&apos;IN2.51.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].employerContactReason = in2Seg[&apos;IN2.51&apos;][&apos;IN2.51.1&apos;]; }
				
				// IN2.52, insuredsContactPersonName
				in1[index].IN2[indexIN2].insuredsContactPersonName = [];
				for each (field in in2Seg[&apos;IN2.52&apos;]) {
					var block = {};
					if (field[&apos;IN2.52.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN2.52.1&apos;]; }
					if (field[&apos;IN2.52.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN2.52.2&apos;]; }
					if (field[&apos;IN2.52.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN2.52.3&apos;]; }
					if (field[&apos;IN2.52.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN2.52.4&apos;]; }
					if (field[&apos;IN2.52.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN2.52.5&apos;]; }
					if (field[&apos;IN2.52.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN2.52.6&apos;]; }
					if (field[&apos;IN2.52.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN2.52.7&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].insuredsContactPersonName.push(block);
					}	
				}
				if (in1[index].IN2[indexIN2].insuredsContactPersonName.length == 0) {
					delete in1[index].IN2[indexIN2].insuredsContactPersonName;
				}
				
				// IN2.53, insuredsContactPersonPhone
				in1[index].IN2[indexIN2].insuredsContactPersonPhone = [];
				for each (field in in2Seg[&apos;IN2.53&apos;]) {
					var block = {};
					if (field[&apos;IN2.53.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;IN2.53.1&apos;]; }
					if (field[&apos;IN2.53.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;IN2.53.2&apos;]; }
					if (field[&apos;IN2.53.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;IN2.53.3&apos;]; }
					if (field[&apos;IN2.53.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;IN2.53.4&apos;]; }
					if (field[&apos;IN2.53.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;IN2.53.5&apos;]; }
					if (field[&apos;IN2.53.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;IN2.53.6&apos;]; }
					if (field[&apos;IN2.53.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;IN2.53.7&apos;]; }
					if (field[&apos;IN2.53.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;IN2.53.8&apos;]; }
					if (field[&apos;IN2.53.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;IN2.53.9&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].insuredsContactPersonPhone.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].insuredsContactPersonPhone.length == 0) {
					delete in1[index].IN2[indexIN2].insuredsContactPersonPhone;
				}

				// IN2.54, insuredsContactReason
				in1[index].IN2[indexIN2].insuredsContactReason = [];
				for each (field in in2Seg[&apos;IN2.54&apos;]) {
					if (field[&apos;IN2.54.1&apos;].toString() != &quot;&quot;) {
						in1[index].IN2[indexIN2].insuredsContactReason.push(field[&apos;IN2.54.1&apos;]);
					}
				}
				if (in1[index].IN2[indexIN2].insuredsContactReason.length == 0) {
					delete in1[index].IN2[indexIN2].insuredsContactReason
				}

				// IN2.55, relationshipToPersonStartDate
				if (in2Seg[&apos;IN2.55&apos;][&apos;IN2.55.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].relationshipToPersonStartDate = in2Seg[&apos;IN2.55&apos;][&apos;IN2.55.1&apos;]; }
				
				// IN2.56, relationshipToPersonStopDate
				in1[index].IN2[indexIN2].relationshipToPersonStopDate = [];
				for each (field in in2Seg[&apos;IN2.56&apos;]) {
					if (field[&apos;IN2.56.1&apos;].toString() != &quot;&quot;) {
						in1[index].IN2[indexIN2].relationshipToPersonStopDate.push(field[&apos;IN2.56.1&apos;]);
					}
				}
				if (in1[index].IN2[indexIN2].relationshipToPersonStopDate.length == 0) {
					delete in1[index].IN2[indexIN2].relationshipToPersonStopDate
				}

				// IN2.57, insuranceCoContactReason
				if (in2Seg[&apos;IN2.57&apos;][&apos;IN2.57.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactReason = in2Seg[&apos;IN2.57&apos;][&apos;IN2.57.1&apos;]; }
				
				// IN2.58, insuranceCoContactPhone
				in1[index].IN2[indexIN2].insuranceCoContactPhone = {};
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.number = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.1&apos;]; }
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.telecommunicationUseCode = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.2&apos;]; }
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.telecommunicationEquipmentType = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.3&apos;]; }
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.4&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.emailAddress = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.4&apos;]; }
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.5&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.countryCode = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.5&apos;]; }
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.6&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.areaCityCode = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.6&apos;]; }
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.7&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.phoneNumber = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.7&apos;]; }
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.8&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.extension = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.8&apos;]; }
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.9&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.text = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.9&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].insuranceCoContactPhone).length == 0) {
					delete in1[index].IN2[indexIN2].insuranceCoContactPhone;
				}

				// IN2.59, policyScope
				if (in2Seg[&apos;IN2.59&apos;][&apos;IN2.59.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].policyScope = in2Seg[&apos;IN2.59&apos;][&apos;IN2.59.1&apos;]; }
				
				// IN2.60, policySource
				if (in2Seg[&apos;IN2.60&apos;][&apos;IN2.60.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].policySource = in2Seg[&apos;IN2.60&apos;][&apos;IN2.60.1&apos;]; }
				
				// IN2.61, patientMemberNumber
				in1[index].IN2[indexIN2].patientMemberNumber = [];
				for each (field in in2Seg[&apos;IN2.61&apos;]) {
					var block = {};
					if (field[&apos;IN2.61.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN2.61.1&apos;]; }
					if (field[&apos;IN2.61.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN2.61.2&apos;]; }
					if (field[&apos;IN2.61.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN2.61.3&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN2.61.4&apos;][&apos;IN2.61.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.61.4&apos;][&apos;IN2.61.4.1&apos;]; }
					if (field[&apos;IN2.61.4&apos;][&apos;IN2.61.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN2.61.4&apos;][&apos;IN2.61.4.2&apos;]; }
					if (field[&apos;IN2.61.4&apos;][&apos;IN2.61.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN2.61.4&apos;][&apos;IN2.61.4.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN2.61.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.61.4&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN2.61.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN2.61.5&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN2.61.6&apos;][&apos;IN2.61.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.61.6&apos;][&apos;IN2.61.6.1&apos;]; }
					if (field[&apos;IN2.61.6&apos;][&apos;IN2.61.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN2.61.6&apos;][&apos;IN2.61.6.2&apos;]; }
					if (field[&apos;IN2.61.6&apos;][&apos;IN2.61.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN2.61.6&apos;][&apos;IN2.61.6.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN2.61.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.61.6&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].patientMemberNumber.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].patientMemberNumber.length == 0) {
					delete in1[index].IN2[indexIN2].patientMemberNumber;
				}

				// IN2.62, guarantorRelationshipToInsured
				if (in2Seg[&apos;IN2.62&apos;][&apos;IN2.62.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].guarantorRelationshipToInsured = in2Seg[&apos;IN2.62&apos;][&apos;IN2.62.1&apos;]; }
				
				// IN2.63, insuredHomePhone
				in1[index].IN2[indexIN2].insuredHomePhone = [];
				for each (field in in2Seg[&apos;IN2.63&apos;]) {
					var block = {};
					if (field[&apos;IN2.63.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;IN2.63.1&apos;]; }
					if (field[&apos;IN2.63.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;IN2.63.2&apos;]; }
					if (field[&apos;IN2.63.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;IN2.63.3&apos;]; }
					if (field[&apos;IN2.63.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;IN2.63.4&apos;]; }
					if (field[&apos;IN2.63.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;IN2.63.5&apos;]; }
					if (field[&apos;IN2.63.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;IN2.63.6&apos;]; }
					if (field[&apos;IN2.63.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;IN2.63.7&apos;]; }
					if (field[&apos;IN2.63.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;IN2.63.8&apos;]; }
					if (field[&apos;IN2.63.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;IN2.63.9&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].insuredHomePhone.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].insuredHomePhone.length == 0) {
					delete in1[index].IN2[indexIN2].insuredHomePhone;
				}

				// IN2.64, insuredEmployerPhone
				in1[index].IN2[indexIN2].insuredEmployerPhone = [];
				for each (field in in2Seg[&apos;IN2.64&apos;]) {
					var block = {};
					if (field[&apos;IN2.64.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;IN2.64.1&apos;]; }
					if (field[&apos;IN2.64.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;IN2.64.2&apos;]; }
					if (field[&apos;IN2.64.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;IN2.64.3&apos;]; }
					if (field[&apos;IN2.64.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;IN2.64.4&apos;]; }
					if (field[&apos;IN2.64.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;IN2.64.5&apos;]; }
					if (field[&apos;IN2.64.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;IN2.64.6&apos;]; }
					if (field[&apos;IN2.64.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;IN2.64.7&apos;]; }
					if (field[&apos;IN2.64.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;IN2.64.8&apos;]; }
					if (field[&apos;IN2.64.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;IN2.64.9&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].insuredEmployerPhone.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].insuredEmployerPhone.length == 0) {
					delete in1[index].IN2[indexIN2].insuredEmployerPhone;
				}

				// IN2.65, militaryHandicappedProgram
				in1[index].IN2[indexIN2].militaryHandicappedProgram = {};
				if (in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].militaryHandicappedProgram.id = in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.1&apos;]; }
				if (in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].militaryHandicappedProgram.text = in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.2&apos;]; }
				if (in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].militaryHandicappedProgram.codingSystem = in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.3&apos;]; }
				if (in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.4&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].militaryHandicappedProgram.altId = in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.4&apos;]; }
				if (in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.5&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].militaryHandicappedProgram.altText = in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.5&apos;]; }
				if (in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.6&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].militaryHandicappedProgram.altCodingSystem = in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.6&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].militaryHandicappedProgram).length == 0) {
					delete in1[index].IN2[indexIN2].militaryHandicappedProgram;
				}

				// IN2.66, suspendFlag
				if (in2Seg[&apos;IN2.66&apos;][&apos;IN2.66.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].suspendFlag = in2Seg[&apos;IN2.66&apos;][&apos;IN2.66.1&apos;]; }
				
				// IN2.67, copayLimitFlag
				if (in2Seg[&apos;IN2.67&apos;][&apos;IN2.67.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].copayLimitFlag = in2Seg[&apos;IN2.67&apos;][&apos;IN2.67.1&apos;]; }
				
				// IN2.68, stoplossLimitFlag
				if (in2Seg[&apos;IN2.68&apos;][&apos;IN2.68.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].stoplossLimitFlag = in2Seg[&apos;IN2.68&apos;][&apos;IN2.68.1&apos;]; }
				
				// IN2.69, insuredOrganizationNameAndID
				in1[index].IN2[indexIN2].insuredOrganizationNameAndID = [];
				for each (field in in2Seg[&apos;IN2.69&apos;]) {
					var block = {};
					if (field[&apos;IN2.69.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;IN2.69.1&apos;]; }
					if (field[&apos;IN2.69.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;IN2.69.2&apos;]; }
					if (field[&apos;IN2.69.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;IN2.69.3&apos;]; }
					if (field[&apos;IN2.69.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN2.69.4&apos;]; }
					if (field[&apos;IN2.69.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN2.69.5&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN2.69.6&apos;][&apos;IN2.69.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.69.6&apos;][&apos;IN2.69.6.1&apos;]; }
					if (field[&apos;IN2.69.6&apos;][&apos;IN2.69.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN2.69.6&apos;][&apos;IN2.69.6.2&apos;]; }
					if (field[&apos;IN2.69.6&apos;][&apos;IN2.69.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN2.69.6&apos;][&apos;IN2.69.6.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN2.69.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.69.6&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN2.69.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN2.69.7&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN2.69.8&apos;][&apos;IN2.69.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.69.8&apos;][&apos;IN2.69.8.1&apos;]; }
					if (field[&apos;IN2.69.8&apos;][&apos;IN2.69.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN2.69.8&apos;][&apos;IN2.69.8.2&apos;]; }
					if (field[&apos;IN2.69.8&apos;][&apos;IN2.69.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN2.69.8&apos;][&apos;IN2.69.8.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN2.69.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.69.8&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].insuredOrganizationNameAndID.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].insuredOrganizationNameAndID.length == 0) {
					delete in1[index].IN2[indexIN2].insuredOrganizationNameAndID;
				}

				// IN2.70, insuredEmployerOrganizationNameAndID
				in1[index].IN2[indexIN2].insuredEmployerOrganizationNameAndID = [];
				for each (field in in2Seg[&apos;IN2.70&apos;]) {
					var block = {};
					if (field[&apos;IN2.70.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;IN2.70.1&apos;]; }
					if (field[&apos;IN2.70.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;IN2.70.2&apos;]; }
					if (field[&apos;IN2.70.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;IN2.70.3&apos;]; }
					if (field[&apos;IN2.70.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN2.70.4&apos;]; }
					if (field[&apos;IN2.70.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN2.70.5&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN2.70.6&apos;][&apos;IN2.70.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.70.6&apos;][&apos;IN2.70.6.1&apos;]; }
					if (field[&apos;IN2.70.6&apos;][&apos;IN2.70.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN2.70.6&apos;][&apos;IN2.70.6.2&apos;]; }
					if (field[&apos;IN2.70.6&apos;][&apos;IN2.70.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN2.70.6&apos;][&apos;IN2.70.6.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN2.70.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.70.6&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN2.70.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN2.70.7&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN2.70.8&apos;][&apos;IN2.70.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.70.8&apos;][&apos;IN2.70.8.1&apos;]; }
					if (field[&apos;IN2.70.8&apos;][&apos;IN2.70.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN2.70.8&apos;][&apos;IN2.70.8.2&apos;]; }
					if (field[&apos;IN2.70.8&apos;][&apos;IN2.70.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN2.70.8&apos;][&apos;IN2.70.8.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN2.70.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.70.8&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].insuredEmployerOrganizationNameAndID.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].insuredEmployerOrganizationNameAndID.length == 0) {
					delete in1[index].IN2[indexIN2].insuredEmployerOrganizationNameAndID;
				}
				
				// IN2.71, race
				if (in2Seg[&apos;IN2.71&apos;][&apos;IN2.71.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].race = in2Seg[&apos;IN2.71&apos;][&apos;IN2.71.1&apos;]; }
				
				// IN2.72, hcfaPatientRelationshipToInsured
				in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured = {};
				if (in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured.id = in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.1&apos;]; }
				if (in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured.text = in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.2&apos;]; }
				if (in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured.codingSystem = in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.3&apos;]; }
				if (in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.4&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured.altId = in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.4&apos;]; }
				if (in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.5&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured.altText = in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.5&apos;]; }
				if (in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.6&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured.altCodingSystem = in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.6&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured).length == 0) {
					delete in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured;
				}

				// clean up IN2 and increment index
				if (Object.keys(in1[index].IN2[indexIN2]).length == 0) {
					delete in1[index].IN2[indexIN2];
				} else {
					indexIN2++;
				}
			}

			// Clean up the IN2 object if it&apos;s empty
			if (in1[index].IN2[0] == null){
				delete in1[index].IN2;
			}
		}

		// Increment the IN1 index
		index++;
	}
}

// Optional: save a copy of the completed IN1 segment for reference later
//channelMap.put(&quot;in1&quot;, in1); // uncomment to save

// Re-add the IN1 segment to the hl7JSON object
if (in1 &amp;&amp; Object.keys(in1).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.IN1 = in1;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// Pull out the IN1 JSON to embed the IN2 segments in
var in1 = JSON.parse($(&apos;hl7JSON&apos;)).content.IN1;

// IN1
if (msg[&apos;IN1&apos;].length() &gt; 0) {

	// IN1 is a required to have a IN2, but if the IN1 was blank and was removed from the JSON, just create a new one to add the IN2 into
	if (!in1) {
		in1 = [{}];
	}
	
	var index = 0;
	for each (seg in msg.IN1) {

		// IN2 (IN1)
		var in2Group = getSegmentsAfter(msg,seg,&apos;IN2&apos;,true);
		if (in2Group.length &gt; 0 &amp;&amp; in1) {
			in1[index].IN2 = [];
			var indexIN2 = 0;
			for each (in2Seg in in2Group) {
				in1[index].IN2[indexIN2] = {};

				// IN2.1, insuredEmployeeId
				in1[index].IN2[indexIN2].insuredEmployeeId = [];
				for each (field in in2Seg[&apos;IN2.1&apos;]) {
					var block = {};
					if (field[&apos;IN2.1.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN2.1.1&apos;]; }
					if (field[&apos;IN2.1.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN2.1.2&apos;]; }
					if (field[&apos;IN2.1.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN2.1.3&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN2.1.4&apos;][&apos;IN2.1.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.1.4&apos;][&apos;IN2.1.4.1&apos;]; }
					if (field[&apos;IN2.1.4&apos;][&apos;IN2.1.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN2.1.4&apos;][&apos;IN2.1.4.2&apos;]; }
					if (field[&apos;IN2.1.4&apos;][&apos;IN2.1.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN2.1.4&apos;][&apos;IN2.1.4.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN2.1.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.1.4&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN2.1.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN2.1.5&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN2.1.6&apos;][&apos;IN2.1.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.1.6&apos;][&apos;IN2.1.6.1&apos;]; }
					if (field[&apos;IN2.1.6&apos;][&apos;IN2.1.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN2.1.6&apos;][&apos;IN2.1.6.2&apos;]; }
					if (field[&apos;IN2.1.6&apos;][&apos;IN2.1.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN2.1.6&apos;][&apos;IN2.1.6.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN2.1.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.1.6&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].insuredEmployeeId.push(block);
					}
				}
				if (Object.keys(in1[index].IN2[indexIN2].insuredEmployeeId).length == 0) {
					delete in1[index].IN2[indexIN2].insuredEmployeeId;
				}

				// IN2.2, insuredSSN
				if (in2Seg[&apos;IN2.2&apos;][&apos;IN2.2.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuredSSN = in2Seg[&apos;IN2.2&apos;][&apos;IN2.2.1&apos;]; }

				// IN2.3, insuredEmployerName
				in1[index].IN2[indexIN2].insuredEmployerName = [];
				for each (field in in2Seg[&apos;IN2.3&apos;]) {
					var block = {};
					if (field[&apos;IN2.3.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN2.3.1&apos;]; }
					if (field[&apos;IN2.3.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN2.3.2&apos;]; }
					if (field[&apos;IN2.3.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN2.3.3&apos;]; }
					if (field[&apos;IN2.3.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN2.3.4&apos;]; }
					if (field[&apos;IN2.3.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN2.3.5&apos;]; }
					if (field[&apos;IN2.3.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN2.3.6&apos;]; }
					if (field[&apos;IN2.3.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN2.3.7&apos;]; }
					if (field[&apos;IN2.3.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;IN2.3.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN2.3.9&apos;][&apos;IN2.3.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN2.3.9&apos;][&apos;IN2.3.9.1&apos;]; }
					if (field[&apos;IN2.3.9&apos;][&apos;IN2.3.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN2.3.9&apos;][&apos;IN2.3.9.2&apos;]; }
					if (field[&apos;IN2.3.9&apos;][&apos;IN2.3.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN2.3.9&apos;][&apos;IN2.3.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN2.3.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN2.3.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN2.3.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN2.3.10&apos;]; }
					if (field[&apos;IN2.3.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN2.3.11&apos;]; }
					if (field[&apos;IN2.3.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN2.3.12&apos;]; }
					if (field[&apos;IN2.3.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;IN2.3.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN2.3.14&apos;][&apos;IN2.3.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN2.3.14&apos;][&apos;IN2.3.14.1&apos;]; }
					if (field[&apos;IN2.3.14&apos;][&apos;IN2.3.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN2.3.14&apos;][&apos;IN2.3.14.2&apos;]; }
					if (field[&apos;IN2.3.14&apos;][&apos;IN2.3.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN2.3.14&apos;][&apos;IN2.3.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN2.3.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN2.3.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].insuredEmployerName.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].insuredEmployerName.length == 0) {
					delete in1[index].IN2[indexIN2].insuredEmployerName;
				}

				// IN2.4, employerInfoData
				if (in2Seg[&apos;IN2.4&apos;][&apos;IN2.4.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].employerInfoData = in2Seg[&apos;IN2.4&apos;][&apos;IN2.4.1&apos;]; }
				
				// IN2.5, mailClaimParty
				in1[index].IN2[indexIN2].mailClaimParty = [];
				for each (field in in2Seg[&apos;IN2.5&apos;]) {
					if (field[&apos;IN2.5.1&apos;].toString() != &quot;&quot;) {
						in1[index].IN2[indexIN2].mailClaimParty.push(field[&apos;IN2.5.1&apos;]);
					}
				}
				if (in1[index].IN2[indexIN2].mailClaimParty.length ==0) {
					delete in1[index].IN2[indexIN2].mailClaimParty
				}

				// IN2.6, medicareHealthInsCardNumber
				if (in2Seg[&apos;IN2.6&apos;][&apos;IN2.6.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].medicareHealthInsCardNumber = in2Seg[&apos;IN2.6&apos;][&apos;IN2.6.1&apos;]; }
				
				// IN2.7, medicaidCaseName
				in1[index].IN2[indexIN2].medicaidCaseName = [];
				for each (field in in2Seg[&apos;IN2.7&apos;]) {
					var block = {};
					if (field[&apos;IN2.7.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN2.7.1&apos;]; }
					if (field[&apos;IN2.7.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN2.7.2&apos;]; }
					if (field[&apos;IN2.7.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN2.7.3&apos;]; }
					if (field[&apos;IN2.7.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN2.7.4&apos;]; }
					if (field[&apos;IN2.7.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN2.7.5&apos;]; }
					if (field[&apos;IN2.7.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN2.7.6&apos;]; }
					if (field[&apos;IN2.7.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN2.7.7&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].medicaidCaseName.push(block);
					}	
				}
				if (in1[index].IN2[indexIN2].medicaidCaseName.length == 0) {
					delete in1[index].IN2[indexIN2].medicaidCaseName;
				}
				
				// IN2.8, medicaidCaseNumber
				if (in2Seg[&apos;IN2.8&apos;][&apos;IN2.8.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].medicaidCaseNumber = in2Seg[&apos;IN2.8&apos;][&apos;IN2.8.1&apos;]; }

				// IN2.9, champusSponsorName
				in1[index].IN2[indexIN2].champusSponsorName = [];
				for each (field in in2Seg[&apos;IN2.9&apos;]) {
					var block = {};
					if (field[&apos;IN2.9.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN2.9.1&apos;]; }
					if (field[&apos;IN2.9.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN2.9.2&apos;]; }
					if (field[&apos;IN2.9.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN2.9.3&apos;]; }
					if (field[&apos;IN2.9.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN2.9.4&apos;]; }
					if (field[&apos;IN2.9.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN2.9.5&apos;]; }
					if (field[&apos;IN2.9.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN2.9.6&apos;]; }
					if (field[&apos;IN2.9.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN2.9.7&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].champusSponsorName.push(block);
					}	
				}
				if (in1[index].IN2[indexIN2].champusSponsorName.length == 0) {
					delete in1[index].IN2[indexIN2].champusSponsorName;
				}
				
				// IN2.10, champusIdNumber
				if (in2Seg[&apos;IN2.10&apos;][&apos;IN2.10.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].champusIdNumber = in2Seg[&apos;IN2.10&apos;][&apos;IN2.10.1&apos;]; }
				
				// IN2.11, dependentOfChampusRecipient
				in1[index].IN2[indexIN2].dependentOfChampusRecipient = {};
				if (in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dependentOfChampusRecipient.id = in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.1&apos;]; }
				if (in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dependentOfChampusRecipient.text = in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.2&apos;]; }
				if (in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dependentOfChampusRecipient.codingSystem = in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.3&apos;]; }
				if (in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.4&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dependentOfChampusRecipient.altId = in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.4&apos;]; }
				if (in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.5&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dependentOfChampusRecipient.altText = in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.5&apos;]; }
				if (in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.6&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dependentOfChampusRecipient.altCodingSystem = in2Seg[&apos;IN2.11&apos;][&apos;IN2.11.6&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].dependentOfChampusRecipient).length == 0) {
					delete in1[index].IN2[indexIN2].dependentOfChampusRecipient;
				}

				// IN2.12, champusOrganization
				if (in2Seg[&apos;IN2.12&apos;][&apos;IN2.12.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].champusOrganization = in2Seg[&apos;IN2.12&apos;][&apos;IN2.12.1&apos;]; }
				
				// IN2.13, champusStation
				if (in2Seg[&apos;IN2.13&apos;][&apos;IN2.13.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].champusStation = in2Seg[&apos;IN2.13&apos;][&apos;IN2.13.1&apos;]; }
				
				// IN2.14, champusService
				if (in2Seg[&apos;IN2.14&apos;][&apos;IN2.14.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].champusService = in2Seg[&apos;IN2.14&apos;][&apos;IN2.14.1&apos;]; }
				
				// IN2.15, champusRankGrade
				if (in2Seg[&apos;IN2.15&apos;][&apos;IN2.15.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].champusRankGrade = in2Seg[&apos;IN2.15&apos;][&apos;IN2.15.1&apos;]; }
				
				// IN2.16, champusStatus
				if (in2Seg[&apos;IN2.16&apos;][&apos;IN2.16.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].champusStatus = in2Seg[&apos;IN2.16&apos;][&apos;IN2.16.1&apos;]; }
				
				// IN2.17, champusRetireDate
				if (in2Seg[&apos;IN2.17&apos;][&apos;IN2.17.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].champusRetireDate = in2Seg[&apos;IN2.17&apos;][&apos;IN2.17.1&apos;]; }
				
				// IN2.18, champusNonAvailCertOnFile
				if (in2Seg[&apos;IN2.18&apos;][&apos;IN2.18.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].champusNonAvailCertOnFile = in2Seg[&apos;IN2.18&apos;][&apos;IN2.18.1&apos;]; }
				
				// IN2.19, babyCoverage
				if (in2Seg[&apos;IN2.19&apos;][&apos;IN2.19.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].babyCoverage = in2Seg[&apos;IN2.19&apos;][&apos;IN2.19.1&apos;]; }
				
				// IN2.20, combineBabyBill
				if (in2Seg[&apos;IN2.20&apos;][&apos;IN2.20.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].combineBabyBill = in2Seg[&apos;IN2.20&apos;][&apos;IN2.20.1&apos;]; }
				
				// IN2.21, bloodDeductible
				if (in2Seg[&apos;IN2.21&apos;][&apos;IN2.21.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].bloodDeductible = in2Seg[&apos;IN2.21&apos;][&apos;IN2.21.1&apos;]; }
				
				// IN2.22, specialCoverageApprovalName
				in1[index].IN2[indexIN2].specialCoverageApprovalName = [];
				for each (field in in2Seg[&apos;IN2.22&apos;]) {
					var block = {};
					if (field[&apos;IN2.22.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN2.22.1&apos;]; }
					if (field[&apos;IN2.22.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN2.22.2&apos;]; }
					if (field[&apos;IN2.22.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN2.22.3&apos;]; }
					if (field[&apos;IN2.22.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN2.22.4&apos;]; }
					if (field[&apos;IN2.22.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN2.22.5&apos;]; }
					if (field[&apos;IN2.22.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN2.22.6&apos;]; }
					if (field[&apos;IN2.22.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN2.22.7&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].specialCoverageApprovalName.push(block);
					}	
				}
				if (in1[index].IN2[indexIN2].specialCoverageApprovalName.length == 0) {
					delete in1[index].IN2[indexIN2].specialCoverageApprovalName;
				}
				
				// IN2.23, specialCoverageApprovalTitle
				if (in2Seg[&apos;IN2.23&apos;][&apos;IN2.23.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].specialCoverageApprovalTitle = in2Seg[&apos;IN2.23&apos;][&apos;IN2.23.1&apos;]; }
				
				// IN2.24, nonCoveredInsuranceCode
				in1[index].IN2[indexIN2].nonCoveredInsuranceCode = [];
				for each (field in in2Seg[&apos;IN2.24&apos;]) {
					if (field[&apos;IN2.24.1&apos;].toString() != &quot;&quot;) {
						in1[index].IN2[indexIN2].nonCoveredInsuranceCode.push(field[&apos;IN2.24.1&apos;]);
					}
				}
				if (in1[index].IN2[indexIN2].nonCoveredInsuranceCode.length ==0) {
					delete in1[index].IN2[indexIN2].nonCoveredInsuranceCode
				}

				// IN2.25, payorId
				in1[index].IN2[indexIN2].payorId = [];
				for each (field in in2Seg[&apos;IN2.25&apos;]) {
					var block = {};
					if (field[&apos;IN2.25.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN2.25.1&apos;]; }
					if (field[&apos;IN2.25.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN2.25.2&apos;]; }
					if (field[&apos;IN2.25.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN2.25.3&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN2.25.4&apos;][&apos;IN2.25.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.25.4&apos;][&apos;IN2.25.4.1&apos;]; }
					if (field[&apos;IN2.25.4&apos;][&apos;IN2.25.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN2.25.4&apos;][&apos;IN2.25.4.2&apos;]; }
					if (field[&apos;IN2.25.4&apos;][&apos;IN2.25.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN2.25.4&apos;][&apos;IN2.25.4.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN2.25.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.25.4&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN2.25.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN2.25.5&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN2.25.6&apos;][&apos;IN2.25.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.25.6&apos;][&apos;IN2.25.6.1&apos;]; }
					if (field[&apos;IN2.25.6&apos;][&apos;IN2.25.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN2.25.6&apos;][&apos;IN2.25.6.2&apos;]; }
					if (field[&apos;IN2.25.6&apos;][&apos;IN2.25.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN2.25.6&apos;][&apos;IN2.25.6.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN2.25.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.25.6&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].payorId.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].payorId.length == 0) {
					delete in1[index].IN2[indexIN2].payorId;
				}

				// IN2.26, payorSubscriberId
				in1[index].IN2[indexIN2].payorSubscriberId = [];
				for each (field in in2Seg[&apos;IN2.26&apos;]) {
					var block = {};
					if (field[&apos;IN2.26.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN2.26.1&apos;]; }
					if (field[&apos;IN2.26.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN2.26.2&apos;]; }
					if (field[&apos;IN2.26.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN2.26.3&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN2.26.4&apos;][&apos;IN2.26.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.26.4&apos;][&apos;IN2.26.4.1&apos;]; }
					if (field[&apos;IN2.26.4&apos;][&apos;IN2.26.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN2.26.4&apos;][&apos;IN2.26.4.2&apos;]; }
					if (field[&apos;IN2.26.4&apos;][&apos;IN2.26.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN2.26.4&apos;][&apos;IN2.26.4.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN2.26.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.26.4&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN2.26.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN2.26.5&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN2.26.6&apos;][&apos;IN2.26.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.26.6&apos;][&apos;IN2.26.6.1&apos;]; }
					if (field[&apos;IN2.26.6&apos;][&apos;IN2.26.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN2.26.6&apos;][&apos;IN2.26.6.2&apos;]; }
					if (field[&apos;IN2.26.6&apos;][&apos;IN2.26.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN2.26.6&apos;][&apos;IN2.26.6.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN2.26.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.26.6&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].payorSubscriberId.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].payorSubscriberId.length == 0) {
					delete in1[index].IN2[indexIN2].payorSubscriberId;
				}

				// IN2.27, eligibilitySource
				if (in2Seg[&apos;IN2.27&apos;][&apos;IN2.27.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].eligibilitySource = in2Seg[&apos;IN2.27&apos;][&apos;IN2.27.1&apos;]; }
				
				// IN2.28, roomCoverageTypeAmount
				in1[index].IN2[indexIN2].roomCoverageTypeAmount = [];
				for each (field in in2Seg[&apos;IN2.28&apos;]) {
					var block = {};
					if (field[&apos;IN2.28.1&apos;].toString() != &quot;&quot;) { block.roomType =  field[&apos;IN2.28.1&apos;]; }
					if (field[&apos;IN2.28.2&apos;].toString() != &quot;&quot;) { block.amountType =  field[&apos;IN2.28.2&apos;]; }
					if (field[&apos;IN2.28.3&apos;].toString() != &quot;&quot;) { block.coverageAmount =  field[&apos;IN2.28.3&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].roomCoverageTypeAmount.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].roomCoverageTypeAmount.length == 0) {	
					delete in1[index].IN2[indexIN2].roomCoverageTypeAmount;
				}

				// IN2.29, policyTypeAmount
				in1[index].IN2[indexIN2].policyTypeAmount = [];
				for each (field in in2Seg[&apos;IN2.29&apos;]) {
					var block = {};
					if (field[&apos;IN2.29.1&apos;].toString() != &quot;&quot;) { block.policyType =  field[&apos;IN2.29.1&apos;]; }
					if (field[&apos;IN2.29.2&apos;].toString() != &quot;&quot;) { block.amountClass =  field[&apos;IN2.29.2&apos;]; }
					if (field[&apos;IN2.29.3&apos;].toString() != &quot;&quot;) { block.amount =  field[&apos;IN2.29.3&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].policyTypeAmount.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].policyTypeAmount.length == 0) {
					delete in1[index].IN2[indexIN2].policyTypeAmount;
				}
				// IN2.30, dailyDeductible
				in1[index].IN2[indexIN2].dailyDeductible = {};
				if(in2Seg[&apos;IN2.30&apos;][&apos;IN2.30.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dailyDeductible.delayDays = in2Seg[&apos;IN2.30&apos;][&apos;IN2.30.1&apos;]; }
				if(in2Seg[&apos;IN2.30&apos;][&apos;IN2.30.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dailyDeductible.amount = in2Seg[&apos;IN2.30&apos;][&apos;IN2.30.2&apos;]; }
				if(in2Seg[&apos;IN2.30&apos;][&apos;IN2.30.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].dailyDeductible.numberOfDays = in2Seg[&apos;IN2.30&apos;][&apos;IN2.30.3&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].dailyDeductible).length == 0) {
					delete in1[index].IN2[indexIN2].dailyDeductible;
				}

				// IN2.31, livingDependency
				if (in2Seg[&apos;IN2.31&apos;][&apos;IN2.31.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].livingDependency = in2Seg[&apos;IN2.31&apos;][&apos;IN2.31.1&apos;]; }
				
				// IN2.32, ambulatoryStatus
				if (in2Seg[&apos;IN2.32&apos;][&apos;IN2.32.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].ambulatoryStatus = in2Seg[&apos;IN2.32&apos;][&apos;IN2.32.1&apos;]; }
				
				// IN2.33, citizenship
				if (in2Seg[&apos;IN2.33&apos;][&apos;IN2.33.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].citizenship = in2Seg[&apos;IN2.33&apos;][&apos;IN2.33.1&apos;]; }
				
				// IN2.34, primaryLanguage
				in1[index].IN2[indexIN2].primaryLanguage = {};
				if (in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].primaryLanguage.id = in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.1&apos;]; }
				if (in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].primaryLanguage.text = in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.2&apos;]; }
				if (in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].primaryLanguage.codingSystem = in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.3&apos;]; }
				if (in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.4&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].primaryLanguage.altId = in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.4&apos;]; }
				if (in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.5&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].primaryLanguage.altText = in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.5&apos;]; }
				if (in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.6&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].primaryLanguage.altCodingSystem = in2Seg[&apos;IN2.34&apos;][&apos;IN2.34.6&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].primaryLanguage).length == 0) {
					delete in1[index].IN2[indexIN2].primaryLanguage;
				}

				// IN2.35, livingArrangement
				if (in2Seg[&apos;IN2.35&apos;][&apos;IN2.35.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].livingArrangement = in2Seg[&apos;IN2.35&apos;][&apos;IN2.35.1&apos;]; }
				
				// IN2.36, publicityIndicator
				in1[index].IN2[indexIN2].publicityIndicator = {};
				if (in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].publicityIndicator.id = in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.1&apos;]; }
				if (in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].publicityIndicator.text = in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.2&apos;]; }
				if (in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].publicityIndicator.codingSystem = in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.3&apos;]; }
				if (in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.4&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].publicityIndicator.altId = in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.4&apos;]; }
				if (in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.5&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].publicityIndicator.altText = in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.5&apos;]; }
				if (in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.6&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].publicityIndicator.altCodingSystem = in2Seg[&apos;IN2.36&apos;][&apos;IN2.36.6&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].publicityIndicator).length == 0) {
					delete in1[index].IN2[indexIN2].publicityIndicator;
				}

				// IN2.37, protectionIndicator
				if (in2Seg[&apos;IN2.37&apos;][&apos;IN2.37.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].protectionIndicator = in2Seg[&apos;IN2.37&apos;][&apos;IN2.37.1&apos;]; }
				
				// IN2.38, studentIndicator
				if (in2Seg[&apos;IN2.38&apos;][&apos;IN2.38.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].studentIndicator = in2Seg[&apos;IN2.38&apos;][&apos;IN2.38.1&apos;]; }
				
				// IN2.39, religion
				if (in2Seg[&apos;IN2.39&apos;][&apos;IN2.39.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].religion = in2Seg[&apos;IN2.39&apos;][&apos;IN2.39.1&apos;]; }
				
				// IN2.40, motherMaidenName
				in1[index].IN2[indexIN2].motherMaidenName = {};
				if (in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].motherMaidenName.lastName = in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.1&apos;]; }
				if (in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].motherMaidenName.firstName = in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.2&apos;]; }
				if (in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].motherMaidenName.middleInitOrName = in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.3&apos;]; }
				if (in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.4&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].motherMaidenName.suffix = in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.4&apos;]; }
				if (in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.5&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].motherMaidenName.prefix = in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.5&apos;]; }
				if (in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.6&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].motherMaidenName.degree = in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.6&apos;]; }
				if (in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.7&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].motherMaidenName.nameTypeCode = in2Seg[&apos;IN2.40&apos;][&apos;IN2.40.7&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].motherMaidenName).length == 0) {
					delete in1[index].IN2[indexIN2].motherMaidenName;
				}
				
				// IN2.41, nationality
				in1[index].IN2[indexIN2].nationality = {};
				if (in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].nationality.id = in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.1&apos;]; }
				if (in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].nationality.text = in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.2&apos;]; }
				if (in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].nationality.codingSystem = in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.3&apos;]; }
				if (in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.4&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].nationality.altId = in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.4&apos;]; }
				if (in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.5&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].nationality.altText = in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.5&apos;]; }
				if (in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.6&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].nationality.altCodingSystem = in2Seg[&apos;IN2.41&apos;][&apos;IN2.41.6&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].nationality).length == 0) {
					delete in1[index].IN2[indexIN2].nationality;
				}

				// IN2.42, ethnicGroup
				if (in2Seg[&apos;IN2.42&apos;][&apos;IN2.42.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].ethnicGroup = in2Seg[&apos;IN2.42&apos;][&apos;IN2.42.1&apos;]; }
				
				// IN2.43, maritalStatus
				in1[index].IN2[indexIN2].maritalStatus = [];
				for each (field in in2Seg[&apos;IN2.43&apos;]) {
					if (field[&apos;IN2.43.1&apos;].toString() != &quot;&quot;) {
						in1[index].IN2[indexIN2].maritalStatus.push(field[&apos;IN2.43.1&apos;]);
					}
				}
				if (in1[index].IN2[indexIN2].maritalStatus.length ==0) {
					delete in1[index].IN2[indexIN2].maritalStatus
				}

				// IN2.44, insuredEmploymentStartDate
				if (in2Seg[&apos;IN2.44&apos;][&apos;IN2.44.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuredEmploymentStartDate = in2Seg[&apos;IN2.44&apos;][&apos;IN2.44.1&apos;]; }
				
				// IN2.45, insuredEmploymentStopDate
				if (in2Seg[&apos;IN2.45&apos;][&apos;IN2.45.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuredEmploymentStopDate = in2Seg[&apos;IN2.45&apos;][&apos;IN2.45.1&apos;]; }
				
				// IN2.46, jobTitle
				if (in2Seg[&apos;IN2.46&apos;][&apos;IN2.46.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].jobTitle = in2Seg[&apos;IN2.46&apos;][&apos;IN2.46.1&apos;]; }
				
				// IN2.47, jobCodeClass
				in1[index].IN2[indexIN2].jobCodeClass = {};
				if (in2Seg[&apos;IN2.47&apos;][&apos;IN2.47.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].jobCodeClass.jobCode = in2Seg[&apos;IN2.47&apos;][&apos;IN2.47.1&apos;]; }
				if (in2Seg[&apos;IN2.47&apos;][&apos;IN2.47.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].jobCodeClass.jobClass = in2Seg[&apos;IN2.47&apos;][&apos;IN2.47.2&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].jobCodeClass).length == 0) {
					delete in1[index].IN2[indexIN2].jobCodeClass;
				}

				// IN2.48, jobStatus
				if (in2Seg[&apos;IN2.48&apos;][&apos;IN2.48.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].jobStatus = in2Seg[&apos;IN2.48&apos;][&apos;IN2.48.1&apos;]; }
				
				// IN2.49, employerContactPersonName
				in1[index].IN2[indexIN2].employerContactPersonName = [];
				for each (field in in2Seg[&apos;IN2.49&apos;]) {
					var block = {};
					if (field[&apos;IN2.49.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN2.49.1&apos;]; }
					if (field[&apos;IN2.49.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN2.49.2&apos;]; }
					if (field[&apos;IN2.49.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN2.49.3&apos;]; }
					if (field[&apos;IN2.49.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN2.49.4&apos;]; }
					if (field[&apos;IN2.49.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN2.49.5&apos;]; }
					if (field[&apos;IN2.49.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN2.49.6&apos;]; }
					if (field[&apos;IN2.49.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN2.49.7&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].employerContactPersonName.push(block);
					}	
				}
				if (in1[index].IN2[indexIN2].employerContactPersonName.length == 0) {
					delete in1[index].IN2[indexIN2].employerContactPersonName;
				}
				
				// IN2.50, employerContactPersonPhone
				in1[index].IN2[indexIN2].employerContactPersonPhone = [];
				for each (field in in2Seg[&apos;IN2.50&apos;]) {
					var block = {};
					if (field[&apos;IN2.50.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;IN2.50.1&apos;]; }
					if (field[&apos;IN2.50.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;IN2.50.2&apos;]; }
					if (field[&apos;IN2.50.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;IN2.50.3&apos;]; }
					if (field[&apos;IN2.50.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;IN2.50.4&apos;]; }
					if (field[&apos;IN2.50.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;IN2.50.5&apos;]; }
					if (field[&apos;IN2.50.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;IN2.50.6&apos;]; }
					if (field[&apos;IN2.50.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;IN2.50.7&apos;]; }
					if (field[&apos;IN2.50.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;IN2.50.8&apos;]; }
					if (field[&apos;IN2.50.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;IN2.50.9&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].employerContactPersonPhone.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].employerContactPersonPhone.length == 0) {
					delete in1[index].IN2[indexIN2].employerContactPersonPhone;
				}

				// IN2.51, employerContactReason
				if (in2Seg[&apos;IN2.51&apos;][&apos;IN2.51.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].employerContactReason = in2Seg[&apos;IN2.51&apos;][&apos;IN2.51.1&apos;]; }
				
				// IN2.52, insuredsContactPersonName
				in1[index].IN2[indexIN2].insuredsContactPersonName = [];
				for each (field in in2Seg[&apos;IN2.52&apos;]) {
					var block = {};
					if (field[&apos;IN2.52.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN2.52.1&apos;]; }
					if (field[&apos;IN2.52.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN2.52.2&apos;]; }
					if (field[&apos;IN2.52.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN2.52.3&apos;]; }
					if (field[&apos;IN2.52.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN2.52.4&apos;]; }
					if (field[&apos;IN2.52.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN2.52.5&apos;]; }
					if (field[&apos;IN2.52.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN2.52.6&apos;]; }
					if (field[&apos;IN2.52.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN2.52.7&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].insuredsContactPersonName.push(block);
					}	
				}
				if (in1[index].IN2[indexIN2].insuredsContactPersonName.length == 0) {
					delete in1[index].IN2[indexIN2].insuredsContactPersonName;
				}
				
				// IN2.53, insuredsContactPersonPhone
				in1[index].IN2[indexIN2].insuredsContactPersonPhone = [];
				for each (field in in2Seg[&apos;IN2.53&apos;]) {
					var block = {};
					if (field[&apos;IN2.53.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;IN2.53.1&apos;]; }
					if (field[&apos;IN2.53.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;IN2.53.2&apos;]; }
					if (field[&apos;IN2.53.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;IN2.53.3&apos;]; }
					if (field[&apos;IN2.53.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;IN2.53.4&apos;]; }
					if (field[&apos;IN2.53.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;IN2.53.5&apos;]; }
					if (field[&apos;IN2.53.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;IN2.53.6&apos;]; }
					if (field[&apos;IN2.53.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;IN2.53.7&apos;]; }
					if (field[&apos;IN2.53.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;IN2.53.8&apos;]; }
					if (field[&apos;IN2.53.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;IN2.53.9&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].insuredsContactPersonPhone.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].insuredsContactPersonPhone.length == 0) {
					delete in1[index].IN2[indexIN2].insuredsContactPersonPhone;
				}

				// IN2.54, insuredsContactReason
				in1[index].IN2[indexIN2].insuredsContactReason = [];
				for each (field in in2Seg[&apos;IN2.54&apos;]) {
					if (field[&apos;IN2.54.1&apos;].toString() != &quot;&quot;) {
						in1[index].IN2[indexIN2].insuredsContactReason.push(field[&apos;IN2.54.1&apos;]);
					}
				}
				if (in1[index].IN2[indexIN2].insuredsContactReason.length == 0) {
					delete in1[index].IN2[indexIN2].insuredsContactReason
				}

				// IN2.55, relationshipToPersonStartDate
				if (in2Seg[&apos;IN2.55&apos;][&apos;IN2.55.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].relationshipToPersonStartDate = in2Seg[&apos;IN2.55&apos;][&apos;IN2.55.1&apos;]; }
				
				// IN2.56, relationshipToPersonStopDate
				in1[index].IN2[indexIN2].relationshipToPersonStopDate = [];
				for each (field in in2Seg[&apos;IN2.56&apos;]) {
					if (field[&apos;IN2.56.1&apos;].toString() != &quot;&quot;) {
						in1[index].IN2[indexIN2].relationshipToPersonStopDate.push(field[&apos;IN2.56.1&apos;]);
					}
				}
				if (in1[index].IN2[indexIN2].relationshipToPersonStopDate.length == 0) {
					delete in1[index].IN2[indexIN2].relationshipToPersonStopDate
				}

				// IN2.57, insuranceCoContactReason
				if (in2Seg[&apos;IN2.57&apos;][&apos;IN2.57.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactReason = in2Seg[&apos;IN2.57&apos;][&apos;IN2.57.1&apos;]; }
				
				// IN2.58, insuranceCoContactPhone
				in1[index].IN2[indexIN2].insuranceCoContactPhone = {};
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.number = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.1&apos;]; }
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.telecommunicationUseCode = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.2&apos;]; }
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.telecommunicationEquipmentType = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.3&apos;]; }
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.4&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.emailAddress = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.4&apos;]; }
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.5&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.countryCode = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.5&apos;]; }
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.6&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.areaCityCode = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.6&apos;]; }
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.7&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.phoneNumber = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.7&apos;]; }
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.8&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.extension = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.8&apos;]; }
				if (in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.9&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].insuranceCoContactPhone.text = in2Seg[&apos;IN2.58&apos;][&apos;IN2.58.9&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].insuranceCoContactPhone).length == 0) {
					delete in1[index].IN2[indexIN2].insuranceCoContactPhone;
				}

				// IN2.59, policyScope
				if (in2Seg[&apos;IN2.59&apos;][&apos;IN2.59.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].policyScope = in2Seg[&apos;IN2.59&apos;][&apos;IN2.59.1&apos;]; }
				
				// IN2.60, policySource
				if (in2Seg[&apos;IN2.60&apos;][&apos;IN2.60.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].policySource = in2Seg[&apos;IN2.60&apos;][&apos;IN2.60.1&apos;]; }
				
				// IN2.61, patientMemberNumber
				in1[index].IN2[indexIN2].patientMemberNumber = [];
				for each (field in in2Seg[&apos;IN2.61&apos;]) {
					var block = {};
					if (field[&apos;IN2.61.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN2.61.1&apos;]; }
					if (field[&apos;IN2.61.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN2.61.2&apos;]; }
					if (field[&apos;IN2.61.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN2.61.3&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN2.61.4&apos;][&apos;IN2.61.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.61.4&apos;][&apos;IN2.61.4.1&apos;]; }
					if (field[&apos;IN2.61.4&apos;][&apos;IN2.61.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN2.61.4&apos;][&apos;IN2.61.4.2&apos;]; }
					if (field[&apos;IN2.61.4&apos;][&apos;IN2.61.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN2.61.4&apos;][&apos;IN2.61.4.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN2.61.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.61.4&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN2.61.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN2.61.5&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN2.61.6&apos;][&apos;IN2.61.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.61.6&apos;][&apos;IN2.61.6.1&apos;]; }
					if (field[&apos;IN2.61.6&apos;][&apos;IN2.61.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN2.61.6&apos;][&apos;IN2.61.6.2&apos;]; }
					if (field[&apos;IN2.61.6&apos;][&apos;IN2.61.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN2.61.6&apos;][&apos;IN2.61.6.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN2.61.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.61.6&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].patientMemberNumber.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].patientMemberNumber.length == 0) {
					delete in1[index].IN2[indexIN2].patientMemberNumber;
				}

				// IN2.62, guarantorRelationshipToInsured
				if (in2Seg[&apos;IN2.62&apos;][&apos;IN2.62.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].guarantorRelationshipToInsured = in2Seg[&apos;IN2.62&apos;][&apos;IN2.62.1&apos;]; }
				
				// IN2.63, insuredHomePhone
				in1[index].IN2[indexIN2].insuredHomePhone = [];
				for each (field in in2Seg[&apos;IN2.63&apos;]) {
					var block = {};
					if (field[&apos;IN2.63.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;IN2.63.1&apos;]; }
					if (field[&apos;IN2.63.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;IN2.63.2&apos;]; }
					if (field[&apos;IN2.63.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;IN2.63.3&apos;]; }
					if (field[&apos;IN2.63.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;IN2.63.4&apos;]; }
					if (field[&apos;IN2.63.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;IN2.63.5&apos;]; }
					if (field[&apos;IN2.63.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;IN2.63.6&apos;]; }
					if (field[&apos;IN2.63.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;IN2.63.7&apos;]; }
					if (field[&apos;IN2.63.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;IN2.63.8&apos;]; }
					if (field[&apos;IN2.63.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;IN2.63.9&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].insuredHomePhone.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].insuredHomePhone.length == 0) {
					delete in1[index].IN2[indexIN2].insuredHomePhone;
				}

				// IN2.64, insuredEmployerPhone
				in1[index].IN2[indexIN2].insuredEmployerPhone = [];
				for each (field in in2Seg[&apos;IN2.64&apos;]) {
					var block = {};
					if (field[&apos;IN2.64.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;IN2.64.1&apos;]; }
					if (field[&apos;IN2.64.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;IN2.64.2&apos;]; }
					if (field[&apos;IN2.64.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;IN2.64.3&apos;]; }
					if (field[&apos;IN2.64.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;IN2.64.4&apos;]; }
					if (field[&apos;IN2.64.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;IN2.64.5&apos;]; }
					if (field[&apos;IN2.64.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;IN2.64.6&apos;]; }
					if (field[&apos;IN2.64.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;IN2.64.7&apos;]; }
					if (field[&apos;IN2.64.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;IN2.64.8&apos;]; }
					if (field[&apos;IN2.64.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;IN2.64.9&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].insuredEmployerPhone.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].insuredEmployerPhone.length == 0) {
					delete in1[index].IN2[indexIN2].insuredEmployerPhone;
				}

				// IN2.65, militaryHandicappedProgram
				in1[index].IN2[indexIN2].militaryHandicappedProgram = {};
				if (in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].militaryHandicappedProgram.id = in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.1&apos;]; }
				if (in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].militaryHandicappedProgram.text = in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.2&apos;]; }
				if (in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].militaryHandicappedProgram.codingSystem = in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.3&apos;]; }
				if (in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.4&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].militaryHandicappedProgram.altId = in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.4&apos;]; }
				if (in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.5&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].militaryHandicappedProgram.altText = in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.5&apos;]; }
				if (in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.6&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].militaryHandicappedProgram.altCodingSystem = in2Seg[&apos;IN2.65&apos;][&apos;IN2.65.6&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].militaryHandicappedProgram).length == 0) {
					delete in1[index].IN2[indexIN2].militaryHandicappedProgram;
				}

				// IN2.66, suspendFlag
				if (in2Seg[&apos;IN2.66&apos;][&apos;IN2.66.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].suspendFlag = in2Seg[&apos;IN2.66&apos;][&apos;IN2.66.1&apos;]; }
				
				// IN2.67, copayLimitFlag
				if (in2Seg[&apos;IN2.67&apos;][&apos;IN2.67.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].copayLimitFlag = in2Seg[&apos;IN2.67&apos;][&apos;IN2.67.1&apos;]; }
				
				// IN2.68, stoplossLimitFlag
				if (in2Seg[&apos;IN2.68&apos;][&apos;IN2.68.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].stoplossLimitFlag = in2Seg[&apos;IN2.68&apos;][&apos;IN2.68.1&apos;]; }
				
				// IN2.69, insuredOrganizationNameAndID
				in1[index].IN2[indexIN2].insuredOrganizationNameAndID = [];
				for each (field in in2Seg[&apos;IN2.69&apos;]) {
					var block = {};
					if (field[&apos;IN2.69.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;IN2.69.1&apos;]; }
					if (field[&apos;IN2.69.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;IN2.69.2&apos;]; }
					if (field[&apos;IN2.69.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;IN2.69.3&apos;]; }
					if (field[&apos;IN2.69.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN2.69.4&apos;]; }
					if (field[&apos;IN2.69.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN2.69.5&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN2.69.6&apos;][&apos;IN2.69.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.69.6&apos;][&apos;IN2.69.6.1&apos;]; }
					if (field[&apos;IN2.69.6&apos;][&apos;IN2.69.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN2.69.6&apos;][&apos;IN2.69.6.2&apos;]; }
					if (field[&apos;IN2.69.6&apos;][&apos;IN2.69.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN2.69.6&apos;][&apos;IN2.69.6.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN2.69.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.69.6&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN2.69.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN2.69.7&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN2.69.8&apos;][&apos;IN2.69.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.69.8&apos;][&apos;IN2.69.8.1&apos;]; }
					if (field[&apos;IN2.69.8&apos;][&apos;IN2.69.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN2.69.8&apos;][&apos;IN2.69.8.2&apos;]; }
					if (field[&apos;IN2.69.8&apos;][&apos;IN2.69.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN2.69.8&apos;][&apos;IN2.69.8.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN2.69.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.69.8&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].insuredOrganizationNameAndID.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].insuredOrganizationNameAndID.length == 0) {
					delete in1[index].IN2[indexIN2].insuredOrganizationNameAndID;
				}

				// IN2.70, insuredEmployerOrganizationNameAndID
				in1[index].IN2[indexIN2].insuredEmployerOrganizationNameAndID = [];
				for each (field in in2Seg[&apos;IN2.70&apos;]) {
					var block = {};
					if (field[&apos;IN2.70.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;IN2.70.1&apos;]; }
					if (field[&apos;IN2.70.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;IN2.70.2&apos;]; }
					if (field[&apos;IN2.70.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;IN2.70.3&apos;]; }
					if (field[&apos;IN2.70.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN2.70.4&apos;]; }
					if (field[&apos;IN2.70.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN2.70.5&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN2.70.6&apos;][&apos;IN2.70.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.70.6&apos;][&apos;IN2.70.6.1&apos;]; }
					if (field[&apos;IN2.70.6&apos;][&apos;IN2.70.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN2.70.6&apos;][&apos;IN2.70.6.2&apos;]; }
					if (field[&apos;IN2.70.6&apos;][&apos;IN2.70.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN2.70.6&apos;][&apos;IN2.70.6.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN2.70.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;IN2.70.6&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN2.70.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;IN2.70.7&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN2.70.8&apos;][&apos;IN2.70.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.70.8&apos;][&apos;IN2.70.8.1&apos;]; }
					if (field[&apos;IN2.70.8&apos;][&apos;IN2.70.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN2.70.8&apos;][&apos;IN2.70.8.2&apos;]; }
					if (field[&apos;IN2.70.8&apos;][&apos;IN2.70.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN2.70.8&apos;][&apos;IN2.70.8.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN2.70.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;IN2.70.8&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN2[indexIN2].insuredEmployerOrganizationNameAndID.push(block);
					}
				}
				if (in1[index].IN2[indexIN2].insuredEmployerOrganizationNameAndID.length == 0) {
					delete in1[index].IN2[indexIN2].insuredEmployerOrganizationNameAndID;
				}
				
				// IN2.71, race
				if (in2Seg[&apos;IN2.71&apos;][&apos;IN2.71.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].race = in2Seg[&apos;IN2.71&apos;][&apos;IN2.71.1&apos;]; }
				
				// IN2.72, hcfaPatientRelationshipToInsured
				in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured = {};
				if (in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.1&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured.id = in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.1&apos;]; }
				if (in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.2&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured.text = in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.2&apos;]; }
				if (in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.3&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured.codingSystem = in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.3&apos;]; }
				if (in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.4&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured.altId = in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.4&apos;]; }
				if (in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.5&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured.altText = in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.5&apos;]; }
				if (in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.6&apos;].toString() != &quot;&quot;) { in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured.altCodingSystem = in2Seg[&apos;IN2.72&apos;][&apos;IN2.72.6&apos;]; }
				if (Object.keys(in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured).length == 0) {
					delete in1[index].IN2[indexIN2].hcfaPatientRelationshipToInsured;
				}

				// clean up IN2 and increment index
				if (Object.keys(in1[index].IN2[indexIN2]).length == 0) {
					delete in1[index].IN2[indexIN2];
				} else {
					indexIN2++;
				}
			}

			// Clean up the IN2 object if it&apos;s empty
			if (in1[index].IN2[0] == null){
				delete in1[index].IN2;
			}
		}

		// Increment the IN1 index
		index++;
	}
}

// Optional: save a copy of the completed IN1 segment for reference later
//channelMap.put(&quot;in1&quot;, in1); // uncomment to save

// Re-add the IN1 segment to the hl7JSON object
if (in1 &amp;&amp; Object.keys(in1).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.IN1 = in1;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>8</sequenceNumber>
          <name>--IN3 (Insurance Additional Info, Certification) Segment - REQUIRES IN1 MAPPING STEP ABOVE</name>
          <script>// Pull out the IN1 JSON to embed the IN3 segments in
var in1 = JSON.parse($(&apos;hl7JSON&apos;)).content.IN1;

// IN1
if (msg[&apos;IN1&apos;].length() &gt; 0) {

	// IN1 is a required to have a IN3, but if the IN1 was blank and was removed from the JSON, just create a new one to add the IN3 into
	if (!in1) {
		in1 = [{}];
	}
		
	var index = 0;
	for each (seg in msg.IN1) {

		// IN3 (IN1)
		var in3Group = getSegmentsAfter(msg,seg,&apos;IN3&apos;,true);
		if (in3Group.length &gt; 0 &amp;&amp; in1) {
			in1[index].IN3 = [];
			var indexIN3 = 0;
			for each (in3Seg in in3Group) {
				in1[index].IN3[indexIN3] = {};

				// IN3.1, setID
				if (in3Seg[&apos;IN3.1&apos;][&apos;IN3.1.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].setID = in3Seg[&apos;IN3.1&apos;][&apos;IN3.1.1&apos;]; }

				// IN3.2, certificationNumber
				in1[index].IN3[indexIN3].certificationNumber = {};
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.id = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.1&apos;]; }
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.2&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.identifierCheckDigit = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.2&apos;]; }
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.3&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.codeIdentifyingCheckDigitScheme = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.3&apos;]; }
				in1[index].IN3[indexIN3].certificationNumber.assigningAuthority = {};
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.4&apos;][&apos;IN3.2.4.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.assigningAuthority.namespaceId = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.4&apos;][&apos;IN3.2.4.1&apos;]; }
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.4&apos;][&apos;IN3.2.4.2&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.assigningAuthority.universalId = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.4&apos;][&apos;IN3.2.4.2&apos;]; }
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.4&apos;][&apos;IN3.2.4.3&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.assigningAuthority.universalIdType = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.4&apos;][&apos;IN3.2.4.3&apos;]; }
				if (Object.keys(in1[index].IN3[indexIN3].certificationNumber.assigningAuthority).length == 0) {
					if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.4&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.assigningAuthority.namespaceId = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.4&apos;]; }
					else delete in1[index].IN3[indexIN3].certificationNumber.assigningAuthority;
				}
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.5&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.idTypeCode = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.5&apos;]; }
				in1[index].IN3[indexIN3].certificationNumber.assigningFacility = {};
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.6&apos;][&apos;IN3.2.6.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.assigningFacility.namespaceId = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.6&apos;][&apos;IN3.2.6.1&apos;]; }
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.6&apos;][&apos;IN3.2.6.2&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.assigningFacility.universalId = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.6&apos;][&apos;IN3.2.6.2&apos;]; }
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.6&apos;][&apos;IN3.2.6.3&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.assigningFacility.universalIdType = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.6&apos;][&apos;IN3.2.6.3&apos;]; }
				if (Object.keys(in1[index].IN3[indexIN3].certificationNumber.assigningFacility).length == 0) {
					if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.6&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.assigningFacility.namespaceId = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.6&apos;]; }
					else delete in1[index].IN3[indexIN3].certificationNumber.assigningFacility;
				}
				if (Object.keys(in1[index].IN3[indexIN3].certificationNumber).length == 0) {
					delete in1[index].IN3[indexIN3].certificationNumber;
				}

				// IN3.3, certifiedBy
				in1[index].IN3[indexIN3].certifiedBy = [];
				for each (field in in3Seg[&apos;IN3.3&apos;]) {
					var block = {};
					if (field[&apos;IN3.3.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN3.3.1&apos;]; }
					if (field[&apos;IN3.3.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN3.3.2&apos;]; }
					if (field[&apos;IN3.3.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN3.3.3&apos;]; }
					if (field[&apos;IN3.3.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN3.3.4&apos;]; }
					if (field[&apos;IN3.3.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN3.3.5&apos;]; }
					if (field[&apos;IN3.3.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN3.3.6&apos;]; }
					if (field[&apos;IN3.3.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN3.3.7&apos;]; }
					if (field[&apos;IN3.3.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;IN3.3.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN3.3.9&apos;][&apos;IN3.3.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN3.3.9&apos;][&apos;IN3.3.9.1&apos;]; }
					if (field[&apos;IN3.3.9&apos;][&apos;IN3.3.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN3.3.9&apos;][&apos;IN3.3.9.2&apos;]; }
					if (field[&apos;IN3.3.9&apos;][&apos;IN3.3.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN3.3.9&apos;][&apos;IN3.3.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN3.3.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN3.3.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN3.3.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN3.3.10&apos;]; }
					if (field[&apos;IN3.3.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN3.3.11&apos;]; }
					if (field[&apos;IN3.3.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN3.3.12&apos;]; }
					if (field[&apos;IN3.3.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;IN3.3.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN3.3.14&apos;][&apos;IN3.3.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN3.3.14&apos;][&apos;IN3.3.14.1&apos;]; }
					if (field[&apos;IN3.3.14&apos;][&apos;IN3.3.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN3.3.14&apos;][&apos;IN3.3.14.2&apos;]; }
					if (field[&apos;IN3.3.14&apos;][&apos;IN3.3.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN3.3.14&apos;][&apos;IN3.3.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN3.3.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN3.3.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN3[indexIN3].certifiedBy.push(block);
					}
				}
				if (in1[index].IN3[indexIN3].certifiedBy.length == 0) {
					delete in1[index].IN3[indexIN3].certifiedBy;
				}

				// IN3.4, certificationRequired
				if (in3Seg[&apos;IN3.4&apos;][&apos;IN3.4.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationRequired = in3Seg[&apos;IN3.4&apos;][&apos;IN3.4.1&apos;]; }

				// IN3.5, penalty
				in1[index].IN3[indexIN3].penalty = {};
				if (in3Seg[&apos;IN3.5&apos;][&apos;IN3.5.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].penalty.penaltyType = in3Seg[&apos;IN3.5&apos;][&apos;IN3.5.1&apos;]; }
				if (in3Seg[&apos;IN3.5&apos;][&apos;IN3.5.2&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].penalty.penaltyCode = in3Seg[&apos;IN3.5&apos;][&apos;IN3.5.2&apos;]; }
				if (Object.keys(in1[index].IN3[indexIN3].penalty).length &gt; 0) {
					delete in1[index].IN3[indexIN3].penalty;
				}

				// IN3.6, certificationDateTime
				if (in3Seg[&apos;IN3.6&apos;][&apos;IN3.6.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationDateTime = in3Seg[&apos;IN3.6&apos;][&apos;IN3.6.1&apos;]; }

				// IN3.7, certificationModifyDateTime
				if (in3Seg[&apos;IN3.7&apos;][&apos;IN3.7.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationModifyDateTime = in3Seg[&apos;IN3.7&apos;][&apos;IN3.7.1&apos;]; }

				// IN3.8, operator
				in1[index].IN3[indexIN3].operator = [];
				for each (field in in3Seg[&apos;IN3.8&apos;]) {
					var block = {};
					if (field[&apos;IN3.8.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN3.8.1&apos;]; }
					if (field[&apos;IN3.8.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN3.8.2&apos;]; }
					if (field[&apos;IN3.8.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN3.8.3&apos;]; }
					if (field[&apos;IN3.8.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN3.8.4&apos;]; }
					if (field[&apos;IN3.8.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN3.8.5&apos;]; }
					if (field[&apos;IN3.8.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN3.8.6&apos;]; }
					if (field[&apos;IN3.8.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN3.8.7&apos;]; }
					if (field[&apos;IN3.8.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;IN3.8.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN3.8.9&apos;][&apos;IN3.8.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN3.8.9&apos;][&apos;IN3.8.9.1&apos;]; }
					if (field[&apos;IN3.8.9&apos;][&apos;IN3.8.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN3.8.9&apos;][&apos;IN3.8.9.2&apos;]; }
					if (field[&apos;IN3.8.9&apos;][&apos;IN3.8.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN3.8.9&apos;][&apos;IN3.8.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN3.8.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN3.8.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN3.8.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN3.8.10&apos;]; }
					if (field[&apos;IN3.8.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN3.8.11&apos;]; }
					if (field[&apos;IN3.8.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN3.8.12&apos;]; }
					if (field[&apos;IN3.8.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;IN3.8.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN3.8.14&apos;][&apos;IN3.8.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN3.8.14&apos;][&apos;IN3.8.14.1&apos;]; }
					if (field[&apos;IN3.8.14&apos;][&apos;IN3.8.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN3.8.14&apos;][&apos;IN3.8.14.2&apos;]; }
					if (field[&apos;IN3.8.14&apos;][&apos;IN3.8.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN3.8.14&apos;][&apos;IN3.8.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN3.8.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN3.8.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN3[indexIN3].operator.push(block);
					}
				}
				if (in1[index].IN3[indexIN3].operator.length == 0) {
					delete in1[index].IN3[indexIN3].operator;
				}

				// IN3.9, certificationBeginDate
				if (in3Seg[&apos;IN3.9&apos;][&apos;IN3.9.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationBeginDate = in3Seg[&apos;IN3.9&apos;][&apos;IN3.9.1&apos;]; }

				// IN3.90, certificationEndDate
				if (in3Seg[&apos;IN3.10&apos;][&apos;IN3.10.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationEndDate = in3Seg[&apos;IN3.10&apos;][&apos;IN3.10.1&apos;]; }

				// IN3.11, days
				in1[index].IN3[indexIN3].days = {};
				if (in3Seg[&apos;IN3.11&apos;][&apos;IN3.11.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].days.dayType = in3Seg[&apos;IN3.11&apos;][&apos;IN3.11.1&apos;]; }
				if (in3Seg[&apos;IN3.11&apos;][&apos;IN3.11.2&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].days.numberOfDays = in3Seg[&apos;IN3.11&apos;][&apos;IN3.11.2&apos;]; }
				if (Object.keys(in1[index].IN3[indexIN3].days).length &gt; 0) {
					delete in1[index].IN3[indexIN3].days;
				}

				// IN3.12, nonConcurCodeDescription
				in1[index].IN3[indexIN3].nonConcurCodeDescription = {};
				if (in3Seg[&apos;IN3.12&apos;][&apos;IN3.12.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].nonConcurCodeDescription.id = in3Seg[&apos;IN3.12&apos;][&apos;IN3.12.1&apos;]; }
				if (in3Seg[&apos;IN3.12&apos;][&apos;IN3.12.2&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].nonConcurCodeDescription.namespaceId = in3Seg[&apos;IN3.12&apos;][&apos;IN3.12.2&apos;]; }
				if (in3Seg[&apos;IN3.12&apos;][&apos;IN3.12.3&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].nonConcurCodeDescription.universalId = in3Seg[&apos;IN3.12&apos;][&apos;IN3.12.3&apos;]; }
				if (in3Seg[&apos;IN3.12&apos;][&apos;IN3.12.4&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].nonConcurCodeDescription.unniveralIdType = in3Seg[&apos;IN3.12&apos;][&apos;IN3.12.4&apos;]; }
				if (Object.keys(in1[index].IN3[indexIN3].nonConcurCodeDescription).length == 0) {
					delete in1[index].IN3[indexIN3].nonConcurCodeDescription;
				}

				// IN3.13, nonConcurEffectiveDateTime
				if (in3Seg[&apos;IN3.13&apos;][&apos;IN3.13.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].nonConcurEffectiveDateTime = in3Seg[&apos;IN3.13&apos;][&apos;IN3.13.1&apos;]; }

				// IN3.14, physicianReviewer
				in1[index].IN3[indexIN3].physicianReviewer = [];
				for each (field in in3Seg[&apos;IN3.14&apos;]) {
					var block = {};
					if (field[&apos;IN3.14.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN3.14.1&apos;]; }
					if (field[&apos;IN3.14.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN3.14.2&apos;]; }
					if (field[&apos;IN3.14.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN3.14.3&apos;]; }
					if (field[&apos;IN3.14.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN3.14.4&apos;]; }
					if (field[&apos;IN3.14.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN3.14.5&apos;]; }
					if (field[&apos;IN3.14.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN3.14.6&apos;]; }
					if (field[&apos;IN3.14.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN3.14.7&apos;]; }
					if (field[&apos;IN3.14.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;IN3.14.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN3.14.9&apos;][&apos;IN3.14.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN3.14.9&apos;][&apos;IN3.14.9.1&apos;]; }
					if (field[&apos;IN3.14.9&apos;][&apos;IN3.14.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN3.14.9&apos;][&apos;IN3.14.9.2&apos;]; }
					if (field[&apos;IN3.14.9&apos;][&apos;IN3.14.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN3.14.9&apos;][&apos;IN3.14.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN3.14.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN3.14.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN3.14.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN3.14.10&apos;]; }
					if (field[&apos;IN3.14.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN3.14.11&apos;]; }
					if (field[&apos;IN3.14.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN3.14.12&apos;]; }
					if (field[&apos;IN3.14.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;IN3.14.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN3.14.14&apos;][&apos;IN3.14.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN3.14.14&apos;][&apos;IN3.14.14.1&apos;]; }
					if (field[&apos;IN3.14.14&apos;][&apos;IN3.14.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN3.14.14&apos;][&apos;IN3.14.14.2&apos;]; }
					if (field[&apos;IN3.14.14&apos;][&apos;IN3.14.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN3.14.14&apos;][&apos;IN3.14.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN3.14.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN3.14.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN3[indexIN3].physicianReviewer.push(block);
					}
				}
				if (in1[index].IN3[indexIN3].physicianReviewer.length == 0) {
					delete in1[index].IN3[indexIN3].physicianReviewer;
				}
				// IN3.15, certificationContact
				if (in3Seg[&apos;IN3.15&apos;][&apos;IN3.15.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationContact = in3Seg[&apos;IN3.15&apos;][&apos;IN3.15.1&apos;]; }

				// IN3.16, certificationContactPhoneNumber
				in1[index].IN3[indexIN3].certificationContactPhoneNumber = [];
				for each (field in in3Seg[&apos;IN3.16&apos;]) {
					var block = {};
					if (field[&apos;IN3.16.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;IN3.16.1&apos;]; }
					if (field[&apos;IN3.16.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;IN3.16.2&apos;]; }
					if (field[&apos;IN3.16.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;IN3.16.3&apos;]; }
					if (field[&apos;IN3.16.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;IN3.16.4&apos;]; }
					if (field[&apos;IN3.16.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;IN3.16.5&apos;]; }
					if (field[&apos;IN3.16.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;IN3.16.6&apos;]; }
					if (field[&apos;IN3.16.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;IN3.16.7&apos;]; }
					if (field[&apos;IN3.16.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;IN3.16.8&apos;]; }
					if (field[&apos;IN3.16.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;IN3.16.9&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN3[indexIN3].certificationContactPhoneNumber.push(block);
					}
				}
				if (in1[index].IN3[indexIN3].certificationContactPhoneNumber.length == 0) {
					delete in1[index].IN3[indexIN3].certificationContactPhoneNumber;
				}

				// IN3.17, appealReason
				in1[index].IN3[indexIN3].appealReason = {};
				if (in3Seg[&apos;IN3.17&apos;][&apos;IN3.17.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].appealReason.id = in3Seg[&apos;IN3.17&apos;][&apos;IN3.17.1&apos;]; }
				if (in3Seg[&apos;IN3.17&apos;][&apos;IN3.17.2&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].appealReason.namespaceId = in3Seg[&apos;IN3.17&apos;][&apos;IN3.17.2&apos;]; }
				if (in3Seg[&apos;IN3.17&apos;][&apos;IN3.17.3&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].appealReason.universalId = in3Seg[&apos;IN3.17&apos;][&apos;IN3.17.3&apos;]; }
				if (in3Seg[&apos;IN3.17&apos;][&apos;IN3.17.4&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].appealReason.unniveralIdType = in3Seg[&apos;IN3.17&apos;][&apos;IN3.17.4&apos;]; }
				if (Object.keys(in1[index].IN3[indexIN3].appealReason).length == 0) {
					delete in1[index].IN3[indexIN3].appealReason;
				}

				// IN3.18, certificationAgency
				in1[index].IN3[indexIN3].certificationAgency = {};
				if (in3Seg[&apos;IN3.18&apos;][&apos;IN3.18.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationAgency.id = in3Seg[&apos;IN3.18&apos;][&apos;IN3.18.1&apos;]; }
				if (in3Seg[&apos;IN3.18&apos;][&apos;IN3.18.2&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationAgency.namespaceId = in3Seg[&apos;IN3.18&apos;][&apos;IN3.18.2&apos;]; }
				if (in3Seg[&apos;IN3.18&apos;][&apos;IN3.18.3&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationAgency.universalId = in3Seg[&apos;IN3.18&apos;][&apos;IN3.18.3&apos;]; }
				if (in3Seg[&apos;IN3.18&apos;][&apos;IN3.18.4&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationAgency.unniveralIdType = in3Seg[&apos;IN3.18&apos;][&apos;IN3.18.4&apos;]; }
				if (Object.keys(in1[index].IN3[indexIN3].certificationAgency).length == 0) {
					delete in1[index].IN3[indexIN3].certificationAgency;
				}

				// IN3.19, certificationAgencyPhoneNumber
				in1[index].IN3[indexIN3].certificationAgencyPhoneNumber = [];
				for each (field in in3Seg[&apos;IN3.19&apos;]) {
					var block = {};
					if (field[&apos;IN3.19.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;IN3.19.1&apos;]; }
					if (field[&apos;IN3.19.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;IN3.19.2&apos;]; }
					if (field[&apos;IN3.19.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;IN3.19.3&apos;]; }
					if (field[&apos;IN3.19.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;IN3.19.4&apos;]; }
					if (field[&apos;IN3.19.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;IN3.19.5&apos;]; }
					if (field[&apos;IN3.19.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;IN3.19.6&apos;]; }
					if (field[&apos;IN3.19.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;IN3.19.7&apos;]; }
					if (field[&apos;IN3.19.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;IN3.19.8&apos;]; }
					if (field[&apos;IN3.19.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;IN3.19.9&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN3[indexIN3].certificationAgencyPhoneNumber.push(block);
					}
				}
				if (in1[index].IN3[indexIN3].certificationAgencyPhoneNumber.length == 0) {
					delete in1[index].IN3[indexIN3].certificationAgencyPhoneNumber;
				}

				// IN3.20, preCertificationReqWindow
				in1[index].IN3[indexIN3].preCertificationReqWindow = [];
				for each (field in in3Seg[&apos;IN3.20&apos;]) {
					var block = {};
					if (field[&apos;IN3.20.1&apos;].toString() != &quot;&quot;) { block.preCertificationPatientType = field[&apos;IN3.20.1&apos;]; }
					if (field[&apos;IN3.20.2&apos;].toString() != &quot;&quot;) { block.preCertificationRequired = field[&apos;IN3.20.2&apos;]; }
					if (field[&apos;IN3.20.3&apos;].toString() != &quot;&quot;) { block.preCertificationWindow = field[&apos;IN3.20.3&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN3[indexIN3].preCertificationReqWindow.push(block);
					}
				}
				if (in1[index].IN3[indexIN3].preCertificationReqWindow.length == 0) {
					delete in1[index].IN3[indexIN3].preCertificationReqWindow.length;
				}

				// IN3.21, caseManager
				if (in3Seg[&apos;IN3.21&apos;][&apos;IN3.21.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].caseManager = in3Seg[&apos;IN3.21&apos;][&apos;IN3.21.1&apos;]; }

				// IN3.22, secondOpinionDate
				if (in3Seg[&apos;IN3.22&apos;][&apos;IN3.22.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].secondOpinionDate = in3Seg[&apos;IN3.22&apos;][&apos;IN3.22.1&apos;]; }

				// IN3.23, secondOpinionStatus
				if (in3Seg[&apos;IN3.23&apos;][&apos;IN3.23.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].secondOpinionStatus = in3Seg[&apos;IN3.23&apos;][&apos;IN3.23.1&apos;]; }

				// IN3.24, secondOpinionDocumentationReceived
				in1[index].IN3[indexIN3].secondOpinionDocumentationReceived = [];
				for each (field in in3Seg[&apos;IN3.24&apos;]) {
					if (field[&apos;IN3.24.1&apos;].toString() != &quot;&quot;) {
						in1[index].IN3[indexIN3].secondOpinionDocumentationReceived.push(field[&apos;IN3.24.1&apos;]);
					}
				}
				if (in1[index].IN3[indexIN3].secondOpinionDocumentationReceived.length == 0) {
					delete in1[index].IN3[indexIN3].secondOpinionDocumentationReceived;
				}
				
				// IN3.25, secondOpinionPhysician
				in1[index].IN3[indexIN3].secondOpinionPhysician = [];
				for each (field in in3Seg[&apos;IN3.25&apos;]) {
					var block = {};
					if (field[&apos;IN3.25.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN3.25.1&apos;]; }
					if (field[&apos;IN3.25.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN3.25.2&apos;]; }
					if (field[&apos;IN3.25.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN3.25.3&apos;]; }
					if (field[&apos;IN3.25.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN3.25.4&apos;]; }
					if (field[&apos;IN3.25.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN3.25.5&apos;]; }
					if (field[&apos;IN3.25.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN3.25.6&apos;]; }
					if (field[&apos;IN3.25.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN3.25.7&apos;]; }
					if (field[&apos;IN3.25.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;IN3.25.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN3.25.9&apos;][&apos;IN3.25.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN3.25.9&apos;][&apos;IN3.25.9.1&apos;]; }
					if (field[&apos;IN3.25.9&apos;][&apos;IN3.25.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN3.25.9&apos;][&apos;IN3.25.9.2&apos;]; }
					if (field[&apos;IN3.25.9&apos;][&apos;IN3.25.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN3.25.9&apos;][&apos;IN3.25.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN3.25.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN3.25.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN3.25.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN3.25.10&apos;]; }
					if (field[&apos;IN3.25.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN3.25.11&apos;]; }
					if (field[&apos;IN3.25.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN3.25.12&apos;]; }
					if (field[&apos;IN3.25.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;IN3.25.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN3.25.14&apos;][&apos;IN3.25.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN3.25.14&apos;][&apos;IN3.25.14.1&apos;]; }
					if (field[&apos;IN3.25.14&apos;][&apos;IN3.25.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN3.25.14&apos;][&apos;IN3.25.14.2&apos;]; }
					if (field[&apos;IN3.25.14&apos;][&apos;IN3.25.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN3.25.14&apos;][&apos;IN3.25.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN3.25.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN3.25.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN3[indexIN3].secondOpinionPhysician.push(block);
					}
				}
				if (in1[index].IN3[indexIN3].secondOpinionPhysician.length == 0) {
					delete in1[index].IN3[indexIN3].secondOpinionPhysician;
				}

				// clean up IN3 and increment index
				if (Object.keys(in1[index].IN3[indexIN3]).length == 0) {
					delete in1[index].IN3[indexIN3];
				} else {
					indexIN3++;
				}
			}
			
			// Clean up the IN3 object if it&apos;s empty
			if (in1[index].IN3[0] == null){
				delete in1[index].IN3;
			}
		}

		// Increment the IN1 index
		index++;
	}
}

// Optional: save a copy of the completed IN1 segment for reference later
//channelMap.put(&quot;in1&quot;, in1); // uncomment to save

// Re-add the IN1 segment to the hl7JSON object
if (in1 &amp;&amp; Object.keys(in1).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.IN1 = in1;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// Pull out the IN1 JSON to embed the IN3 segments in
var in1 = JSON.parse($(&apos;hl7JSON&apos;)).content.IN1;

// IN1
if (msg[&apos;IN1&apos;].length() &gt; 0) {

	// IN1 is a required to have a IN3, but if the IN1 was blank and was removed from the JSON, just create a new one to add the IN3 into
	if (!in1) {
		in1 = [{}];
	}
		
	var index = 0;
	for each (seg in msg.IN1) {

		// IN3 (IN1)
		var in3Group = getSegmentsAfter(msg,seg,&apos;IN3&apos;,true);
		if (in3Group.length &gt; 0 &amp;&amp; in1) {
			in1[index].IN3 = [];
			var indexIN3 = 0;
			for each (in3Seg in in3Group) {
				in1[index].IN3[indexIN3] = {};

				// IN3.1, setID
				if (in3Seg[&apos;IN3.1&apos;][&apos;IN3.1.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].setID = in3Seg[&apos;IN3.1&apos;][&apos;IN3.1.1&apos;]; }

				// IN3.2, certificationNumber
				in1[index].IN3[indexIN3].certificationNumber = {};
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.id = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.1&apos;]; }
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.2&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.identifierCheckDigit = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.2&apos;]; }
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.3&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.codeIdentifyingCheckDigitScheme = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.3&apos;]; }
				in1[index].IN3[indexIN3].certificationNumber.assigningAuthority = {};
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.4&apos;][&apos;IN3.2.4.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.assigningAuthority.namespaceId = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.4&apos;][&apos;IN3.2.4.1&apos;]; }
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.4&apos;][&apos;IN3.2.4.2&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.assigningAuthority.universalId = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.4&apos;][&apos;IN3.2.4.2&apos;]; }
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.4&apos;][&apos;IN3.2.4.3&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.assigningAuthority.universalIdType = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.4&apos;][&apos;IN3.2.4.3&apos;]; }
				if (Object.keys(in1[index].IN3[indexIN3].certificationNumber.assigningAuthority).length == 0) {
					if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.4&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.assigningAuthority.namespaceId = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.4&apos;]; }
					else delete in1[index].IN3[indexIN3].certificationNumber.assigningAuthority;
				}
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.5&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.idTypeCode = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.5&apos;]; }
				in1[index].IN3[indexIN3].certificationNumber.assigningFacility = {};
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.6&apos;][&apos;IN3.2.6.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.assigningFacility.namespaceId = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.6&apos;][&apos;IN3.2.6.1&apos;]; }
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.6&apos;][&apos;IN3.2.6.2&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.assigningFacility.universalId = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.6&apos;][&apos;IN3.2.6.2&apos;]; }
				if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.6&apos;][&apos;IN3.2.6.3&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.assigningFacility.universalIdType = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.6&apos;][&apos;IN3.2.6.3&apos;]; }
				if (Object.keys(in1[index].IN3[indexIN3].certificationNumber.assigningFacility).length == 0) {
					if (in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.6&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationNumber.assigningFacility.namespaceId = in3Seg[&apos;IN3.2&apos;][&apos;IN3.2.6&apos;]; }
					else delete in1[index].IN3[indexIN3].certificationNumber.assigningFacility;
				}
				if (Object.keys(in1[index].IN3[indexIN3].certificationNumber).length == 0) {
					delete in1[index].IN3[indexIN3].certificationNumber;
				}

				// IN3.3, certifiedBy
				in1[index].IN3[indexIN3].certifiedBy = [];
				for each (field in in3Seg[&apos;IN3.3&apos;]) {
					var block = {};
					if (field[&apos;IN3.3.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN3.3.1&apos;]; }
					if (field[&apos;IN3.3.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN3.3.2&apos;]; }
					if (field[&apos;IN3.3.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN3.3.3&apos;]; }
					if (field[&apos;IN3.3.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN3.3.4&apos;]; }
					if (field[&apos;IN3.3.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN3.3.5&apos;]; }
					if (field[&apos;IN3.3.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN3.3.6&apos;]; }
					if (field[&apos;IN3.3.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN3.3.7&apos;]; }
					if (field[&apos;IN3.3.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;IN3.3.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN3.3.9&apos;][&apos;IN3.3.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN3.3.9&apos;][&apos;IN3.3.9.1&apos;]; }
					if (field[&apos;IN3.3.9&apos;][&apos;IN3.3.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN3.3.9&apos;][&apos;IN3.3.9.2&apos;]; }
					if (field[&apos;IN3.3.9&apos;][&apos;IN3.3.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN3.3.9&apos;][&apos;IN3.3.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN3.3.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN3.3.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN3.3.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN3.3.10&apos;]; }
					if (field[&apos;IN3.3.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN3.3.11&apos;]; }
					if (field[&apos;IN3.3.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN3.3.12&apos;]; }
					if (field[&apos;IN3.3.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;IN3.3.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN3.3.14&apos;][&apos;IN3.3.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN3.3.14&apos;][&apos;IN3.3.14.1&apos;]; }
					if (field[&apos;IN3.3.14&apos;][&apos;IN3.3.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN3.3.14&apos;][&apos;IN3.3.14.2&apos;]; }
					if (field[&apos;IN3.3.14&apos;][&apos;IN3.3.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN3.3.14&apos;][&apos;IN3.3.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN3.3.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN3.3.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN3[indexIN3].certifiedBy.push(block);
					}
				}
				if (in1[index].IN3[indexIN3].certifiedBy.length == 0) {
					delete in1[index].IN3[indexIN3].certifiedBy;
				}

				// IN3.4, certificationRequired
				if (in3Seg[&apos;IN3.4&apos;][&apos;IN3.4.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationRequired = in3Seg[&apos;IN3.4&apos;][&apos;IN3.4.1&apos;]; }

				// IN3.5, penalty
				in1[index].IN3[indexIN3].penalty = {};
				if (in3Seg[&apos;IN3.5&apos;][&apos;IN3.5.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].penalty.penaltyType = in3Seg[&apos;IN3.5&apos;][&apos;IN3.5.1&apos;]; }
				if (in3Seg[&apos;IN3.5&apos;][&apos;IN3.5.2&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].penalty.penaltyCode = in3Seg[&apos;IN3.5&apos;][&apos;IN3.5.2&apos;]; }
				if (Object.keys(in1[index].IN3[indexIN3].penalty).length &gt; 0) {
					delete in1[index].IN3[indexIN3].penalty;
				}

				// IN3.6, certificationDateTime
				if (in3Seg[&apos;IN3.6&apos;][&apos;IN3.6.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationDateTime = in3Seg[&apos;IN3.6&apos;][&apos;IN3.6.1&apos;]; }

				// IN3.7, certificationModifyDateTime
				if (in3Seg[&apos;IN3.7&apos;][&apos;IN3.7.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationModifyDateTime = in3Seg[&apos;IN3.7&apos;][&apos;IN3.7.1&apos;]; }

				// IN3.8, operator
				in1[index].IN3[indexIN3].operator = [];
				for each (field in in3Seg[&apos;IN3.8&apos;]) {
					var block = {};
					if (field[&apos;IN3.8.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN3.8.1&apos;]; }
					if (field[&apos;IN3.8.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN3.8.2&apos;]; }
					if (field[&apos;IN3.8.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN3.8.3&apos;]; }
					if (field[&apos;IN3.8.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN3.8.4&apos;]; }
					if (field[&apos;IN3.8.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN3.8.5&apos;]; }
					if (field[&apos;IN3.8.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN3.8.6&apos;]; }
					if (field[&apos;IN3.8.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN3.8.7&apos;]; }
					if (field[&apos;IN3.8.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;IN3.8.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN3.8.9&apos;][&apos;IN3.8.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN3.8.9&apos;][&apos;IN3.8.9.1&apos;]; }
					if (field[&apos;IN3.8.9&apos;][&apos;IN3.8.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN3.8.9&apos;][&apos;IN3.8.9.2&apos;]; }
					if (field[&apos;IN3.8.9&apos;][&apos;IN3.8.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN3.8.9&apos;][&apos;IN3.8.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN3.8.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN3.8.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN3.8.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN3.8.10&apos;]; }
					if (field[&apos;IN3.8.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN3.8.11&apos;]; }
					if (field[&apos;IN3.8.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN3.8.12&apos;]; }
					if (field[&apos;IN3.8.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;IN3.8.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN3.8.14&apos;][&apos;IN3.8.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN3.8.14&apos;][&apos;IN3.8.14.1&apos;]; }
					if (field[&apos;IN3.8.14&apos;][&apos;IN3.8.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN3.8.14&apos;][&apos;IN3.8.14.2&apos;]; }
					if (field[&apos;IN3.8.14&apos;][&apos;IN3.8.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN3.8.14&apos;][&apos;IN3.8.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN3.8.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN3.8.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN3[indexIN3].operator.push(block);
					}
				}
				if (in1[index].IN3[indexIN3].operator.length == 0) {
					delete in1[index].IN3[indexIN3].operator;
				}

				// IN3.9, certificationBeginDate
				if (in3Seg[&apos;IN3.9&apos;][&apos;IN3.9.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationBeginDate = in3Seg[&apos;IN3.9&apos;][&apos;IN3.9.1&apos;]; }

				// IN3.90, certificationEndDate
				if (in3Seg[&apos;IN3.10&apos;][&apos;IN3.10.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationEndDate = in3Seg[&apos;IN3.10&apos;][&apos;IN3.10.1&apos;]; }

				// IN3.11, days
				in1[index].IN3[indexIN3].days = {};
				if (in3Seg[&apos;IN3.11&apos;][&apos;IN3.11.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].days.dayType = in3Seg[&apos;IN3.11&apos;][&apos;IN3.11.1&apos;]; }
				if (in3Seg[&apos;IN3.11&apos;][&apos;IN3.11.2&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].days.numberOfDays = in3Seg[&apos;IN3.11&apos;][&apos;IN3.11.2&apos;]; }
				if (Object.keys(in1[index].IN3[indexIN3].days).length &gt; 0) {
					delete in1[index].IN3[indexIN3].days;
				}

				// IN3.12, nonConcurCodeDescription
				in1[index].IN3[indexIN3].nonConcurCodeDescription = {};
				if (in3Seg[&apos;IN3.12&apos;][&apos;IN3.12.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].nonConcurCodeDescription.id = in3Seg[&apos;IN3.12&apos;][&apos;IN3.12.1&apos;]; }
				if (in3Seg[&apos;IN3.12&apos;][&apos;IN3.12.2&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].nonConcurCodeDescription.namespaceId = in3Seg[&apos;IN3.12&apos;][&apos;IN3.12.2&apos;]; }
				if (in3Seg[&apos;IN3.12&apos;][&apos;IN3.12.3&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].nonConcurCodeDescription.universalId = in3Seg[&apos;IN3.12&apos;][&apos;IN3.12.3&apos;]; }
				if (in3Seg[&apos;IN3.12&apos;][&apos;IN3.12.4&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].nonConcurCodeDescription.unniveralIdType = in3Seg[&apos;IN3.12&apos;][&apos;IN3.12.4&apos;]; }
				if (Object.keys(in1[index].IN3[indexIN3].nonConcurCodeDescription).length == 0) {
					delete in1[index].IN3[indexIN3].nonConcurCodeDescription;
				}

				// IN3.13, nonConcurEffectiveDateTime
				if (in3Seg[&apos;IN3.13&apos;][&apos;IN3.13.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].nonConcurEffectiveDateTime = in3Seg[&apos;IN3.13&apos;][&apos;IN3.13.1&apos;]; }

				// IN3.14, physicianReviewer
				in1[index].IN3[indexIN3].physicianReviewer = [];
				for each (field in in3Seg[&apos;IN3.14&apos;]) {
					var block = {};
					if (field[&apos;IN3.14.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN3.14.1&apos;]; }
					if (field[&apos;IN3.14.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN3.14.2&apos;]; }
					if (field[&apos;IN3.14.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN3.14.3&apos;]; }
					if (field[&apos;IN3.14.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN3.14.4&apos;]; }
					if (field[&apos;IN3.14.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN3.14.5&apos;]; }
					if (field[&apos;IN3.14.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN3.14.6&apos;]; }
					if (field[&apos;IN3.14.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN3.14.7&apos;]; }
					if (field[&apos;IN3.14.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;IN3.14.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN3.14.9&apos;][&apos;IN3.14.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN3.14.9&apos;][&apos;IN3.14.9.1&apos;]; }
					if (field[&apos;IN3.14.9&apos;][&apos;IN3.14.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN3.14.9&apos;][&apos;IN3.14.9.2&apos;]; }
					if (field[&apos;IN3.14.9&apos;][&apos;IN3.14.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN3.14.9&apos;][&apos;IN3.14.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN3.14.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN3.14.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN3.14.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN3.14.10&apos;]; }
					if (field[&apos;IN3.14.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN3.14.11&apos;]; }
					if (field[&apos;IN3.14.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN3.14.12&apos;]; }
					if (field[&apos;IN3.14.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;IN3.14.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN3.14.14&apos;][&apos;IN3.14.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN3.14.14&apos;][&apos;IN3.14.14.1&apos;]; }
					if (field[&apos;IN3.14.14&apos;][&apos;IN3.14.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN3.14.14&apos;][&apos;IN3.14.14.2&apos;]; }
					if (field[&apos;IN3.14.14&apos;][&apos;IN3.14.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN3.14.14&apos;][&apos;IN3.14.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN3.14.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN3.14.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN3[indexIN3].physicianReviewer.push(block);
					}
				}
				if (in1[index].IN3[indexIN3].physicianReviewer.length == 0) {
					delete in1[index].IN3[indexIN3].physicianReviewer;
				}
				// IN3.15, certificationContact
				if (in3Seg[&apos;IN3.15&apos;][&apos;IN3.15.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationContact = in3Seg[&apos;IN3.15&apos;][&apos;IN3.15.1&apos;]; }

				// IN3.16, certificationContactPhoneNumber
				in1[index].IN3[indexIN3].certificationContactPhoneNumber = [];
				for each (field in in3Seg[&apos;IN3.16&apos;]) {
					var block = {};
					if (field[&apos;IN3.16.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;IN3.16.1&apos;]; }
					if (field[&apos;IN3.16.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;IN3.16.2&apos;]; }
					if (field[&apos;IN3.16.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;IN3.16.3&apos;]; }
					if (field[&apos;IN3.16.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;IN3.16.4&apos;]; }
					if (field[&apos;IN3.16.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;IN3.16.5&apos;]; }
					if (field[&apos;IN3.16.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;IN3.16.6&apos;]; }
					if (field[&apos;IN3.16.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;IN3.16.7&apos;]; }
					if (field[&apos;IN3.16.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;IN3.16.8&apos;]; }
					if (field[&apos;IN3.16.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;IN3.16.9&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN3[indexIN3].certificationContactPhoneNumber.push(block);
					}
				}
				if (in1[index].IN3[indexIN3].certificationContactPhoneNumber.length == 0) {
					delete in1[index].IN3[indexIN3].certificationContactPhoneNumber;
				}

				// IN3.17, appealReason
				in1[index].IN3[indexIN3].appealReason = {};
				if (in3Seg[&apos;IN3.17&apos;][&apos;IN3.17.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].appealReason.id = in3Seg[&apos;IN3.17&apos;][&apos;IN3.17.1&apos;]; }
				if (in3Seg[&apos;IN3.17&apos;][&apos;IN3.17.2&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].appealReason.namespaceId = in3Seg[&apos;IN3.17&apos;][&apos;IN3.17.2&apos;]; }
				if (in3Seg[&apos;IN3.17&apos;][&apos;IN3.17.3&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].appealReason.universalId = in3Seg[&apos;IN3.17&apos;][&apos;IN3.17.3&apos;]; }
				if (in3Seg[&apos;IN3.17&apos;][&apos;IN3.17.4&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].appealReason.unniveralIdType = in3Seg[&apos;IN3.17&apos;][&apos;IN3.17.4&apos;]; }
				if (Object.keys(in1[index].IN3[indexIN3].appealReason).length == 0) {
					delete in1[index].IN3[indexIN3].appealReason;
				}

				// IN3.18, certificationAgency
				in1[index].IN3[indexIN3].certificationAgency = {};
				if (in3Seg[&apos;IN3.18&apos;][&apos;IN3.18.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationAgency.id = in3Seg[&apos;IN3.18&apos;][&apos;IN3.18.1&apos;]; }
				if (in3Seg[&apos;IN3.18&apos;][&apos;IN3.18.2&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationAgency.namespaceId = in3Seg[&apos;IN3.18&apos;][&apos;IN3.18.2&apos;]; }
				if (in3Seg[&apos;IN3.18&apos;][&apos;IN3.18.3&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationAgency.universalId = in3Seg[&apos;IN3.18&apos;][&apos;IN3.18.3&apos;]; }
				if (in3Seg[&apos;IN3.18&apos;][&apos;IN3.18.4&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].certificationAgency.unniveralIdType = in3Seg[&apos;IN3.18&apos;][&apos;IN3.18.4&apos;]; }
				if (Object.keys(in1[index].IN3[indexIN3].certificationAgency).length == 0) {
					delete in1[index].IN3[indexIN3].certificationAgency;
				}

				// IN3.19, certificationAgencyPhoneNumber
				in1[index].IN3[indexIN3].certificationAgencyPhoneNumber = [];
				for each (field in in3Seg[&apos;IN3.19&apos;]) {
					var block = {};
					if (field[&apos;IN3.19.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;IN3.19.1&apos;]; }
					if (field[&apos;IN3.19.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;IN3.19.2&apos;]; }
					if (field[&apos;IN3.19.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;IN3.19.3&apos;]; }
					if (field[&apos;IN3.19.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;IN3.19.4&apos;]; }
					if (field[&apos;IN3.19.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;IN3.19.5&apos;]; }
					if (field[&apos;IN3.19.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;IN3.19.6&apos;]; }
					if (field[&apos;IN3.19.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;IN3.19.7&apos;]; }
					if (field[&apos;IN3.19.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;IN3.19.8&apos;]; }
					if (field[&apos;IN3.19.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;IN3.19.9&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN3[indexIN3].certificationAgencyPhoneNumber.push(block);
					}
				}
				if (in1[index].IN3[indexIN3].certificationAgencyPhoneNumber.length == 0) {
					delete in1[index].IN3[indexIN3].certificationAgencyPhoneNumber;
				}

				// IN3.20, preCertificationReqWindow
				in1[index].IN3[indexIN3].preCertificationReqWindow = [];
				for each (field in in3Seg[&apos;IN3.20&apos;]) {
					var block = {};
					if (field[&apos;IN3.20.1&apos;].toString() != &quot;&quot;) { block.preCertificationPatientType = field[&apos;IN3.20.1&apos;]; }
					if (field[&apos;IN3.20.2&apos;].toString() != &quot;&quot;) { block.preCertificationRequired = field[&apos;IN3.20.2&apos;]; }
					if (field[&apos;IN3.20.3&apos;].toString() != &quot;&quot;) { block.preCertificationWindow = field[&apos;IN3.20.3&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN3[indexIN3].preCertificationReqWindow.push(block);
					}
				}
				if (in1[index].IN3[indexIN3].preCertificationReqWindow.length == 0) {
					delete in1[index].IN3[indexIN3].preCertificationReqWindow.length;
				}

				// IN3.21, caseManager
				if (in3Seg[&apos;IN3.21&apos;][&apos;IN3.21.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].caseManager = in3Seg[&apos;IN3.21&apos;][&apos;IN3.21.1&apos;]; }

				// IN3.22, secondOpinionDate
				if (in3Seg[&apos;IN3.22&apos;][&apos;IN3.22.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].secondOpinionDate = in3Seg[&apos;IN3.22&apos;][&apos;IN3.22.1&apos;]; }

				// IN3.23, secondOpinionStatus
				if (in3Seg[&apos;IN3.23&apos;][&apos;IN3.23.1&apos;].toString() != &quot;&quot;) { in1[index].IN3[indexIN3].secondOpinionStatus = in3Seg[&apos;IN3.23&apos;][&apos;IN3.23.1&apos;]; }

				// IN3.24, secondOpinionDocumentationReceived
				in1[index].IN3[indexIN3].secondOpinionDocumentationReceived = [];
				for each (field in in3Seg[&apos;IN3.24&apos;]) {
					if (field[&apos;IN3.24.1&apos;].toString() != &quot;&quot;) {
						in1[index].IN3[indexIN3].secondOpinionDocumentationReceived.push(field[&apos;IN3.24.1&apos;]);
					}
				}
				if (in1[index].IN3[indexIN3].secondOpinionDocumentationReceived.length == 0) {
					delete in1[index].IN3[indexIN3].secondOpinionDocumentationReceived;
				}
				
				// IN3.25, secondOpinionPhysician
				in1[index].IN3[indexIN3].secondOpinionPhysician = [];
				for each (field in in3Seg[&apos;IN3.25&apos;]) {
					var block = {};
					if (field[&apos;IN3.25.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;IN3.25.1&apos;]; }
					if (field[&apos;IN3.25.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;IN3.25.2&apos;]; }
					if (field[&apos;IN3.25.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;IN3.25.3&apos;]; }
					if (field[&apos;IN3.25.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;IN3.25.4&apos;]; }
					if (field[&apos;IN3.25.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;IN3.25.5&apos;]; }
					if (field[&apos;IN3.25.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;IN3.25.6&apos;]; }
					if (field[&apos;IN3.25.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;IN3.25.7&apos;]; }
					if (field[&apos;IN3.25.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;IN3.25.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;IN3.25.9&apos;][&apos;IN3.25.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN3.25.9&apos;][&apos;IN3.25.9.1&apos;]; }
					if (field[&apos;IN3.25.9&apos;][&apos;IN3.25.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;IN3.25.9&apos;][&apos;IN3.25.9.2&apos;]; }
					if (field[&apos;IN3.25.9&apos;][&apos;IN3.25.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;IN3.25.9&apos;][&apos;IN3.25.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;IN3.25.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;IN3.25.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;IN3.25.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;IN3.25.10&apos;]; }
					if (field[&apos;IN3.25.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;IN3.25.11&apos;]; }
					if (field[&apos;IN3.25.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;IN3.25.12&apos;]; }
					if (field[&apos;IN3.25.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;IN3.25.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;IN3.25.14&apos;][&apos;IN3.25.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN3.25.14&apos;][&apos;IN3.25.14.1&apos;]; }
					if (field[&apos;IN3.25.14&apos;][&apos;IN3.25.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;IN3.25.14&apos;][&apos;IN3.25.14.2&apos;]; }
					if (field[&apos;IN3.25.14&apos;][&apos;IN3.25.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;IN3.25.14&apos;][&apos;IN3.25.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;IN3.25.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;IN3.25.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						in1[index].IN3[indexIN3].secondOpinionPhysician.push(block);
					}
				}
				if (in1[index].IN3[indexIN3].secondOpinionPhysician.length == 0) {
					delete in1[index].IN3[indexIN3].secondOpinionPhysician;
				}

				// clean up IN3 and increment index
				if (Object.keys(in1[index].IN3[indexIN3]).length == 0) {
					delete in1[index].IN3[indexIN3];
				} else {
					indexIN3++;
				}
			}
			
			// Clean up the IN3 object if it&apos;s empty
			if (in1[index].IN3[0] == null){
				delete in1[index].IN3;
			}
		}

		// Increment the IN1 index
		index++;
	}
}

// Optional: save a copy of the completed IN1 segment for reference later
//channelMap.put(&quot;in1&quot;, in1); // uncomment to save

// Re-add the IN1 segment to the hl7JSON object
if (in1 &amp;&amp; Object.keys(in1).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.IN1 = in1;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>9</sequenceNumber>
          <name>GT1 (Guarantor) Segment</name>
          <script>// GT1
var gt1;
if (msg[&apos;GT1&apos;].length() &gt; 0) {
	gt1 = [];
	var index = 0;
	for each (seg in msg[&apos;GT1&apos;]) {
		gt1[index] = {};

		// GT1.1, setId
		if (seg[&apos;GT1.1&apos;][&apos;GT1.1.1&apos;].toString() != &quot;&quot;) { gt1[index].setId = seg[&apos;GT1.1&apos;][&apos;GT1.1.1&apos;]; }

		// GT1.2, guarantorNumber
		gt1[index].guarantorNumber = [];
		for each (field in seg[&apos;GT1.2&apos;]) {
			var block = {};
			if (field[&apos;GT1.2.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;GT1.2.1&apos;]; }
			if (field[&apos;GT1.2.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;GT1.2.2&apos;]; }
			if (field[&apos;GT1.2.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;GT1.2.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;GT1.2.4&apos;][&apos;GT1.2.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.2.4&apos;][&apos;GT1.2.4.1&apos;]; }
			if (field[&apos;GT1.2.4&apos;][&apos;GT1.2.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;GT1.2.4&apos;][&apos;GT1.2.4.2&apos;]; }
			if (field[&apos;GT1.2.4&apos;][&apos;GT1.2.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;GT1.2.4&apos;][&apos;GT1.2.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;GT1.2.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.2.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;GT1.2.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;GT1.2.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;GT1.2.6&apos;][&apos;GT1.2.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.2.6&apos;][&apos;GT1.2.6.1&apos;]; }
			if (field[&apos;GT1.2.6&apos;][&apos;GT1.2.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;GT1.2.6&apos;][&apos;GT1.2.6.2&apos;]; }
			if (field[&apos;GT1.2.6&apos;][&apos;GT1.2.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;GT1.2.6&apos;][&apos;GT1.2.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;GT1.2.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.2.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorNumber.push(block);
			}
		}
		if (Object.keys(gt1[index].guarantorNumber).length == 0) {
			delete gt1[index].guarantorNumber;
		}

		// GT1.3, guarantorName
		gt1[index].guarantorName = [];
		for each (field in seg[&apos;GT1.3&apos;]) {
			var block = {};
			if (field[&apos;GT1.3.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;GT1.3.1&apos;]; }
			if (field[&apos;GT1.3.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;GT1.3.2&apos;]; }
			if (field[&apos;GT1.3.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;GT1.3.3&apos;]; }
			if (field[&apos;GT1.3.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;GT1.3.4&apos;]; }
			if (field[&apos;GT1.3.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;GT1.3.5&apos;]; }
			if (field[&apos;GT1.3.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;GT1.3.6&apos;]; }
			if (field[&apos;GT1.3.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;GT1.3.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorName.push(block);
			}	
		}
		if (gt1[index].guarantorName.length == 0) {
			delete gt1[index].guarantorName;
		}

		// GT1.4, guarantorSpouseName
		gt1[index].guarantorSpouseName = [];
		for each (field in seg[&apos;GT1.4&apos;]) {
			var block = {};
			if (field[&apos;GT1.4.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;GT1.4.1&apos;]; }
			if (field[&apos;GT1.4.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;GT1.4.2&apos;]; }
			if (field[&apos;GT1.4.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;GT1.4.3&apos;]; }
			if (field[&apos;GT1.4.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;GT1.4.4&apos;]; }
			if (field[&apos;GT1.4.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;GT1.4.5&apos;]; }
			if (field[&apos;GT1.4.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;GT1.4.6&apos;]; }
			if (field[&apos;GT1.4.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;GT1.4.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorSpouseName.push(block);
			}	
		}
		if (gt1[index].guarantorSpouseName.length == 0) {
			delete gt1[index].guarantorSpouseName;
		}

		// GT1.5, guarantorAddress
		gt1[index].guarantorAddress = [];
		for each (field in seg[&apos;GT1.5&apos;]) {
			var block = {};
			if (field[&apos;GT1.5.1&apos;].toString() != &quot;&quot;) { block.streetAddress = field[&apos;GT1.5.1&apos;]; }
			if (field[&apos;GT1.5.2&apos;].toString() != &quot;&quot;) { block.otherDesignation = field[&apos;GT1.5.2&apos;]; }
			if (field[&apos;GT1.5.3&apos;].toString() != &quot;&quot;) { block.city = field[&apos;GT1.5.3&apos;]; }
			if (field[&apos;GT1.5.4&apos;].toString() != &quot;&quot;) { block.stateOrProvince = field[&apos;GT1.5.4&apos;]; }
			if (field[&apos;GT1.5.5&apos;].toString() != &quot;&quot;) { block.zip = field[&apos;GT1.5.5&apos;]; }
			if (field[&apos;GT1.5.6&apos;].toString() != &quot;&quot;) { block.country = field[&apos;GT1.5.6&apos;]; }
			if (field[&apos;GT1.5.7&apos;].toString() != &quot;&quot;) { block.addressType = field[&apos;GT1.5.7&apos;]; }
			if (field[&apos;GT1.5.8&apos;].toString() != &quot;&quot;) { block.otherGeographicDesignation = field[&apos;GT1.5.8&apos;]; }
			if (field[&apos;GT1.5.9&apos;].toString() != &quot;&quot;) { block.countyOrParishCode = field[&apos;GT1.5.9&apos;]; }
			if (field[&apos;GT1.5.10&apos;].toString() != &quot;&quot;) { block.censusTract = field[&apos;GT1.5.10&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorAddress.push(block);
			}
		}
		if (gt1[index].guarantorAddress.length == 0) {
			delete gt1[index].guarantorAddress;
		}

		// GT1.6, guarantorPhNumHome
		gt1[index].guarantorPhNumHome = [];
		for each (field in seg[&apos;GT1.6&apos;]) {
			var block = {};
			if (field[&apos;GT1.6.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;GT1.6.1&apos;]; }
			if (field[&apos;GT1.6.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;GT1.6.2&apos;]; }
			if (field[&apos;GT1.6.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;GT1.6.3&apos;]; }
			if (field[&apos;GT1.6.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;GT1.6.4&apos;]; }
			if (field[&apos;GT1.6.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;GT1.6.5&apos;]; }
			if (field[&apos;GT1.6.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;GT1.6.6&apos;]; }
			if (field[&apos;GT1.6.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;GT1.6.7&apos;]; }
			if (field[&apos;GT1.6.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;GT1.6.8&apos;]; }
			if (field[&apos;GT1.6.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;GT1.6.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorPhNumHome.push(block);
			}
		}
		if (gt1[index].guarantorPhNumHome.length == 0) {
			delete gt1[index].guarantorPhNumHome;
		}

		// GT1.7, guarantorPhNumBusiness
		gt1[index].guarantorPhNumBusiness = [];
		for each (field in seg[&apos;GT1.7&apos;]) {
			var block = {};
			if (field[&apos;GT1.7.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;GT1.7.1&apos;]; }
			if (field[&apos;GT1.7.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;GT1.7.2&apos;]; }
			if (field[&apos;GT1.7.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;GT1.7.3&apos;]; }
			if (field[&apos;GT1.7.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;GT1.7.4&apos;]; }
			if (field[&apos;GT1.7.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;GT1.7.5&apos;]; }
			if (field[&apos;GT1.7.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;GT1.7.6&apos;]; }
			if (field[&apos;GT1.7.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;GT1.7.7&apos;]; }
			if (field[&apos;GT1.7.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;GT1.7.8&apos;]; }
			if (field[&apos;GT1.7.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;GT1.7.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorPhNumBusiness.push(block);
			}
		}
		if (gt1[index].guarantorPhNumBusiness.length == 0) {
			delete gt1[index].guarantorPhNumBusiness;
		}

		// GT1.8, guarantorDatetimeOfBirth
		if (seg[&apos;GT1.8&apos;][&apos;GT1.8.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorDatetimeOfBirth = seg[&apos;GT1.8&apos;][&apos;GT1.8.1&apos;]; }

		// GT1.9, guarantorSex
		if (seg[&apos;GT1.9&apos;][&apos;GT1.9.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorSex = seg[&apos;GT1.9&apos;][&apos;GT1.9.1&apos;]; }

		// GT1.10, guarantorType
		if (seg[&apos;GT1.10&apos;][&apos;GT1.10.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorType = seg[&apos;GT1.10&apos;][&apos;GT1.10.1&apos;]; }

		// GT1.11, guarantorRelationship
		if (seg[&apos;GT1.11&apos;][&apos;GT1.11.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorRelationship = seg[&apos;GT1.11&apos;][&apos;GT1.11.1&apos;]; }

		// GT1.12, guarantorSSN
		if (seg[&apos;GT1.12&apos;][&apos;GT1.12.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorSSN = seg[&apos;GT1.12&apos;][&apos;GT1.12.1&apos;]; }

		// GT1.13, guarantorDateBegin
		if (seg[&apos;GT1.13&apos;][&apos;GT1.13.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorDateBegin = seg[&apos;GT1.13&apos;][&apos;GT1.13.1&apos;]; }

		// GT1.14, guarantorDateEnd
		if (seg[&apos;GT1.14&apos;][&apos;GT1.14.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorDateEnd = seg[&apos;GT1.14&apos;][&apos;GT1.14.1&apos;]; }

		// GT1.15, guarantorPriority
		if (seg[&apos;GT1.15&apos;][&apos;GT1.15.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorPriority = seg[&apos;GT1.15&apos;][&apos;GT1.15.1&apos;]; }

		// GT1.16, guarantorEmployerName
		gt1[index].guarantorEmployerName = [];
		for each (field in seg[&apos;GT1.16&apos;]) {
			var block = {};
			if (field[&apos;GT1.16.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;GT1.16.1&apos;]; }
			if (field[&apos;GT1.16.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;GT1.16.2&apos;]; }
			if (field[&apos;GT1.16.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;GT1.16.3&apos;]; }
			if (field[&apos;GT1.16.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;GT1.16.4&apos;]; }
			if (field[&apos;GT1.16.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;GT1.16.5&apos;]; }
			if (field[&apos;GT1.16.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;GT1.16.6&apos;]; }
			if (field[&apos;GT1.16.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;GT1.16.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorEmployerName.push(block);
			}	
		}
		if (gt1[index].guarantorEmployerName.length == 0) {
			delete gt1[index].guarantorEmployerName;
		}

		// GT1.17, guarantorEmployerAddress
		gt1[index].guarantorEmployerAddress = [];
		for each (field in seg[&apos;GT1.17&apos;]) {
			var block = {};
			if (field[&apos;GT1.17.1&apos;].toString() != &quot;&quot;) { block.streetAddress = field[&apos;GT1.17.1&apos;]; }
			if (field[&apos;GT1.17.2&apos;].toString() != &quot;&quot;) { block.otherDesignation = field[&apos;GT1.17.2&apos;]; }
			if (field[&apos;GT1.17.3&apos;].toString() != &quot;&quot;) { block.city = field[&apos;GT1.17.3&apos;]; }
			if (field[&apos;GT1.17.4&apos;].toString() != &quot;&quot;) { block.stateOrProvince = field[&apos;GT1.17.4&apos;]; }
			if (field[&apos;GT1.17.5&apos;].toString() != &quot;&quot;) { block.zip = field[&apos;GT1.17.5&apos;]; }
			if (field[&apos;GT1.17.6&apos;].toString() != &quot;&quot;) { block.country = field[&apos;GT1.17.6&apos;]; }
			if (field[&apos;GT1.17.7&apos;].toString() != &quot;&quot;) { block.addressType = field[&apos;GT1.17.7&apos;]; }
			if (field[&apos;GT1.17.8&apos;].toString() != &quot;&quot;) { block.otherGeographicDesignation = field[&apos;GT1.17.8&apos;]; }
			if (field[&apos;GT1.17.9&apos;].toString() != &quot;&quot;) { block.countyOrParishCode = field[&apos;GT1.17.9&apos;]; }
			if (field[&apos;GT1.17.10&apos;].toString() != &quot;&quot;) { block.censusTract = field[&apos;GT1.17.10&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorEmployerAddress.push(block);
			}
		}
		if (gt1[index].guarantorEmployerAddress.length == 0) {
			delete gt1[index].guarantorEmployerAddress;
		}

		// GT1.18, guarantorEmployerPhoneNumber
		gt1[index].guarantorEmployerPhoneNumber = [];
		for each (field in seg[&apos;GT1.18&apos;]) {
			var block = {};
			if (field[&apos;GT1.18.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;GT1.18.1&apos;]; }
			if (field[&apos;GT1.18.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;GT1.18.2&apos;]; }
			if (field[&apos;GT1.18.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;GT1.18.3&apos;]; }
			if (field[&apos;GT1.18.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;GT1.18.4&apos;]; }
			if (field[&apos;GT1.18.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;GT1.18.5&apos;]; }
			if (field[&apos;GT1.18.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;GT1.18.6&apos;]; }
			if (field[&apos;GT1.18.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;GT1.18.7&apos;]; }
			if (field[&apos;GT1.18.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;GT1.18.8&apos;]; }
			if (field[&apos;GT1.18.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;GT1.18.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorEmployerPhoneNumber.push(block);
			}
		}
		if (gt1[index].guarantorEmployerPhoneNumber.length == 0) {
			delete gt1[index].guarantorEmployerPhoneNumber;
		}

		// GT1.19, guarantorEmployeeIDNumber
		gt1[index].guarantorEmployeeIDNumber = [];
		for each (field in seg[&apos;GT1.19&apos;]) {
			var block = {};
			if (field[&apos;GT1.19.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;GT1.19.1&apos;]; }
			if (field[&apos;GT1.19.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;GT1.19.2&apos;]; }
			if (field[&apos;GT1.19.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;GT1.19.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;GT1.19.4&apos;][&apos;GT1.19.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.19.4&apos;][&apos;GT1.19.4.1&apos;]; }
			if (field[&apos;GT1.19.4&apos;][&apos;GT1.19.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;GT1.19.4&apos;][&apos;GT1.19.4.2&apos;]; }
			if (field[&apos;GT1.19.4&apos;][&apos;GT1.19.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;GT1.19.4&apos;][&apos;GT1.19.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;GT1.19.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.19.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;GT1.19.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;GT1.19.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;GT1.19.6&apos;][&apos;GT1.19.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.19.6&apos;][&apos;GT1.19.6.1&apos;]; }
			if (field[&apos;GT1.19.6&apos;][&apos;GT1.19.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;GT1.19.6&apos;][&apos;GT1.19.6.2&apos;]; }
			if (field[&apos;GT1.19.6&apos;][&apos;GT1.19.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;GT1.19.6&apos;][&apos;GT1.19.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;GT1.19.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.19.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorEmployeeIDNumber.push(block);
			}
		}
		if (gt1[index].guarantorEmployeeIDNumber.length == 0) {
			delete gt1[index].guarantorEmployeeIDNumber;
		}

		// GT1.20, guarantorEmploymentStatus
		if (seg[&apos;GT1.20&apos;][&apos;GT1.20.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorEmploymentStatus = seg[&apos;GT1.20&apos;][&apos;GT1.20.1&apos;]; }

		// GT1.21, guarantorOrganizationName
		gt1[index].guarantorOrganizationName = [];
		for each (field in seg[&apos;GT1.21&apos;]) {
			var block = {};
			if (field[&apos;GT1.21.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;GT1.21.1&apos;]; }
			if (field[&apos;GT1.21.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;GT1.21.2&apos;]; }
			if (field[&apos;GT1.21.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;GT1.21.3&apos;]; }
			if (field[&apos;GT1.21.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;GT1.21.4&apos;]; }
			if (field[&apos;GT1.21.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;GT1.21.5&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;GT1.21.6&apos;][&apos;GT1.21.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.21.6&apos;][&apos;GT1.21.6.1&apos;]; }
			if (field[&apos;GT1.21.6&apos;][&apos;GT1.21.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;GT1.21.6&apos;][&apos;GT1.21.6.2&apos;]; }
			if (field[&apos;GT1.21.6&apos;][&apos;GT1.21.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;GT1.21.6&apos;][&apos;GT1.21.6.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;GT1.21.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.21.6&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;GT1.21.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;GT1.21.7&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;GT1.21.8&apos;][&apos;GT1.21.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.21.8&apos;][&apos;GT1.21.8.1&apos;]; }
			if (field[&apos;GT1.21.8&apos;][&apos;GT1.21.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;GT1.21.8&apos;][&apos;GT1.21.8.2&apos;]; }
			if (field[&apos;GT1.21.8&apos;][&apos;GT1.21.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;GT1.21.8&apos;][&apos;GT1.21.8.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;GT1.21.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.21.8&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorOrganizationName.push(block);
			}
		}
		if (gt1[index].guarantorOrganizationName.length == 0) {
			delete gt1[index].guarantorOrganizationName;
		}

		// GT1.22, guarantorBillingHoldFlag
		if (seg[&apos;GT1.22&apos;][&apos;GT1.22.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorBillingHoldFlag = seg[&apos;GT1.22&apos;][&apos;GT1.22.1&apos;]; }

		// GT1.23, guarantorCreditRatingCode
		gt1[index].guarantorCreditRatingCode = {};
		if (seg[&apos;GT1.23&apos;][&apos;GT1.23.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorCreditRatingCode.id = seg[&apos;GT1.23&apos;][&apos;GT1.23.1&apos;]; }
		if (seg[&apos;GT1.23&apos;][&apos;GT1.23.2&apos;].toString() != &quot;&quot;) { gt1[index].guarantorCreditRatingCode.text = seg[&apos;GT1.23&apos;][&apos;GT1.23.2&apos;]; }
		if (seg[&apos;GT1.23&apos;][&apos;GT1.23.3&apos;].toString() != &quot;&quot;) { gt1[index].guarantorCreditRatingCode.codingSystem = seg[&apos;GT1.23&apos;][&apos;GT1.23.3&apos;]; }
		if (seg[&apos;GT1.23&apos;][&apos;GT1.23.4&apos;].toString() != &quot;&quot;) { gt1[index].guarantorCreditRatingCode.altId = seg[&apos;GT1.23&apos;][&apos;GT1.23.4&apos;]; }
		if (seg[&apos;GT1.23&apos;][&apos;GT1.23.5&apos;].toString() != &quot;&quot;) { gt1[index].guarantorCreditRatingCode.altText = seg[&apos;GT1.23&apos;][&apos;GT1.23.5&apos;]; }
		if (seg[&apos;GT1.23&apos;][&apos;GT1.23.6&apos;].toString() != &quot;&quot;) { gt1[index].guarantorCreditRatingCode.altCodingSystem = seg[&apos;GT1.23&apos;][&apos;GT1.23.6&apos;]; }
		if (Object.keys(gt1[index].guarantorCreditRatingCode).length == 0) {
			delete gt1[index].guarantorCreditRatingCode;
		}

		// GT1.24, guarantorDeathDateAndTime
		if (seg[&apos;GT1.24&apos;][&apos;GT1.24.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorDeathDateAndTime = seg[&apos;GT1.24&apos;][&apos;GT1.24.1&apos;]; }

		// GT1.25, guarantorDeathFlag
		if (seg[&apos;GT1.25&apos;][&apos;GT1.25.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorDeathFlag = seg[&apos;GT1.25&apos;][&apos;GT1.25.1&apos;]; }

		// GT1.26, guarantorChargeAdjustmentCode
		gt1[index].guarantorChargeAdjustmentCode = {};
		if (seg[&apos;GT1.26&apos;][&apos;GT1.26.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorChargeAdjustmentCode.id = seg[&apos;GT1.26&apos;][&apos;GT1.26.1&apos;]; }
		if (seg[&apos;GT1.26&apos;][&apos;GT1.26.2&apos;].toString() != &quot;&quot;) { gt1[index].guarantorChargeAdjustmentCode.text = seg[&apos;GT1.26&apos;][&apos;GT1.26.2&apos;]; }
		if (seg[&apos;GT1.26&apos;][&apos;GT1.26.3&apos;].toString() != &quot;&quot;) { gt1[index].guarantorChargeAdjustmentCode.codingSystem = seg[&apos;GT1.26&apos;][&apos;GT1.26.3&apos;]; }
		if (seg[&apos;GT1.26&apos;][&apos;GT1.26.4&apos;].toString() != &quot;&quot;) { gt1[index].guarantorChargeAdjustmentCode.altId = seg[&apos;GT1.26&apos;][&apos;GT1.26.4&apos;]; }
		if (seg[&apos;GT1.26&apos;][&apos;GT1.26.5&apos;].toString() != &quot;&quot;) { gt1[index].guarantorChargeAdjustmentCode.altText = seg[&apos;GT1.26&apos;][&apos;GT1.26.5&apos;]; }
		if (seg[&apos;GT1.26&apos;][&apos;GT1.26.6&apos;].toString() != &quot;&quot;) { gt1[index].guarantorChargeAdjustmentCode.altCodingSystem = seg[&apos;GT1.26&apos;][&apos;GT1.26.6&apos;]; }
		if (Object.keys(gt1[index].guarantorChargeAdjustmentCode).length == 0) {
			delete gt1[index].guarantorChargeAdjustmentCode;
		}

		// GT1.27, guarantorHouseholdAnnualIncome
		gt1[index].guarantorHouseholdAnnualIncome = {};
		gt1[index].guarantorHouseholdAnnualIncome.price = {};
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.1&apos;][&apos;GT1.27.1.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.price.quantity = seg[&apos;GT1.27&apos;][&apos;GT1.27.1&apos;][&apos;GT1.27.1.1&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.1&apos;][&apos;GT1.27.1.2&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.price.denomination = seg[&apos;GT1.27&apos;][&apos;GT1.27.1&apos;][&apos;GT1.27.1.2&apos;]; }
		if (Object.keys(gt1[index].guarantorHouseholdAnnualIncome.price).length == 0) {
			if (seg[&apos;GT1.27&apos;][&apos;GT1.27.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.price.quantity = seg[&apos;GT1.27&apos;][&apos;GT1.27.1&apos;]; }
			else delete gt1[index].guarantorHouseholdAnnualIncome.price;
		}
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.2&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.priceType = seg[&apos;GT1.27&apos;][&apos;GT1.27.2&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.3&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.fromValue = seg[&apos;GT1.27&apos;][&apos;GT1.27.3&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.4&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.toValue = seg[&apos;GT1.27&apos;][&apos;GT1.27.4&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.5&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.rangeUnits = seg[&apos;GT1.27&apos;][&apos;GT1.27.5&apos;]; }
		gt1[index].guarantorHouseholdAnnualIncome.rangeType = {};
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.rangeType.id = seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.1&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.2&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.rangeType.text = seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.2&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.3&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.rangeType.codingSystem = seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.3&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.4&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.rangeType.altId = seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.4&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.5&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.rangeType.altText = seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.5&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.6&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.rangeType.altCodingSystem = seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.6&apos;]; }
		if (Object.keys(gt1[index].guarantorHouseholdAnnualIncome.rangeType).length == 0) {
			if (seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.rangeType.id = seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;]; }
			else delete gt1[index].guarantorHouseholdAnnualIncome.rangeType;
		}
		if (Object.keys(gt1[index].guarantorHouseholdAnnualIncome).length == 0) {
			delete gt1[index].guarantorHouseholdAnnualIncome;
		}

		// GT1.28, guarantorHouseholdSize
		if (seg[&apos;GT1.28&apos;][&apos;GT1.28.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdSize = seg[&apos;GT1.28&apos;][&apos;GT1.28.1&apos;]; }

		// GT1.29, guarantorEmployerIDNumber
		gt1[index].guarantorEmployerIDNumber = [];
		for each (field in seg[&apos;GT1.29&apos;]) {
			var block = {};
			if (field[&apos;GT1.29.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;GT1.29.1&apos;]; }
			if (field[&apos;GT1.29.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;GT1.29.2&apos;]; }
			if (field[&apos;GT1.29.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;GT1.29.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;GT1.29.4&apos;][&apos;GT1.29.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.29.4&apos;][&apos;GT1.29.4.1&apos;]; }
			if (field[&apos;GT1.29.4&apos;][&apos;GT1.29.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;GT1.29.4&apos;][&apos;GT1.29.4.2&apos;]; }
			if (field[&apos;GT1.29.4&apos;][&apos;GT1.29.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;GT1.29.4&apos;][&apos;GT1.29.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;GT1.29.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.29.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;GT1.29.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;GT1.29.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;GT1.29.6&apos;][&apos;GT1.29.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.29.6&apos;][&apos;GT1.29.6.1&apos;]; }
			if (field[&apos;GT1.29.6&apos;][&apos;GT1.29.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;GT1.29.6&apos;][&apos;GT1.29.6.2&apos;]; }
			if (field[&apos;GT1.29.6&apos;][&apos;GT1.29.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;GT1.29.6&apos;][&apos;GT1.29.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;GT1.29.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.29.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorEmployerIDNumber.push(block);
			}
		}
		if (gt1[index].guarantorEmployerIDNumber.length == 0) {
			delete gt1[index].guarantorEmployerIDNumber;
		}

		// GT1.30, guarantorMaritalStatusCode
		if (seg[&apos;GT1.30&apos;][&apos;GT1.30.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorMaritalStatusCode = seg[&apos;GT1.30&apos;][&apos;GT1.30.1&apos;]; }

		// GT1.31, guarantorHireEffectiveDate
		if (seg[&apos;GT1.31&apos;][&apos;GT1.31.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHireEffectiveDate = seg[&apos;GT1.31&apos;][&apos;GT1.31.1&apos;]; }

		// GT1.32, employmentStopDate
		if (seg[&apos;GT1.32&apos;][&apos;GT1.32.1&apos;].toString() != &quot;&quot;) { gt1[index].employmentStopDate = seg[&apos;GT1.32&apos;][&apos;GT1.32.1&apos;]; }

		// GT1.33, livingDependency
		if (seg[&apos;GT1.33&apos;][&apos;GT1.33.1&apos;].toString() != &quot;&quot;) { gt1[index].livingDependency = seg[&apos;GT1.33&apos;][&apos;GT1.33.1&apos;]; }

		// GT1.34, ambulatoryStatus
		if (seg[&apos;GT1.34&apos;][&apos;GT1.34.1&apos;].toString() != &quot;&quot;) { gt1[index].ambulatoryStatus = seg[&apos;GT1.34&apos;][&apos;GT1.34.1&apos;]; }

		// GT1.35, citizenship
		if (seg[&apos;GT1.35&apos;][&apos;GT1.35.1&apos;].toString() != &quot;&quot;) { gt1[index].citizenship = seg[&apos;GT1.35&apos;][&apos;GT1.35.1&apos;]; }

		// GT1.36, primaryLanguage
		gt1[index].primaryLanguage = {};
		if (seg[&apos;GT1.36&apos;][&apos;GT1.36.1&apos;].toString() != &quot;&quot;) { gt1[index].primaryLanguage.id = seg[&apos;GT1.36&apos;][&apos;GT1.36.1&apos;]; }
		if (seg[&apos;GT1.36&apos;][&apos;GT1.36.2&apos;].toString() != &quot;&quot;) { gt1[index].primaryLanguage.text = seg[&apos;GT1.36&apos;][&apos;GT1.36.2&apos;]; }
		if (seg[&apos;GT1.36&apos;][&apos;GT1.36.3&apos;].toString() != &quot;&quot;) { gt1[index].primaryLanguage.codingSystem = seg[&apos;GT1.36&apos;][&apos;GT1.36.3&apos;]; }
		if (seg[&apos;GT1.36&apos;][&apos;GT1.36.4&apos;].toString() != &quot;&quot;) { gt1[index].primaryLanguage.altId = seg[&apos;GT1.36&apos;][&apos;GT1.36.4&apos;]; }
		if (seg[&apos;GT1.36&apos;][&apos;GT1.36.5&apos;].toString() != &quot;&quot;) { gt1[index].primaryLanguage.altText = seg[&apos;GT1.36&apos;][&apos;GT1.36.5&apos;]; }
		if (seg[&apos;GT1.36&apos;][&apos;GT1.36.6&apos;].toString() != &quot;&quot;) { gt1[index].primaryLanguage.altCodingSystem = seg[&apos;GT1.36&apos;][&apos;GT1.36.6&apos;]; }
		if (Object.keys(gt1[index].primaryLanguage).length == 0) {
			delete gt1[index].primaryLanguage;
		}

		// GT1.37, livingArrangement
		if (seg[&apos;GT1.37&apos;][&apos;GT1.37.1&apos;].toString() != &quot;&quot;) { gt1[index].livingArrangement = seg[&apos;GT1.37&apos;][&apos;GT1.37.1&apos;]; }

		// GT1.38, publicityIndicator
		gt1[index].publicityIndicator = {};
		if (seg[&apos;GT1.38&apos;][&apos;GT1.38.1&apos;].toString() != &quot;&quot;) { gt1[index].publicityIndicator.id = seg[&apos;GT1.38&apos;][&apos;GT1.38.1&apos;]; }
		if (seg[&apos;GT1.38&apos;][&apos;GT1.38.2&apos;].toString() != &quot;&quot;) { gt1[index].publicityIndicator.text = seg[&apos;GT1.38&apos;][&apos;GT1.38.2&apos;]; }
		if (seg[&apos;GT1.38&apos;][&apos;GT1.38.3&apos;].toString() != &quot;&quot;) { gt1[index].publicityIndicator.codingSystem = seg[&apos;GT1.38&apos;][&apos;GT1.38.3&apos;]; }
		if (seg[&apos;GT1.38&apos;][&apos;GT1.38.4&apos;].toString() != &quot;&quot;) { gt1[index].publicityIndicator.altId = seg[&apos;GT1.38&apos;][&apos;GT1.38.4&apos;]; }
		if (seg[&apos;GT1.38&apos;][&apos;GT1.38.5&apos;].toString() != &quot;&quot;) { gt1[index].publicityIndicator.altText = seg[&apos;GT1.38&apos;][&apos;GT1.38.5&apos;]; }
		if (seg[&apos;GT1.38&apos;][&apos;GT1.38.6&apos;].toString() != &quot;&quot;) { gt1[index].publicityIndicator.altCodingSystem = seg[&apos;GT1.38&apos;][&apos;GT1.38.6&apos;]; }
		if (Object.keys(gt1[index].publicityIndicator).length == 0) {
			delete gt1[index].publicityIndicator;
		}

		// GT1.39, protectionIndicator
		if (seg[&apos;GT1.39&apos;][&apos;GT1.39.1&apos;].toString() != &quot;&quot;) { gt1[index].protectionIndicator = seg[&apos;GT1.39&apos;][&apos;GT1.39.1&apos;]; }

		// GT1.40, studentIndicator
		if (seg[&apos;GT1.40&apos;][&apos;GT1.40.1&apos;].toString() != &quot;&quot;) { gt1[index].studentIndicator = seg[&apos;GT1.40&apos;][&apos;GT1.40.1&apos;]; }

		// GT1.41, religion
		if (seg[&apos;GT1.41&apos;][&apos;GT1.41.1&apos;].toString() != &quot;&quot;) { gt1[index].religion = seg[&apos;GT1.41&apos;][&apos;GT1.41.1&apos;]; }

		// GT1.42, mothersMaidenName
		gt1[index].mothersMaidenName = {};
		if (seg[&apos;GT1.42&apos;][&apos;GT1.42.1&apos;].toString() != &quot;&quot;) { gt1[index].mothersMaidenName.lastName = seg[&apos;GT1.42&apos;][&apos;GT1.42.1&apos;]; }
		if (seg[&apos;GT1.42&apos;][&apos;GT1.42.2&apos;].toString() != &quot;&quot;) { gt1[index].mothersMaidenName.firstName = seg[&apos;GT1.42&apos;][&apos;GT1.42.2&apos;]; }
		if (seg[&apos;GT1.42&apos;][&apos;GT1.42.3&apos;].toString() != &quot;&quot;) { gt1[index].mothersMaidenName.middleInitOrName = seg[&apos;GT1.42&apos;][&apos;GT1.42.3&apos;]; }
		if (seg[&apos;GT1.42&apos;][&apos;GT1.42.4&apos;].toString() != &quot;&quot;) { gt1[index].mothersMaidenName.suffix = seg[&apos;GT1.42&apos;][&apos;GT1.42.4&apos;]; }
		if (seg[&apos;GT1.42&apos;][&apos;GT1.42.5&apos;].toString() != &quot;&quot;) { gt1[index].mothersMaidenName.prefix = seg[&apos;GT1.42&apos;][&apos;GT1.42.5&apos;]; }
		if (seg[&apos;GT1.42&apos;][&apos;GT1.42.6&apos;].toString() != &quot;&quot;) { gt1[index].mothersMaidenName.degree = seg[&apos;GT1.42&apos;][&apos;GT1.42.6&apos;]; }
		if (seg[&apos;GT1.42&apos;][&apos;GT1.42.7&apos;].toString() != &quot;&quot;) { gt1[index].mothersMaidenName.nameTypeCode = seg[&apos;GT1.42&apos;][&apos;GT1.42.7&apos;]; }
		if (Object.keys(gt1[index].mothersMaidenName).length == 0) {
			delete gt1[index].mothersMaidenName;
		}

		// GT1.43, nationality
		gt1[index].nationality = {};
		if (seg[&apos;GT1.43&apos;][&apos;GT1.43.1&apos;].toString() != &quot;&quot;) { gt1[index].nationality.id = seg[&apos;GT1.43&apos;][&apos;GT1.43.1&apos;]; }
		if (seg[&apos;GT1.43&apos;][&apos;GT1.43.2&apos;].toString() != &quot;&quot;) { gt1[index].nationality.text = seg[&apos;GT1.43&apos;][&apos;GT1.43.2&apos;]; }
		if (seg[&apos;GT1.43&apos;][&apos;GT1.43.3&apos;].toString() != &quot;&quot;) { gt1[index].nationality.codingSystem = seg[&apos;GT1.43&apos;][&apos;GT1.43.3&apos;]; }
		if (seg[&apos;GT1.43&apos;][&apos;GT1.43.4&apos;].toString() != &quot;&quot;) { gt1[index].nationality.altId = seg[&apos;GT1.43&apos;][&apos;GT1.43.4&apos;]; }
		if (seg[&apos;GT1.43&apos;][&apos;GT1.43.5&apos;].toString() != &quot;&quot;) { gt1[index].nationality.altText = seg[&apos;GT1.43&apos;][&apos;GT1.43.5&apos;]; }
		if (seg[&apos;GT1.43&apos;][&apos;GT1.43.6&apos;].toString() != &quot;&quot;) { gt1[index].nationality.altCodingSystem = seg[&apos;GT1.43&apos;][&apos;GT1.43.6&apos;]; }
		if (Object.keys(gt1[index].nationality).length == 0) {
			delete gt1[index].nationality;
		}

		// GT1.44, ethnicGroup
		if (seg[&apos;GT1.44&apos;][&apos;GT1.44.1&apos;].toString() != &quot;&quot;) { gt1[index].ethnicGroup = seg[&apos;GT1.44&apos;][&apos;GT1.44.1&apos;]; }

		// GT1.45, contactPersonsName
		gt1[index].contactPersonsName = [];
		for each (field in seg[&apos;GT1.45&apos;]) {
			var block = {};
			if (field[&apos;GT1.45.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;GT1.45.1&apos;]; }
			if (field[&apos;GT1.45.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;GT1.45.2&apos;]; }
			if (field[&apos;GT1.45.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;GT1.45.3&apos;]; }
			if (field[&apos;GT1.45.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;GT1.45.4&apos;]; }
			if (field[&apos;GT1.45.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;GT1.45.5&apos;]; }
			if (field[&apos;GT1.45.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;GT1.45.6&apos;]; }
			if (field[&apos;GT1.45.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;GT1.45.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].contactPersonsName.push(block);
			}	
		}
		if (gt1[index].contactPersonsName.length == 0) {
			delete gt1[index].contactPersonsName;
		}

		// GT1.46, contactPersonsTelephoneNumber
		gt1[index].contactPersonsTelephoneNumber = [];
		for each (field in seg[&apos;GT1.46&apos;]) {
			var block = {};
			if (field[&apos;GT1.46.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;GT1.46.1&apos;]; }
			if (field[&apos;GT1.46.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;GT1.46.2&apos;]; }
			if (field[&apos;GT1.46.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;GT1.46.3&apos;]; }
			if (field[&apos;GT1.46.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;GT1.46.4&apos;]; }
			if (field[&apos;GT1.46.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;GT1.46.5&apos;]; }
			if (field[&apos;GT1.46.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;GT1.46.6&apos;]; }
			if (field[&apos;GT1.46.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;GT1.46.7&apos;]; }
			if (field[&apos;GT1.46.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;GT1.46.8&apos;]; }
			if (field[&apos;GT1.46.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;GT1.46.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].contactPersonsTelephoneNumber.push(block);
			}
		}
		if (gt1[index].contactPersonsTelephoneNumber.length == 0) {
			delete gt1[index].contactPersonsTelephoneNumber;
		}

		// GT1.47, contactReason
		gt1[index].contactReason = {};
		if (seg[&apos;GT1.47&apos;][&apos;GT1.47.1&apos;].toString() != &quot;&quot;) { gt1[index].contactReason.id = seg[&apos;GT1.47&apos;][&apos;GT1.47.1&apos;]; }
		if (seg[&apos;GT1.47&apos;][&apos;GT1.47.2&apos;].toString() != &quot;&quot;) { gt1[index].contactReason.text = seg[&apos;GT1.47&apos;][&apos;GT1.47.2&apos;]; }
		if (seg[&apos;GT1.47&apos;][&apos;GT1.47.3&apos;].toString() != &quot;&quot;) { gt1[index].contactReason.codingSystem = seg[&apos;GT1.47&apos;][&apos;GT1.47.3&apos;]; }
		if (seg[&apos;GT1.47&apos;][&apos;GT1.47.4&apos;].toString() != &quot;&quot;) { gt1[index].contactReason.altId = seg[&apos;GT1.47&apos;][&apos;GT1.47.4&apos;]; }
		if (seg[&apos;GT1.47&apos;][&apos;GT1.47.5&apos;].toString() != &quot;&quot;) { gt1[index].contactReason.altText = seg[&apos;GT1.47&apos;][&apos;GT1.47.5&apos;]; }
		if (seg[&apos;GT1.47&apos;][&apos;GT1.47.6&apos;].toString() != &quot;&quot;) { gt1[index].contactReason.altCodingSystem = seg[&apos;GT1.47&apos;][&apos;GT1.47.6&apos;]; }
		if (Object.keys(gt1[index].contactReason).length == 0) {
			delete gt1[index].contactReason;
		}

		// GT1.48, contactRelationship
		if (seg[&apos;GT1.48&apos;][&apos;GT1.48.1&apos;].toString() != &quot;&quot;) { gt1[index].contactRelationship = seg[&apos;GT1.48&apos;][&apos;GT1.48.1&apos;]; }

		// GT1.49, jobTitle
		if (seg[&apos;GT1.49&apos;][&apos;GT1.49.1&apos;].toString() != &quot;&quot;) { gt1[index].jobTitle = seg[&apos;GT1.49&apos;][&apos;GT1.49.1&apos;]; }

		// GT1.50, jobCodeClass
		gt1[index].jobCodeClass = {};
		if (seg[&apos;GT1.50&apos;][&apos;GT1.50.1&apos;].toString() != &quot;&quot;) { gt1[index].jobCodeClass.id = seg[&apos;GT1.50&apos;][&apos;GT1.50.1&apos;]; }
		if (seg[&apos;GT1.50&apos;][&apos;GT1.50.1&apos;].toString() != &quot;&quot;) { gt1[index].jobCodeClass.id = seg[&apos;GT1.50&apos;][&apos;GT1.50.1&apos;]; }
		if (Object.keys(gt1[index].jobCodeClass).length == 0) {
			delete gt1[index].jobCodeClass;
		}

		// GT1.51, guarantorEmployersOrganization
		gt1[index].guarantorEmployersOrganization = [];
		for each (field in seg[&apos;GT1.51&apos;]) {
			var block = {};
			if (field[&apos;GT1.51.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;GT1.51.1&apos;]; }
			if (field[&apos;GT1.51.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;GT1.51.2&apos;]; }
			if (field[&apos;GT1.51.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;GT1.51.3&apos;]; }
			if (field[&apos;GT1.51.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;GT1.51.4&apos;]; }
			if (field[&apos;GT1.51.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;GT1.51.5&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;GT1.51.6&apos;][&apos;GT1.51.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.51.6&apos;][&apos;GT1.51.6.1&apos;]; }
			if (field[&apos;GT1.51.6&apos;][&apos;GT1.51.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;GT1.51.6&apos;][&apos;GT1.51.6.2&apos;]; }
			if (field[&apos;GT1.51.6&apos;][&apos;GT1.51.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;GT1.51.6&apos;][&apos;GT1.51.6.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;GT1.51.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.51.6&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;GT1.51.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;GT1.51.7&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;GT1.51.8&apos;][&apos;GT1.51.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.51.8&apos;][&apos;GT1.51.8.1&apos;]; }
			if (field[&apos;GT1.51.8&apos;][&apos;GT1.51.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;GT1.51.8&apos;][&apos;GT1.51.8.2&apos;]; }
			if (field[&apos;GT1.51.8&apos;][&apos;GT1.51.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;GT1.51.8&apos;][&apos;GT1.51.8.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;GT1.51.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.51.8&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorEmployersOrganization.push(block);
			}
		}
		if (gt1[index].guarantorEmployersOrganization.length == 0) {
			delete gt1[index].guarantorEmployersOrganization;
		}
		// GT1.52, handicap
		if (seg[&apos;GT1.52&apos;][&apos;GT1.52.1&apos;].toString() != &quot;&quot;) { gt1[index].handicap = seg[&apos;GT1.52&apos;][&apos;GT1.52.1&apos;]; }

		// GT1.53, jobStatus
		if (seg[&apos;GT1.53&apos;][&apos;GT1.53.1&apos;].toString() != &quot;&quot;) { gt1[index].jobStatus = seg[&apos;GT1.53&apos;][&apos;GT1.53.1&apos;]; }

		// GT1.54, guarantorFinancialClass
		gt1[index].guarantorFinancialClass = {};
		if (seg[&apos;GT1.54&apos;][&apos;GT1.54.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorFinancialClass.financialClass = seg[&apos;GT1.54&apos;][&apos;GT1.54.1&apos;]; }
		if (seg[&apos;GT1.54&apos;][&apos;GT1.54.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorFinancialClass.effectiveDate = seg[&apos;GT1.54&apos;][&apos;GT1.54.1&apos;]; }
		if (Object.keys(gt1[index].guarantorFinancialClass).length == 0) {
			delete gt1[index].guarantorFinancialClass;
		}

		// GT1.55, guarantorRace
		if (seg[&apos;GT1.55&apos;][&apos;GT1.55.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorRace = seg[&apos;GT1.55&apos;][&apos;GT1.55.1&apos;]; }

		// clean up GT1 and increment index
		if (Object.keys(gt1[index]).length == 0) {
			delete gt1[index];
		} else {
			index++;
		}
	}
}

// Optional: save a copy of the completed GT1 segment for reference later
//channelMap.put(&quot;gt1&quot;, gt1); // uncomment to save

// If it has content, add the GT1 segment to the hl7JSON object
if (gt1 &amp;&amp; Object.keys(gt1).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.GT1 = gt1;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// GT1
var gt1;
if (msg[&apos;GT1&apos;].length() &gt; 0) {
	gt1 = [];
	var index = 0;
	for each (seg in msg[&apos;GT1&apos;]) {
		gt1[index] = {};

		// GT1.1, setId
		if (seg[&apos;GT1.1&apos;][&apos;GT1.1.1&apos;].toString() != &quot;&quot;) { gt1[index].setId = seg[&apos;GT1.1&apos;][&apos;GT1.1.1&apos;]; }

		// GT1.2, guarantorNumber
		gt1[index].guarantorNumber = [];
		for each (field in seg[&apos;GT1.2&apos;]) {
			var block = {};
			if (field[&apos;GT1.2.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;GT1.2.1&apos;]; }
			if (field[&apos;GT1.2.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;GT1.2.2&apos;]; }
			if (field[&apos;GT1.2.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;GT1.2.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;GT1.2.4&apos;][&apos;GT1.2.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.2.4&apos;][&apos;GT1.2.4.1&apos;]; }
			if (field[&apos;GT1.2.4&apos;][&apos;GT1.2.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;GT1.2.4&apos;][&apos;GT1.2.4.2&apos;]; }
			if (field[&apos;GT1.2.4&apos;][&apos;GT1.2.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;GT1.2.4&apos;][&apos;GT1.2.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;GT1.2.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.2.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;GT1.2.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;GT1.2.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;GT1.2.6&apos;][&apos;GT1.2.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.2.6&apos;][&apos;GT1.2.6.1&apos;]; }
			if (field[&apos;GT1.2.6&apos;][&apos;GT1.2.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;GT1.2.6&apos;][&apos;GT1.2.6.2&apos;]; }
			if (field[&apos;GT1.2.6&apos;][&apos;GT1.2.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;GT1.2.6&apos;][&apos;GT1.2.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;GT1.2.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.2.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorNumber.push(block);
			}
		}
		if (Object.keys(gt1[index].guarantorNumber).length == 0) {
			delete gt1[index].guarantorNumber;
		}

		// GT1.3, guarantorName
		gt1[index].guarantorName = [];
		for each (field in seg[&apos;GT1.3&apos;]) {
			var block = {};
			if (field[&apos;GT1.3.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;GT1.3.1&apos;]; }
			if (field[&apos;GT1.3.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;GT1.3.2&apos;]; }
			if (field[&apos;GT1.3.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;GT1.3.3&apos;]; }
			if (field[&apos;GT1.3.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;GT1.3.4&apos;]; }
			if (field[&apos;GT1.3.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;GT1.3.5&apos;]; }
			if (field[&apos;GT1.3.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;GT1.3.6&apos;]; }
			if (field[&apos;GT1.3.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;GT1.3.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorName.push(block);
			}	
		}
		if (gt1[index].guarantorName.length == 0) {
			delete gt1[index].guarantorName;
		}

		// GT1.4, guarantorSpouseName
		gt1[index].guarantorSpouseName = [];
		for each (field in seg[&apos;GT1.4&apos;]) {
			var block = {};
			if (field[&apos;GT1.4.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;GT1.4.1&apos;]; }
			if (field[&apos;GT1.4.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;GT1.4.2&apos;]; }
			if (field[&apos;GT1.4.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;GT1.4.3&apos;]; }
			if (field[&apos;GT1.4.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;GT1.4.4&apos;]; }
			if (field[&apos;GT1.4.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;GT1.4.5&apos;]; }
			if (field[&apos;GT1.4.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;GT1.4.6&apos;]; }
			if (field[&apos;GT1.4.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;GT1.4.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorSpouseName.push(block);
			}	
		}
		if (gt1[index].guarantorSpouseName.length == 0) {
			delete gt1[index].guarantorSpouseName;
		}

		// GT1.5, guarantorAddress
		gt1[index].guarantorAddress = [];
		for each (field in seg[&apos;GT1.5&apos;]) {
			var block = {};
			if (field[&apos;GT1.5.1&apos;].toString() != &quot;&quot;) { block.streetAddress = field[&apos;GT1.5.1&apos;]; }
			if (field[&apos;GT1.5.2&apos;].toString() != &quot;&quot;) { block.otherDesignation = field[&apos;GT1.5.2&apos;]; }
			if (field[&apos;GT1.5.3&apos;].toString() != &quot;&quot;) { block.city = field[&apos;GT1.5.3&apos;]; }
			if (field[&apos;GT1.5.4&apos;].toString() != &quot;&quot;) { block.stateOrProvince = field[&apos;GT1.5.4&apos;]; }
			if (field[&apos;GT1.5.5&apos;].toString() != &quot;&quot;) { block.zip = field[&apos;GT1.5.5&apos;]; }
			if (field[&apos;GT1.5.6&apos;].toString() != &quot;&quot;) { block.country = field[&apos;GT1.5.6&apos;]; }
			if (field[&apos;GT1.5.7&apos;].toString() != &quot;&quot;) { block.addressType = field[&apos;GT1.5.7&apos;]; }
			if (field[&apos;GT1.5.8&apos;].toString() != &quot;&quot;) { block.otherGeographicDesignation = field[&apos;GT1.5.8&apos;]; }
			if (field[&apos;GT1.5.9&apos;].toString() != &quot;&quot;) { block.countyOrParishCode = field[&apos;GT1.5.9&apos;]; }
			if (field[&apos;GT1.5.10&apos;].toString() != &quot;&quot;) { block.censusTract = field[&apos;GT1.5.10&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorAddress.push(block);
			}
		}
		if (gt1[index].guarantorAddress.length == 0) {
			delete gt1[index].guarantorAddress;
		}

		// GT1.6, guarantorPhNumHome
		gt1[index].guarantorPhNumHome = [];
		for each (field in seg[&apos;GT1.6&apos;]) {
			var block = {};
			if (field[&apos;GT1.6.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;GT1.6.1&apos;]; }
			if (field[&apos;GT1.6.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;GT1.6.2&apos;]; }
			if (field[&apos;GT1.6.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;GT1.6.3&apos;]; }
			if (field[&apos;GT1.6.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;GT1.6.4&apos;]; }
			if (field[&apos;GT1.6.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;GT1.6.5&apos;]; }
			if (field[&apos;GT1.6.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;GT1.6.6&apos;]; }
			if (field[&apos;GT1.6.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;GT1.6.7&apos;]; }
			if (field[&apos;GT1.6.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;GT1.6.8&apos;]; }
			if (field[&apos;GT1.6.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;GT1.6.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorPhNumHome.push(block);
			}
		}
		if (gt1[index].guarantorPhNumHome.length == 0) {
			delete gt1[index].guarantorPhNumHome;
		}

		// GT1.7, guarantorPhNumBusiness
		gt1[index].guarantorPhNumBusiness = [];
		for each (field in seg[&apos;GT1.7&apos;]) {
			var block = {};
			if (field[&apos;GT1.7.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;GT1.7.1&apos;]; }
			if (field[&apos;GT1.7.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;GT1.7.2&apos;]; }
			if (field[&apos;GT1.7.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;GT1.7.3&apos;]; }
			if (field[&apos;GT1.7.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;GT1.7.4&apos;]; }
			if (field[&apos;GT1.7.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;GT1.7.5&apos;]; }
			if (field[&apos;GT1.7.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;GT1.7.6&apos;]; }
			if (field[&apos;GT1.7.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;GT1.7.7&apos;]; }
			if (field[&apos;GT1.7.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;GT1.7.8&apos;]; }
			if (field[&apos;GT1.7.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;GT1.7.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorPhNumBusiness.push(block);
			}
		}
		if (gt1[index].guarantorPhNumBusiness.length == 0) {
			delete gt1[index].guarantorPhNumBusiness;
		}

		// GT1.8, guarantorDatetimeOfBirth
		if (seg[&apos;GT1.8&apos;][&apos;GT1.8.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorDatetimeOfBirth = seg[&apos;GT1.8&apos;][&apos;GT1.8.1&apos;]; }

		// GT1.9, guarantorSex
		if (seg[&apos;GT1.9&apos;][&apos;GT1.9.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorSex = seg[&apos;GT1.9&apos;][&apos;GT1.9.1&apos;]; }

		// GT1.10, guarantorType
		if (seg[&apos;GT1.10&apos;][&apos;GT1.10.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorType = seg[&apos;GT1.10&apos;][&apos;GT1.10.1&apos;]; }

		// GT1.11, guarantorRelationship
		if (seg[&apos;GT1.11&apos;][&apos;GT1.11.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorRelationship = seg[&apos;GT1.11&apos;][&apos;GT1.11.1&apos;]; }

		// GT1.12, guarantorSSN
		if (seg[&apos;GT1.12&apos;][&apos;GT1.12.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorSSN = seg[&apos;GT1.12&apos;][&apos;GT1.12.1&apos;]; }

		// GT1.13, guarantorDateBegin
		if (seg[&apos;GT1.13&apos;][&apos;GT1.13.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorDateBegin = seg[&apos;GT1.13&apos;][&apos;GT1.13.1&apos;]; }

		// GT1.14, guarantorDateEnd
		if (seg[&apos;GT1.14&apos;][&apos;GT1.14.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorDateEnd = seg[&apos;GT1.14&apos;][&apos;GT1.14.1&apos;]; }

		// GT1.15, guarantorPriority
		if (seg[&apos;GT1.15&apos;][&apos;GT1.15.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorPriority = seg[&apos;GT1.15&apos;][&apos;GT1.15.1&apos;]; }

		// GT1.16, guarantorEmployerName
		gt1[index].guarantorEmployerName = [];
		for each (field in seg[&apos;GT1.16&apos;]) {
			var block = {};
			if (field[&apos;GT1.16.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;GT1.16.1&apos;]; }
			if (field[&apos;GT1.16.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;GT1.16.2&apos;]; }
			if (field[&apos;GT1.16.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;GT1.16.3&apos;]; }
			if (field[&apos;GT1.16.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;GT1.16.4&apos;]; }
			if (field[&apos;GT1.16.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;GT1.16.5&apos;]; }
			if (field[&apos;GT1.16.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;GT1.16.6&apos;]; }
			if (field[&apos;GT1.16.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;GT1.16.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorEmployerName.push(block);
			}	
		}
		if (gt1[index].guarantorEmployerName.length == 0) {
			delete gt1[index].guarantorEmployerName;
		}

		// GT1.17, guarantorEmployerAddress
		gt1[index].guarantorEmployerAddress = [];
		for each (field in seg[&apos;GT1.17&apos;]) {
			var block = {};
			if (field[&apos;GT1.17.1&apos;].toString() != &quot;&quot;) { block.streetAddress = field[&apos;GT1.17.1&apos;]; }
			if (field[&apos;GT1.17.2&apos;].toString() != &quot;&quot;) { block.otherDesignation = field[&apos;GT1.17.2&apos;]; }
			if (field[&apos;GT1.17.3&apos;].toString() != &quot;&quot;) { block.city = field[&apos;GT1.17.3&apos;]; }
			if (field[&apos;GT1.17.4&apos;].toString() != &quot;&quot;) { block.stateOrProvince = field[&apos;GT1.17.4&apos;]; }
			if (field[&apos;GT1.17.5&apos;].toString() != &quot;&quot;) { block.zip = field[&apos;GT1.17.5&apos;]; }
			if (field[&apos;GT1.17.6&apos;].toString() != &quot;&quot;) { block.country = field[&apos;GT1.17.6&apos;]; }
			if (field[&apos;GT1.17.7&apos;].toString() != &quot;&quot;) { block.addressType = field[&apos;GT1.17.7&apos;]; }
			if (field[&apos;GT1.17.8&apos;].toString() != &quot;&quot;) { block.otherGeographicDesignation = field[&apos;GT1.17.8&apos;]; }
			if (field[&apos;GT1.17.9&apos;].toString() != &quot;&quot;) { block.countyOrParishCode = field[&apos;GT1.17.9&apos;]; }
			if (field[&apos;GT1.17.10&apos;].toString() != &quot;&quot;) { block.censusTract = field[&apos;GT1.17.10&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorEmployerAddress.push(block);
			}
		}
		if (gt1[index].guarantorEmployerAddress.length == 0) {
			delete gt1[index].guarantorEmployerAddress;
		}

		// GT1.18, guarantorEmployerPhoneNumber
		gt1[index].guarantorEmployerPhoneNumber = [];
		for each (field in seg[&apos;GT1.18&apos;]) {
			var block = {};
			if (field[&apos;GT1.18.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;GT1.18.1&apos;]; }
			if (field[&apos;GT1.18.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;GT1.18.2&apos;]; }
			if (field[&apos;GT1.18.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;GT1.18.3&apos;]; }
			if (field[&apos;GT1.18.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;GT1.18.4&apos;]; }
			if (field[&apos;GT1.18.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;GT1.18.5&apos;]; }
			if (field[&apos;GT1.18.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;GT1.18.6&apos;]; }
			if (field[&apos;GT1.18.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;GT1.18.7&apos;]; }
			if (field[&apos;GT1.18.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;GT1.18.8&apos;]; }
			if (field[&apos;GT1.18.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;GT1.18.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorEmployerPhoneNumber.push(block);
			}
		}
		if (gt1[index].guarantorEmployerPhoneNumber.length == 0) {
			delete gt1[index].guarantorEmployerPhoneNumber;
		}

		// GT1.19, guarantorEmployeeIDNumber
		gt1[index].guarantorEmployeeIDNumber = [];
		for each (field in seg[&apos;GT1.19&apos;]) {
			var block = {};
			if (field[&apos;GT1.19.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;GT1.19.1&apos;]; }
			if (field[&apos;GT1.19.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;GT1.19.2&apos;]; }
			if (field[&apos;GT1.19.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;GT1.19.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;GT1.19.4&apos;][&apos;GT1.19.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.19.4&apos;][&apos;GT1.19.4.1&apos;]; }
			if (field[&apos;GT1.19.4&apos;][&apos;GT1.19.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;GT1.19.4&apos;][&apos;GT1.19.4.2&apos;]; }
			if (field[&apos;GT1.19.4&apos;][&apos;GT1.19.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;GT1.19.4&apos;][&apos;GT1.19.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;GT1.19.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.19.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;GT1.19.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;GT1.19.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;GT1.19.6&apos;][&apos;GT1.19.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.19.6&apos;][&apos;GT1.19.6.1&apos;]; }
			if (field[&apos;GT1.19.6&apos;][&apos;GT1.19.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;GT1.19.6&apos;][&apos;GT1.19.6.2&apos;]; }
			if (field[&apos;GT1.19.6&apos;][&apos;GT1.19.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;GT1.19.6&apos;][&apos;GT1.19.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;GT1.19.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.19.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorEmployeeIDNumber.push(block);
			}
		}
		if (gt1[index].guarantorEmployeeIDNumber.length == 0) {
			delete gt1[index].guarantorEmployeeIDNumber;
		}

		// GT1.20, guarantorEmploymentStatus
		if (seg[&apos;GT1.20&apos;][&apos;GT1.20.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorEmploymentStatus = seg[&apos;GT1.20&apos;][&apos;GT1.20.1&apos;]; }

		// GT1.21, guarantorOrganizationName
		gt1[index].guarantorOrganizationName = [];
		for each (field in seg[&apos;GT1.21&apos;]) {
			var block = {};
			if (field[&apos;GT1.21.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;GT1.21.1&apos;]; }
			if (field[&apos;GT1.21.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;GT1.21.2&apos;]; }
			if (field[&apos;GT1.21.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;GT1.21.3&apos;]; }
			if (field[&apos;GT1.21.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;GT1.21.4&apos;]; }
			if (field[&apos;GT1.21.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;GT1.21.5&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;GT1.21.6&apos;][&apos;GT1.21.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.21.6&apos;][&apos;GT1.21.6.1&apos;]; }
			if (field[&apos;GT1.21.6&apos;][&apos;GT1.21.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;GT1.21.6&apos;][&apos;GT1.21.6.2&apos;]; }
			if (field[&apos;GT1.21.6&apos;][&apos;GT1.21.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;GT1.21.6&apos;][&apos;GT1.21.6.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;GT1.21.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.21.6&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;GT1.21.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;GT1.21.7&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;GT1.21.8&apos;][&apos;GT1.21.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.21.8&apos;][&apos;GT1.21.8.1&apos;]; }
			if (field[&apos;GT1.21.8&apos;][&apos;GT1.21.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;GT1.21.8&apos;][&apos;GT1.21.8.2&apos;]; }
			if (field[&apos;GT1.21.8&apos;][&apos;GT1.21.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;GT1.21.8&apos;][&apos;GT1.21.8.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;GT1.21.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.21.8&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorOrganizationName.push(block);
			}
		}
		if (gt1[index].guarantorOrganizationName.length == 0) {
			delete gt1[index].guarantorOrganizationName;
		}

		// GT1.22, guarantorBillingHoldFlag
		if (seg[&apos;GT1.22&apos;][&apos;GT1.22.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorBillingHoldFlag = seg[&apos;GT1.22&apos;][&apos;GT1.22.1&apos;]; }

		// GT1.23, guarantorCreditRatingCode
		gt1[index].guarantorCreditRatingCode = {};
		if (seg[&apos;GT1.23&apos;][&apos;GT1.23.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorCreditRatingCode.id = seg[&apos;GT1.23&apos;][&apos;GT1.23.1&apos;]; }
		if (seg[&apos;GT1.23&apos;][&apos;GT1.23.2&apos;].toString() != &quot;&quot;) { gt1[index].guarantorCreditRatingCode.text = seg[&apos;GT1.23&apos;][&apos;GT1.23.2&apos;]; }
		if (seg[&apos;GT1.23&apos;][&apos;GT1.23.3&apos;].toString() != &quot;&quot;) { gt1[index].guarantorCreditRatingCode.codingSystem = seg[&apos;GT1.23&apos;][&apos;GT1.23.3&apos;]; }
		if (seg[&apos;GT1.23&apos;][&apos;GT1.23.4&apos;].toString() != &quot;&quot;) { gt1[index].guarantorCreditRatingCode.altId = seg[&apos;GT1.23&apos;][&apos;GT1.23.4&apos;]; }
		if (seg[&apos;GT1.23&apos;][&apos;GT1.23.5&apos;].toString() != &quot;&quot;) { gt1[index].guarantorCreditRatingCode.altText = seg[&apos;GT1.23&apos;][&apos;GT1.23.5&apos;]; }
		if (seg[&apos;GT1.23&apos;][&apos;GT1.23.6&apos;].toString() != &quot;&quot;) { gt1[index].guarantorCreditRatingCode.altCodingSystem = seg[&apos;GT1.23&apos;][&apos;GT1.23.6&apos;]; }
		if (Object.keys(gt1[index].guarantorCreditRatingCode).length == 0) {
			delete gt1[index].guarantorCreditRatingCode;
		}

		// GT1.24, guarantorDeathDateAndTime
		if (seg[&apos;GT1.24&apos;][&apos;GT1.24.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorDeathDateAndTime = seg[&apos;GT1.24&apos;][&apos;GT1.24.1&apos;]; }

		// GT1.25, guarantorDeathFlag
		if (seg[&apos;GT1.25&apos;][&apos;GT1.25.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorDeathFlag = seg[&apos;GT1.25&apos;][&apos;GT1.25.1&apos;]; }

		// GT1.26, guarantorChargeAdjustmentCode
		gt1[index].guarantorChargeAdjustmentCode = {};
		if (seg[&apos;GT1.26&apos;][&apos;GT1.26.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorChargeAdjustmentCode.id = seg[&apos;GT1.26&apos;][&apos;GT1.26.1&apos;]; }
		if (seg[&apos;GT1.26&apos;][&apos;GT1.26.2&apos;].toString() != &quot;&quot;) { gt1[index].guarantorChargeAdjustmentCode.text = seg[&apos;GT1.26&apos;][&apos;GT1.26.2&apos;]; }
		if (seg[&apos;GT1.26&apos;][&apos;GT1.26.3&apos;].toString() != &quot;&quot;) { gt1[index].guarantorChargeAdjustmentCode.codingSystem = seg[&apos;GT1.26&apos;][&apos;GT1.26.3&apos;]; }
		if (seg[&apos;GT1.26&apos;][&apos;GT1.26.4&apos;].toString() != &quot;&quot;) { gt1[index].guarantorChargeAdjustmentCode.altId = seg[&apos;GT1.26&apos;][&apos;GT1.26.4&apos;]; }
		if (seg[&apos;GT1.26&apos;][&apos;GT1.26.5&apos;].toString() != &quot;&quot;) { gt1[index].guarantorChargeAdjustmentCode.altText = seg[&apos;GT1.26&apos;][&apos;GT1.26.5&apos;]; }
		if (seg[&apos;GT1.26&apos;][&apos;GT1.26.6&apos;].toString() != &quot;&quot;) { gt1[index].guarantorChargeAdjustmentCode.altCodingSystem = seg[&apos;GT1.26&apos;][&apos;GT1.26.6&apos;]; }
		if (Object.keys(gt1[index].guarantorChargeAdjustmentCode).length == 0) {
			delete gt1[index].guarantorChargeAdjustmentCode;
		}

		// GT1.27, guarantorHouseholdAnnualIncome
		gt1[index].guarantorHouseholdAnnualIncome = {};
		gt1[index].guarantorHouseholdAnnualIncome.price = {};
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.1&apos;][&apos;GT1.27.1.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.price.quantity = seg[&apos;GT1.27&apos;][&apos;GT1.27.1&apos;][&apos;GT1.27.1.1&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.1&apos;][&apos;GT1.27.1.2&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.price.denomination = seg[&apos;GT1.27&apos;][&apos;GT1.27.1&apos;][&apos;GT1.27.1.2&apos;]; }
		if (Object.keys(gt1[index].guarantorHouseholdAnnualIncome.price).length == 0) {
			if (seg[&apos;GT1.27&apos;][&apos;GT1.27.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.price.quantity = seg[&apos;GT1.27&apos;][&apos;GT1.27.1&apos;]; }
			else delete gt1[index].guarantorHouseholdAnnualIncome.price;
		}
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.2&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.priceType = seg[&apos;GT1.27&apos;][&apos;GT1.27.2&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.3&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.fromValue = seg[&apos;GT1.27&apos;][&apos;GT1.27.3&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.4&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.toValue = seg[&apos;GT1.27&apos;][&apos;GT1.27.4&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.5&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.rangeUnits = seg[&apos;GT1.27&apos;][&apos;GT1.27.5&apos;]; }
		gt1[index].guarantorHouseholdAnnualIncome.rangeType = {};
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.rangeType.id = seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.1&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.2&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.rangeType.text = seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.2&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.3&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.rangeType.codingSystem = seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.3&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.4&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.rangeType.altId = seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.4&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.5&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.rangeType.altText = seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.5&apos;]; }
		if (seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.6&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.rangeType.altCodingSystem = seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;][&apos;GT1.27.6.6&apos;]; }
		if (Object.keys(gt1[index].guarantorHouseholdAnnualIncome.rangeType).length == 0) {
			if (seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdAnnualIncome.rangeType.id = seg[&apos;GT1.27&apos;][&apos;GT1.27.6&apos;]; }
			else delete gt1[index].guarantorHouseholdAnnualIncome.rangeType;
		}
		if (Object.keys(gt1[index].guarantorHouseholdAnnualIncome).length == 0) {
			delete gt1[index].guarantorHouseholdAnnualIncome;
		}

		// GT1.28, guarantorHouseholdSize
		if (seg[&apos;GT1.28&apos;][&apos;GT1.28.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHouseholdSize = seg[&apos;GT1.28&apos;][&apos;GT1.28.1&apos;]; }

		// GT1.29, guarantorEmployerIDNumber
		gt1[index].guarantorEmployerIDNumber = [];
		for each (field in seg[&apos;GT1.29&apos;]) {
			var block = {};
			if (field[&apos;GT1.29.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;GT1.29.1&apos;]; }
			if (field[&apos;GT1.29.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;GT1.29.2&apos;]; }
			if (field[&apos;GT1.29.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;GT1.29.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;GT1.29.4&apos;][&apos;GT1.29.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.29.4&apos;][&apos;GT1.29.4.1&apos;]; }
			if (field[&apos;GT1.29.4&apos;][&apos;GT1.29.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;GT1.29.4&apos;][&apos;GT1.29.4.2&apos;]; }
			if (field[&apos;GT1.29.4&apos;][&apos;GT1.29.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;GT1.29.4&apos;][&apos;GT1.29.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;GT1.29.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.29.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;GT1.29.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;GT1.29.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;GT1.29.6&apos;][&apos;GT1.29.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.29.6&apos;][&apos;GT1.29.6.1&apos;]; }
			if (field[&apos;GT1.29.6&apos;][&apos;GT1.29.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;GT1.29.6&apos;][&apos;GT1.29.6.2&apos;]; }
			if (field[&apos;GT1.29.6&apos;][&apos;GT1.29.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;GT1.29.6&apos;][&apos;GT1.29.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;GT1.29.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.29.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorEmployerIDNumber.push(block);
			}
		}
		if (gt1[index].guarantorEmployerIDNumber.length == 0) {
			delete gt1[index].guarantorEmployerIDNumber;
		}

		// GT1.30, guarantorMaritalStatusCode
		if (seg[&apos;GT1.30&apos;][&apos;GT1.30.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorMaritalStatusCode = seg[&apos;GT1.30&apos;][&apos;GT1.30.1&apos;]; }

		// GT1.31, guarantorHireEffectiveDate
		if (seg[&apos;GT1.31&apos;][&apos;GT1.31.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorHireEffectiveDate = seg[&apos;GT1.31&apos;][&apos;GT1.31.1&apos;]; }

		// GT1.32, employmentStopDate
		if (seg[&apos;GT1.32&apos;][&apos;GT1.32.1&apos;].toString() != &quot;&quot;) { gt1[index].employmentStopDate = seg[&apos;GT1.32&apos;][&apos;GT1.32.1&apos;]; }

		// GT1.33, livingDependency
		if (seg[&apos;GT1.33&apos;][&apos;GT1.33.1&apos;].toString() != &quot;&quot;) { gt1[index].livingDependency = seg[&apos;GT1.33&apos;][&apos;GT1.33.1&apos;]; }

		// GT1.34, ambulatoryStatus
		if (seg[&apos;GT1.34&apos;][&apos;GT1.34.1&apos;].toString() != &quot;&quot;) { gt1[index].ambulatoryStatus = seg[&apos;GT1.34&apos;][&apos;GT1.34.1&apos;]; }

		// GT1.35, citizenship
		if (seg[&apos;GT1.35&apos;][&apos;GT1.35.1&apos;].toString() != &quot;&quot;) { gt1[index].citizenship = seg[&apos;GT1.35&apos;][&apos;GT1.35.1&apos;]; }

		// GT1.36, primaryLanguage
		gt1[index].primaryLanguage = {};
		if (seg[&apos;GT1.36&apos;][&apos;GT1.36.1&apos;].toString() != &quot;&quot;) { gt1[index].primaryLanguage.id = seg[&apos;GT1.36&apos;][&apos;GT1.36.1&apos;]; }
		if (seg[&apos;GT1.36&apos;][&apos;GT1.36.2&apos;].toString() != &quot;&quot;) { gt1[index].primaryLanguage.text = seg[&apos;GT1.36&apos;][&apos;GT1.36.2&apos;]; }
		if (seg[&apos;GT1.36&apos;][&apos;GT1.36.3&apos;].toString() != &quot;&quot;) { gt1[index].primaryLanguage.codingSystem = seg[&apos;GT1.36&apos;][&apos;GT1.36.3&apos;]; }
		if (seg[&apos;GT1.36&apos;][&apos;GT1.36.4&apos;].toString() != &quot;&quot;) { gt1[index].primaryLanguage.altId = seg[&apos;GT1.36&apos;][&apos;GT1.36.4&apos;]; }
		if (seg[&apos;GT1.36&apos;][&apos;GT1.36.5&apos;].toString() != &quot;&quot;) { gt1[index].primaryLanguage.altText = seg[&apos;GT1.36&apos;][&apos;GT1.36.5&apos;]; }
		if (seg[&apos;GT1.36&apos;][&apos;GT1.36.6&apos;].toString() != &quot;&quot;) { gt1[index].primaryLanguage.altCodingSystem = seg[&apos;GT1.36&apos;][&apos;GT1.36.6&apos;]; }
		if (Object.keys(gt1[index].primaryLanguage).length == 0) {
			delete gt1[index].primaryLanguage;
		}

		// GT1.37, livingArrangement
		if (seg[&apos;GT1.37&apos;][&apos;GT1.37.1&apos;].toString() != &quot;&quot;) { gt1[index].livingArrangement = seg[&apos;GT1.37&apos;][&apos;GT1.37.1&apos;]; }

		// GT1.38, publicityIndicator
		gt1[index].publicityIndicator = {};
		if (seg[&apos;GT1.38&apos;][&apos;GT1.38.1&apos;].toString() != &quot;&quot;) { gt1[index].publicityIndicator.id = seg[&apos;GT1.38&apos;][&apos;GT1.38.1&apos;]; }
		if (seg[&apos;GT1.38&apos;][&apos;GT1.38.2&apos;].toString() != &quot;&quot;) { gt1[index].publicityIndicator.text = seg[&apos;GT1.38&apos;][&apos;GT1.38.2&apos;]; }
		if (seg[&apos;GT1.38&apos;][&apos;GT1.38.3&apos;].toString() != &quot;&quot;) { gt1[index].publicityIndicator.codingSystem = seg[&apos;GT1.38&apos;][&apos;GT1.38.3&apos;]; }
		if (seg[&apos;GT1.38&apos;][&apos;GT1.38.4&apos;].toString() != &quot;&quot;) { gt1[index].publicityIndicator.altId = seg[&apos;GT1.38&apos;][&apos;GT1.38.4&apos;]; }
		if (seg[&apos;GT1.38&apos;][&apos;GT1.38.5&apos;].toString() != &quot;&quot;) { gt1[index].publicityIndicator.altText = seg[&apos;GT1.38&apos;][&apos;GT1.38.5&apos;]; }
		if (seg[&apos;GT1.38&apos;][&apos;GT1.38.6&apos;].toString() != &quot;&quot;) { gt1[index].publicityIndicator.altCodingSystem = seg[&apos;GT1.38&apos;][&apos;GT1.38.6&apos;]; }
		if (Object.keys(gt1[index].publicityIndicator).length == 0) {
			delete gt1[index].publicityIndicator;
		}

		// GT1.39, protectionIndicator
		if (seg[&apos;GT1.39&apos;][&apos;GT1.39.1&apos;].toString() != &quot;&quot;) { gt1[index].protectionIndicator = seg[&apos;GT1.39&apos;][&apos;GT1.39.1&apos;]; }

		// GT1.40, studentIndicator
		if (seg[&apos;GT1.40&apos;][&apos;GT1.40.1&apos;].toString() != &quot;&quot;) { gt1[index].studentIndicator = seg[&apos;GT1.40&apos;][&apos;GT1.40.1&apos;]; }

		// GT1.41, religion
		if (seg[&apos;GT1.41&apos;][&apos;GT1.41.1&apos;].toString() != &quot;&quot;) { gt1[index].religion = seg[&apos;GT1.41&apos;][&apos;GT1.41.1&apos;]; }

		// GT1.42, mothersMaidenName
		gt1[index].mothersMaidenName = {};
		if (seg[&apos;GT1.42&apos;][&apos;GT1.42.1&apos;].toString() != &quot;&quot;) { gt1[index].mothersMaidenName.lastName = seg[&apos;GT1.42&apos;][&apos;GT1.42.1&apos;]; }
		if (seg[&apos;GT1.42&apos;][&apos;GT1.42.2&apos;].toString() != &quot;&quot;) { gt1[index].mothersMaidenName.firstName = seg[&apos;GT1.42&apos;][&apos;GT1.42.2&apos;]; }
		if (seg[&apos;GT1.42&apos;][&apos;GT1.42.3&apos;].toString() != &quot;&quot;) { gt1[index].mothersMaidenName.middleInitOrName = seg[&apos;GT1.42&apos;][&apos;GT1.42.3&apos;]; }
		if (seg[&apos;GT1.42&apos;][&apos;GT1.42.4&apos;].toString() != &quot;&quot;) { gt1[index].mothersMaidenName.suffix = seg[&apos;GT1.42&apos;][&apos;GT1.42.4&apos;]; }
		if (seg[&apos;GT1.42&apos;][&apos;GT1.42.5&apos;].toString() != &quot;&quot;) { gt1[index].mothersMaidenName.prefix = seg[&apos;GT1.42&apos;][&apos;GT1.42.5&apos;]; }
		if (seg[&apos;GT1.42&apos;][&apos;GT1.42.6&apos;].toString() != &quot;&quot;) { gt1[index].mothersMaidenName.degree = seg[&apos;GT1.42&apos;][&apos;GT1.42.6&apos;]; }
		if (seg[&apos;GT1.42&apos;][&apos;GT1.42.7&apos;].toString() != &quot;&quot;) { gt1[index].mothersMaidenName.nameTypeCode = seg[&apos;GT1.42&apos;][&apos;GT1.42.7&apos;]; }
		if (Object.keys(gt1[index].mothersMaidenName).length == 0) {
			delete gt1[index].mothersMaidenName;
		}

		// GT1.43, nationality
		gt1[index].nationality = {};
		if (seg[&apos;GT1.43&apos;][&apos;GT1.43.1&apos;].toString() != &quot;&quot;) { gt1[index].nationality.id = seg[&apos;GT1.43&apos;][&apos;GT1.43.1&apos;]; }
		if (seg[&apos;GT1.43&apos;][&apos;GT1.43.2&apos;].toString() != &quot;&quot;) { gt1[index].nationality.text = seg[&apos;GT1.43&apos;][&apos;GT1.43.2&apos;]; }
		if (seg[&apos;GT1.43&apos;][&apos;GT1.43.3&apos;].toString() != &quot;&quot;) { gt1[index].nationality.codingSystem = seg[&apos;GT1.43&apos;][&apos;GT1.43.3&apos;]; }
		if (seg[&apos;GT1.43&apos;][&apos;GT1.43.4&apos;].toString() != &quot;&quot;) { gt1[index].nationality.altId = seg[&apos;GT1.43&apos;][&apos;GT1.43.4&apos;]; }
		if (seg[&apos;GT1.43&apos;][&apos;GT1.43.5&apos;].toString() != &quot;&quot;) { gt1[index].nationality.altText = seg[&apos;GT1.43&apos;][&apos;GT1.43.5&apos;]; }
		if (seg[&apos;GT1.43&apos;][&apos;GT1.43.6&apos;].toString() != &quot;&quot;) { gt1[index].nationality.altCodingSystem = seg[&apos;GT1.43&apos;][&apos;GT1.43.6&apos;]; }
		if (Object.keys(gt1[index].nationality).length == 0) {
			delete gt1[index].nationality;
		}

		// GT1.44, ethnicGroup
		if (seg[&apos;GT1.44&apos;][&apos;GT1.44.1&apos;].toString() != &quot;&quot;) { gt1[index].ethnicGroup = seg[&apos;GT1.44&apos;][&apos;GT1.44.1&apos;]; }

		// GT1.45, contactPersonsName
		gt1[index].contactPersonsName = [];
		for each (field in seg[&apos;GT1.45&apos;]) {
			var block = {};
			if (field[&apos;GT1.45.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;GT1.45.1&apos;]; }
			if (field[&apos;GT1.45.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;GT1.45.2&apos;]; }
			if (field[&apos;GT1.45.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;GT1.45.3&apos;]; }
			if (field[&apos;GT1.45.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;GT1.45.4&apos;]; }
			if (field[&apos;GT1.45.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;GT1.45.5&apos;]; }
			if (field[&apos;GT1.45.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;GT1.45.6&apos;]; }
			if (field[&apos;GT1.45.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;GT1.45.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].contactPersonsName.push(block);
			}	
		}
		if (gt1[index].contactPersonsName.length == 0) {
			delete gt1[index].contactPersonsName;
		}

		// GT1.46, contactPersonsTelephoneNumber
		gt1[index].contactPersonsTelephoneNumber = [];
		for each (field in seg[&apos;GT1.46&apos;]) {
			var block = {};
			if (field[&apos;GT1.46.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;GT1.46.1&apos;]; }
			if (field[&apos;GT1.46.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;GT1.46.2&apos;]; }
			if (field[&apos;GT1.46.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;GT1.46.3&apos;]; }
			if (field[&apos;GT1.46.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;GT1.46.4&apos;]; }
			if (field[&apos;GT1.46.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;GT1.46.5&apos;]; }
			if (field[&apos;GT1.46.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;GT1.46.6&apos;]; }
			if (field[&apos;GT1.46.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;GT1.46.7&apos;]; }
			if (field[&apos;GT1.46.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;GT1.46.8&apos;]; }
			if (field[&apos;GT1.46.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;GT1.46.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				gt1[index].contactPersonsTelephoneNumber.push(block);
			}
		}
		if (gt1[index].contactPersonsTelephoneNumber.length == 0) {
			delete gt1[index].contactPersonsTelephoneNumber;
		}

		// GT1.47, contactReason
		gt1[index].contactReason = {};
		if (seg[&apos;GT1.47&apos;][&apos;GT1.47.1&apos;].toString() != &quot;&quot;) { gt1[index].contactReason.id = seg[&apos;GT1.47&apos;][&apos;GT1.47.1&apos;]; }
		if (seg[&apos;GT1.47&apos;][&apos;GT1.47.2&apos;].toString() != &quot;&quot;) { gt1[index].contactReason.text = seg[&apos;GT1.47&apos;][&apos;GT1.47.2&apos;]; }
		if (seg[&apos;GT1.47&apos;][&apos;GT1.47.3&apos;].toString() != &quot;&quot;) { gt1[index].contactReason.codingSystem = seg[&apos;GT1.47&apos;][&apos;GT1.47.3&apos;]; }
		if (seg[&apos;GT1.47&apos;][&apos;GT1.47.4&apos;].toString() != &quot;&quot;) { gt1[index].contactReason.altId = seg[&apos;GT1.47&apos;][&apos;GT1.47.4&apos;]; }
		if (seg[&apos;GT1.47&apos;][&apos;GT1.47.5&apos;].toString() != &quot;&quot;) { gt1[index].contactReason.altText = seg[&apos;GT1.47&apos;][&apos;GT1.47.5&apos;]; }
		if (seg[&apos;GT1.47&apos;][&apos;GT1.47.6&apos;].toString() != &quot;&quot;) { gt1[index].contactReason.altCodingSystem = seg[&apos;GT1.47&apos;][&apos;GT1.47.6&apos;]; }
		if (Object.keys(gt1[index].contactReason).length == 0) {
			delete gt1[index].contactReason;
		}

		// GT1.48, contactRelationship
		if (seg[&apos;GT1.48&apos;][&apos;GT1.48.1&apos;].toString() != &quot;&quot;) { gt1[index].contactRelationship = seg[&apos;GT1.48&apos;][&apos;GT1.48.1&apos;]; }

		// GT1.49, jobTitle
		if (seg[&apos;GT1.49&apos;][&apos;GT1.49.1&apos;].toString() != &quot;&quot;) { gt1[index].jobTitle = seg[&apos;GT1.49&apos;][&apos;GT1.49.1&apos;]; }

		// GT1.50, jobCodeClass
		gt1[index].jobCodeClass = {};
		if (seg[&apos;GT1.50&apos;][&apos;GT1.50.1&apos;].toString() != &quot;&quot;) { gt1[index].jobCodeClass.id = seg[&apos;GT1.50&apos;][&apos;GT1.50.1&apos;]; }
		if (seg[&apos;GT1.50&apos;][&apos;GT1.50.1&apos;].toString() != &quot;&quot;) { gt1[index].jobCodeClass.id = seg[&apos;GT1.50&apos;][&apos;GT1.50.1&apos;]; }
		if (Object.keys(gt1[index].jobCodeClass).length == 0) {
			delete gt1[index].jobCodeClass;
		}

		// GT1.51, guarantorEmployersOrganization
		gt1[index].guarantorEmployersOrganization = [];
		for each (field in seg[&apos;GT1.51&apos;]) {
			var block = {};
			if (field[&apos;GT1.51.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;GT1.51.1&apos;]; }
			if (field[&apos;GT1.51.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;GT1.51.2&apos;]; }
			if (field[&apos;GT1.51.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;GT1.51.3&apos;]; }
			if (field[&apos;GT1.51.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;GT1.51.4&apos;]; }
			if (field[&apos;GT1.51.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;GT1.51.5&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;GT1.51.6&apos;][&apos;GT1.51.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.51.6&apos;][&apos;GT1.51.6.1&apos;]; }
			if (field[&apos;GT1.51.6&apos;][&apos;GT1.51.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;GT1.51.6&apos;][&apos;GT1.51.6.2&apos;]; }
			if (field[&apos;GT1.51.6&apos;][&apos;GT1.51.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;GT1.51.6&apos;][&apos;GT1.51.6.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;GT1.51.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;GT1.51.6&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;GT1.51.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;GT1.51.7&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;GT1.51.8&apos;][&apos;GT1.51.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.51.8&apos;][&apos;GT1.51.8.1&apos;]; }
			if (field[&apos;GT1.51.8&apos;][&apos;GT1.51.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;GT1.51.8&apos;][&apos;GT1.51.8.2&apos;]; }
			if (field[&apos;GT1.51.8&apos;][&apos;GT1.51.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;GT1.51.8&apos;][&apos;GT1.51.8.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;GT1.51.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;GT1.51.8&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				gt1[index].guarantorEmployersOrganization.push(block);
			}
		}
		if (gt1[index].guarantorEmployersOrganization.length == 0) {
			delete gt1[index].guarantorEmployersOrganization;
		}
		// GT1.52, handicap
		if (seg[&apos;GT1.52&apos;][&apos;GT1.52.1&apos;].toString() != &quot;&quot;) { gt1[index].handicap = seg[&apos;GT1.52&apos;][&apos;GT1.52.1&apos;]; }

		// GT1.53, jobStatus
		if (seg[&apos;GT1.53&apos;][&apos;GT1.53.1&apos;].toString() != &quot;&quot;) { gt1[index].jobStatus = seg[&apos;GT1.53&apos;][&apos;GT1.53.1&apos;]; }

		// GT1.54, guarantorFinancialClass
		gt1[index].guarantorFinancialClass = {};
		if (seg[&apos;GT1.54&apos;][&apos;GT1.54.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorFinancialClass.financialClass = seg[&apos;GT1.54&apos;][&apos;GT1.54.1&apos;]; }
		if (seg[&apos;GT1.54&apos;][&apos;GT1.54.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorFinancialClass.effectiveDate = seg[&apos;GT1.54&apos;][&apos;GT1.54.1&apos;]; }
		if (Object.keys(gt1[index].guarantorFinancialClass).length == 0) {
			delete gt1[index].guarantorFinancialClass;
		}

		// GT1.55, guarantorRace
		if (seg[&apos;GT1.55&apos;][&apos;GT1.55.1&apos;].toString() != &quot;&quot;) { gt1[index].guarantorRace = seg[&apos;GT1.55&apos;][&apos;GT1.55.1&apos;]; }

		// clean up GT1 and increment index
		if (Object.keys(gt1[index]).length == 0) {
			delete gt1[index];
		} else {
			index++;
		}
	}
}

// Optional: save a copy of the completed GT1 segment for reference later
//channelMap.put(&quot;gt1&quot;, gt1); // uncomment to save

// If it has content, add the GT1 segment to the hl7JSON object
if (gt1 &amp;&amp; Object.keys(gt1).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.GT1 = gt1;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>10</sequenceNumber>
          <name>AL1 (Allergy) Segment</name>
          <script>// AL1
var al1;
if (msg[&apos;AL1&apos;].length() &gt; 0) {
	al1 = [];
	var index = 0;
	for each (seg in msg.AL1) {
		al1[index] = {};
		
		// AL1.1, setId
		if (seg[&apos;AL1.1&apos;][&apos;AL1.1.1&apos;].toString() != &quot;&quot;) { al1[index].setId = seg[&apos;AL1.1&apos;][&apos;AL1.1.1&apos;]; }

		// AL1.2, allergyType
		if (seg[&apos;AL1.2&apos;][&apos;AL1.2.1&apos;].toString() != &quot;&quot;) { al1[index].allergyType = seg[&apos;AL1.2&apos;][&apos;AL1.2.1&apos;]; }
		
		// AL1.3, allergyCodeMnemonicDescription
		al1[index].allergyCodeMnemonicDescription = {};
		if (seg[&apos;AL1.3&apos;][&apos;AL1.3.1&apos;].toString() != &quot;&quot;) { al1[index].allergyCodeMnemonicDescription.id = seg[&apos;AL1.3&apos;][&apos;AL1.3.1&apos;]; }
		if (seg[&apos;AL1.3&apos;][&apos;AL1.3.2&apos;].toString() != &quot;&quot;) { al1[index].allergyCodeMnemonicDescription.text = seg[&apos;AL1.3&apos;][&apos;AL1.3.2&apos;]; }
		if (seg[&apos;AL1.3&apos;][&apos;AL1.3.3&apos;].toString() != &quot;&quot;) { al1[index].allergyCodeMnemonicDescription.codingSystem = seg[&apos;AL1.3&apos;][&apos;AL1.3.3&apos;]; }
		if (seg[&apos;AL1.3&apos;][&apos;AL1.3.4&apos;].toString() != &quot;&quot;) { al1[index].allergyCodeMnemonicDescription.altId = seg[&apos;AL1.3&apos;][&apos;AL1.3.4&apos;]; }
		if (seg[&apos;AL1.3&apos;][&apos;AL1.3.5&apos;].toString() != &quot;&quot;) { al1[index].allergyCodeMnemonicDescription.altText = seg[&apos;AL1.3&apos;][&apos;AL1.3.5&apos;]; }
		if (seg[&apos;AL1.3&apos;][&apos;AL1.3.6&apos;].toString() != &quot;&quot;) { al1[index].allergyCodeMnemonicDescription.altCodingSystem = seg[&apos;AL1.3&apos;][&apos;AL1.3.6&apos;]; }
		if (Object.keys(al1[index].allergyCodeMnemonicDescription).length == 0) {
			delete al1[index].allergyCodeMnemonicDescription;
		}

		// AL1.4, allergySeverity
		if (seg[&apos;AL1.4&apos;][&apos;AL1.4.1&apos;].toString() != &quot;&quot;) { al1[index].allergySeverity = seg[&apos;AL1.4&apos;][&apos;AL1.4.1&apos;]; }
		
		// AL1.5, allergyReaction
		if (seg[&apos;AL1.5&apos;][&apos;AL1.5.1&apos;].toString() != &quot;&quot;) { al1[index].allergyReaction = seg[&apos;AL1.5&apos;][&apos;AL1.5.1&apos;]; }
		
		// AL1.6, identificationDate
		if (seg[&apos;AL1.6&apos;][&apos;AL1.6.1&apos;].toString() != &quot;&quot;) { al1[index].identificationDate = seg[&apos;AL1.6&apos;][&apos;AL1.6.1&apos;]; }

		// clean up AL1 and increment index
		if (Object.keys(al1[index]).length == 0) {
			delete al1[index];
		} else {
			index++;
		}
	}
}

// Optional: save a copy of the completed AL1 segment for reference later
//channelMap.put(&quot;al1&quot;, al1); // uncomment to save

// If it has content, add the AL1 segment to the hl7JSON object
if (al1 &amp;&amp; Object.keys(al1).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.AL1 = al1;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// AL1
var al1;
if (msg[&apos;AL1&apos;].length() &gt; 0) {
	al1 = [];
	var index = 0;
	for each (seg in msg.AL1) {
		al1[index] = {};
		
		// AL1.1, setId
		if (seg[&apos;AL1.1&apos;][&apos;AL1.1.1&apos;].toString() != &quot;&quot;) { al1[index].setId = seg[&apos;AL1.1&apos;][&apos;AL1.1.1&apos;]; }

		// AL1.2, allergyType
		if (seg[&apos;AL1.2&apos;][&apos;AL1.2.1&apos;].toString() != &quot;&quot;) { al1[index].allergyType = seg[&apos;AL1.2&apos;][&apos;AL1.2.1&apos;]; }
		
		// AL1.3, allergyCodeMnemonicDescription
		al1[index].allergyCodeMnemonicDescription = {};
		if (seg[&apos;AL1.3&apos;][&apos;AL1.3.1&apos;].toString() != &quot;&quot;) { al1[index].allergyCodeMnemonicDescription.id = seg[&apos;AL1.3&apos;][&apos;AL1.3.1&apos;]; }
		if (seg[&apos;AL1.3&apos;][&apos;AL1.3.2&apos;].toString() != &quot;&quot;) { al1[index].allergyCodeMnemonicDescription.text = seg[&apos;AL1.3&apos;][&apos;AL1.3.2&apos;]; }
		if (seg[&apos;AL1.3&apos;][&apos;AL1.3.3&apos;].toString() != &quot;&quot;) { al1[index].allergyCodeMnemonicDescription.codingSystem = seg[&apos;AL1.3&apos;][&apos;AL1.3.3&apos;]; }
		if (seg[&apos;AL1.3&apos;][&apos;AL1.3.4&apos;].toString() != &quot;&quot;) { al1[index].allergyCodeMnemonicDescription.altId = seg[&apos;AL1.3&apos;][&apos;AL1.3.4&apos;]; }
		if (seg[&apos;AL1.3&apos;][&apos;AL1.3.5&apos;].toString() != &quot;&quot;) { al1[index].allergyCodeMnemonicDescription.altText = seg[&apos;AL1.3&apos;][&apos;AL1.3.5&apos;]; }
		if (seg[&apos;AL1.3&apos;][&apos;AL1.3.6&apos;].toString() != &quot;&quot;) { al1[index].allergyCodeMnemonicDescription.altCodingSystem = seg[&apos;AL1.3&apos;][&apos;AL1.3.6&apos;]; }
		if (Object.keys(al1[index].allergyCodeMnemonicDescription).length == 0) {
			delete al1[index].allergyCodeMnemonicDescription;
		}

		// AL1.4, allergySeverity
		if (seg[&apos;AL1.4&apos;][&apos;AL1.4.1&apos;].toString() != &quot;&quot;) { al1[index].allergySeverity = seg[&apos;AL1.4&apos;][&apos;AL1.4.1&apos;]; }
		
		// AL1.5, allergyReaction
		if (seg[&apos;AL1.5&apos;][&apos;AL1.5.1&apos;].toString() != &quot;&quot;) { al1[index].allergyReaction = seg[&apos;AL1.5&apos;][&apos;AL1.5.1&apos;]; }
		
		// AL1.6, identificationDate
		if (seg[&apos;AL1.6&apos;][&apos;AL1.6.1&apos;].toString() != &quot;&quot;) { al1[index].identificationDate = seg[&apos;AL1.6&apos;][&apos;AL1.6.1&apos;]; }

		// clean up AL1 and increment index
		if (Object.keys(al1[index]).length == 0) {
			delete al1[index];
		} else {
			index++;
		}
	}
}

// Optional: save a copy of the completed AL1 segment for reference later
//channelMap.put(&quot;al1&quot;, al1); // uncomment to save

// If it has content, add the AL1 segment to the hl7JSON object
if (al1 &amp;&amp; Object.keys(al1).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.AL1 = al1;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>11</sequenceNumber>
          <name>ORC (Common Order), NTE (notes), CTI (Clinical Trial Identification), BLG (Billing) Segments</name>
          <script>// ORC
var orc;
if (msg[&apos;ORC&apos;].length() &gt; 0) {
	orc = [];
	var index = 0;
	for each (seg in msg.ORC) {
		orc[index] = {};

		// ORC.1, orderControl
		if (seg[&apos;ORC.1&apos;][&apos;ORC.1.1&apos;].toString() != &quot;&quot;) { orc[index].orderControl = seg[&apos;ORC.1&apos;][&apos;ORC.1.1&apos;]; }

		// ORC.2, placerOrderNumber
		orc[index].placerOrderNumber = {};
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;].toString() != &quot;&quot;) { orc[index].placerOrderNumber.id = seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;].toString() != &quot;&quot;) { orc[index].placerOrderNumber.namespaceId = seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;].toString() != &quot;&quot;) { orc[index].placerOrderNumber.universalId = seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;].toString() != &quot;&quot;) { orc[index].placerOrderNumber.universalIdType = seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;]; }
		if (Object.keys(orc[index].placerOrderNumber).length == 0) {
			delete orc[index].placerOrderNumber;
		}

		// ORC.3, fillerOrderNumber
		orc[index].fillerOrderNumber = {};
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;].toString() != &quot;&quot;) { orc[index].fillerOrderNumber.id = seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;].toString() != &quot;&quot;) { orc[index].fillerOrderNumber.namespaceId = seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;].toString() != &quot;&quot;) { orc[index].fillerOrderNumber.universalId = seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;].toString() != &quot;&quot;) { orc[index].fillerOrderNumber.universalIdType = seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;]; }
		if (Object.keys(orc[index].fillerOrderNumber).length == 0) {
			delete orc[index].fillerOrderNumber;
		}

		// ORC.4, placerGroupNumber
		orc[index].placerGroupNumber = {};
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;].toString() != &quot;&quot;) { orc[index].placerGroupNumber.id = seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;].toString() != &quot;&quot;) { orc[index].placerGroupNumber.namespaceId = seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;].toString() != &quot;&quot;) { orc[index].placerGroupNumber.universalId = seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;].toString() != &quot;&quot;) { orc[index].placerGroupNumber.universalIdType = seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;]; }
		if (Object.keys(orc[index].placerGroupNumber).length == 0) {
			delete orc[index].placerGroupNumber;
		}

		// ORC.5, orderStatus
		if (seg[&apos;ORC.5&apos;][&apos;ORC.5.1&apos;].toString() != &quot;&quot;) { orc[index].orderStatus = seg[&apos;ORC.5&apos;][&apos;ORC.5.1&apos;]; }

		// ORC.6, responseFlag
		if (seg[&apos;ORC.6&apos;][&apos;ORC.6.1&apos;].toString() != &quot;&quot;) { orc[index].responseFlag = seg[&apos;ORC.6&apos;][&apos;ORC.6.1&apos;]; }

		// ORC.7, timingQuantity
		orc[index].timingQuantity = {};
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.1&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.quantity = seg[&apos;ORC.7&apos;][&apos;ORC.7.1&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.2&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.interval = seg[&apos;ORC.7&apos;][&apos;ORC.7.2&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.3&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.duration = seg[&apos;ORC.7&apos;][&apos;ORC.7.3&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.4&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.startDateTime = seg[&apos;ORC.7&apos;][&apos;ORC.7.4&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.5&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.endDateTime = seg[&apos;ORC.7&apos;][&apos;ORC.7.5&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.6&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.priority = seg[&apos;ORC.7&apos;][&apos;ORC.7.6&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.7&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.condition = seg[&apos;ORC.7&apos;][&apos;ORC.7.7&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.8&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.text = seg[&apos;ORC.7&apos;][&apos;ORC.7.8&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.9&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.conjunction = seg[&apos;ORC.7&apos;][&apos;ORC.7.9&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.10&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.orderSequencing = seg[&apos;ORC.7&apos;][&apos;ORC.7.10&apos;]; }
		if (Object.keys(orc[index].timingQuantity).length == 0) {
			delete orc[index].timingQuantity;
		}

		// ORC.8, parentOrder
		orc[index].parentOrder = {};
		orc[index].parentOrder.parentsPlacerOrderNumber = {};
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.1&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.id = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.1&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.2&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.namespaceId = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.2&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.3&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.universalId = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.3&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.4&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.universalIdType = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.4&apos;]; }
		if (Object.keys(orc[index].parentOrder.parentsPlacerOrderNumber).length == 0) {
			if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.id = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;]; }
			else delete orc[index].parentOrder.parentsPlacerOrderNumber;
		}
		orc[index].parentOrder.parentsFillerOrderNumber = {};
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.1&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.id = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.1&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.2&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.namespaceId = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.2&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.3&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.universalId = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.3&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.4&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.universalIdType = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.4&apos;]; }
		if (Object.keys(orc[index].parentOrder.parentsFillerOrderNumber).length == 0) {
			if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.id = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;]; }
			else delete orc[index].parentOrder.parentsFillerOrderNumber;
		}
		if (Object.keys(orc[index].parentOrder).length == 0) {
			delete orc[index].parentOrder;
		}

		// ORC.9, transactionDateTime
		if (seg[&apos;ORC.9&apos;][&apos;ORC.9.1&apos;].toString() != &quot;&quot;) { orc[index].transactionDateTime = seg[&apos;ORC.9&apos;][&apos;ORC.9.1&apos;]; }

		// ORC.10, enteredBy
		orc[index].enteredBy = {};
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.1&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.1&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.2&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.lastName = seg[&apos;ORC.10&apos;][&apos;ORC.10.2&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.3&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.firstName = seg[&apos;ORC.10&apos;][&apos;ORC.10.3&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.4&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.middleInitOrName = seg[&apos;ORC.10&apos;][&apos;ORC.10.4&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.5&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.suffix = seg[&apos;ORC.10&apos;][&apos;ORC.10.5&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.6&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.prefix = seg[&apos;ORC.10&apos;][&apos;ORC.10.6&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.7&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.degree = seg[&apos;ORC.10&apos;][&apos;ORC.10.7&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.8&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.sourceTable = seg[&apos;ORC.10&apos;][&apos;ORC.10.8&apos;]; }
		orc[index].enteredBy.assigningAuthority = {};
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.1&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningAuthority.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.1&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.2&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningAuthority.universalId = seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.2&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.3&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningAuthority.universalIdType = seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.3&apos;]; }
		if (Object.keys(orc[index].enteredBy.assigningAuthority).length == 0) {
			if (seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningAuthority.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;]; }
			else delete orc[index].enteredBy.assigningAuthority;
		}
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.10&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.nameTypeCode = seg[&apos;ORC.10&apos;][&apos;ORC.10.10&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.11&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.identifierCheckDigit = seg[&apos;ORC.10&apos;][&apos;ORC.10.11&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.12&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.codeIdentifyingCheckDigitScheme = seg[&apos;ORC.10&apos;][&apos;ORC.10.12&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.13&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.identifierTypeCode = seg[&apos;ORC.10&apos;][&apos;ORC.10.13&apos;]; }
		orc[index].enteredBy.assigningFacility = {};
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.1&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningFacility.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.1&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.2&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningFacility.universalId = seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.2&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.3&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningFacility.universalIdType = seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.3&apos;]; }
		if (Object.keys(orc[index].enteredBy.assigningFacility).length == 0) {
			if (seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningFacility.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;]; }
			else delete orc[index].enteredBy.assigningFacility;
		}
		if (Object.keys(orc[index].enteredBy).length == 0) {
			delete orc[index].enteredBy;
		}

		// ORC.11, verifiedBy
		orc[index].verifiedBy = {};
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.1&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.1&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.2&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.lastName = seg[&apos;ORC.11&apos;][&apos;ORC.11.2&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.3&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.firstName = seg[&apos;ORC.11&apos;][&apos;ORC.11.3&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.4&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.middleInitOrName = seg[&apos;ORC.11&apos;][&apos;ORC.11.4&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.5&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.suffix = seg[&apos;ORC.11&apos;][&apos;ORC.11.5&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.6&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.prefix = seg[&apos;ORC.11&apos;][&apos;ORC.11.6&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.7&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.degree = seg[&apos;ORC.11&apos;][&apos;ORC.11.7&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.8&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.sourceTable = seg[&apos;ORC.11&apos;][&apos;ORC.11.8&apos;]; }
		orc[index].verifiedBy.assigningAuthority = {};
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.1&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningAuthority.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.1&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.2&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningAuthority.universalId = seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.2&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.3&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningAuthority.universalIdType = seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.3&apos;]; }
		if (Object.keys(orc[index].verifiedBy.assigningAuthority).length == 0) {
			if (seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningAuthority.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;]; }
			else delete orc[index].verifiedBy.assigningAuthority;
		}
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.10&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.nameTypeCode = seg[&apos;ORC.11&apos;][&apos;ORC.11.10&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.11&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.identifierCheckDigit = seg[&apos;ORC.11&apos;][&apos;ORC.11.11&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.12&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.codeIdentifyingCheckDigitScheme = seg[&apos;ORC.11&apos;][&apos;ORC.11.12&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.13&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.identifierTypeCode = seg[&apos;ORC.11&apos;][&apos;ORC.11.13&apos;]; }
		orc[index].verifiedBy.assigningFacility = {};
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.1&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningFacility.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.1&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.2&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningFacility.universalId = seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.2&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.3&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningFacility.universalIdType = seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.3&apos;]; }
		if (Object.keys(orc[index].verifiedBy.assigningFacility).length == 0) {
			if (seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningFacility.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;]; }
			else delete orc[index].verifiedBy.assigningFacility;
		}
		if (Object.keys(orc[index].verifiedBy).length == 0) {
			delete orc[index].verifiedBy;
		}

		// ORC.12, orderingProvider
		orc[index].orderingProvider = {};
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.1&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.1&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.2&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.lastName = seg[&apos;ORC.12&apos;][&apos;ORC.12.2&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.3&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.firstName = seg[&apos;ORC.12&apos;][&apos;ORC.12.3&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.4&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.middleInitOrName = seg[&apos;ORC.12&apos;][&apos;ORC.12.4&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.5&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.suffix = seg[&apos;ORC.12&apos;][&apos;ORC.12.5&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.6&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.prefix = seg[&apos;ORC.12&apos;][&apos;ORC.12.6&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.7&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.degree = seg[&apos;ORC.12&apos;][&apos;ORC.12.7&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.8&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.sourceTable = seg[&apos;ORC.12&apos;][&apos;ORC.12.8&apos;]; }
		orc[index].orderingProvider.assigningAuthority = {};
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.1&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningAuthority.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.1&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.2&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningAuthority.universalId = seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.2&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.3&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningAuthority.universalIdType = seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.3&apos;]; }
		if (Object.keys(orc[index].orderingProvider.assigningAuthority).length == 0) {
			if (seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningAuthority.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;]; }
			else delete orc[index].orderingProvider.assigningAuthority;
		}
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.10&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.nameTypeCode = seg[&apos;ORC.12&apos;][&apos;ORC.12.10&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.11&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.identifierCheckDigit = seg[&apos;ORC.12&apos;][&apos;ORC.12.11&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.12&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.codeIdentifyingCheckDigitScheme = seg[&apos;ORC.12&apos;][&apos;ORC.12.12&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.13&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.identifierTypeCode = seg[&apos;ORC.12&apos;][&apos;ORC.12.13&apos;]; }
		orc[index].orderingProvider.assigningFacility = {};
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.1&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningFacility.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.1&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.2&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningFacility.universalId = seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.2&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.3&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningFacility.universalIdType = seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.3&apos;]; }
		if (Object.keys(orc[index].orderingProvider.assigningFacility).length == 0) {
			if (seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningFacility.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;]; }
			else delete orc[index].orderingProvider.assigningFacility;
		}
		if (Object.keys(orc[index].orderingProvider).length == 0) {
			delete orc[index].orderingProvider;
		}

		// ORC.13, enterersLocation
		orc[index].enterersLocation = {};
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.1&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.pointOfCare = seg[&apos;ORC.13&apos;][&apos;ORC.13.1&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.2&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.room = seg[&apos;ORC.13&apos;][&apos;ORC.13.2&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.3&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.bed = seg[&apos;ORC.13&apos;][&apos;ORC.13.3&apos;]; }
		orc[index].enterersLocation.facility = {};
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.1&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.facility.nameSpaceId =  seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.1&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.2&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.facility.universalId =  seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.2&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.3&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.facility.universalIdType =  seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.3&apos;]; }
		if (Object.keys(orc[index].enterersLocation.facility).length == 0) {
			if (seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.facility.nameSpaceId = seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;]; }
			else delete orc[index].enterersLocation.facility;
		}
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.5&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.locationStatus = seg[&apos;ORC.13&apos;][&apos;ORC.13.5&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.6&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.personLocationType = seg[&apos;ORC.13&apos;][&apos;ORC.13.6&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.7&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.building = seg[&apos;ORC.13&apos;][&apos;ORC.13.7&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.8&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.floor = seg[&apos;ORC.13&apos;][&apos;ORC.13.8&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.9&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.locationDescription = seg[&apos;ORC.13&apos;][&apos;ORC.13.9&apos;]; }
		if (Object.keys(orc[index].enterersLocation).length == 0) {
			delete orc[index].enterersLocation;
		}

		// ORC.14, callBackPhoneNumber
		orc[index].callBackPhoneNumber = [];
		for each (field in seg[&apos;ORC.14&apos;]) {
			var block = {};
			if (field[&apos;ORC.14.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;ORC.14.1&apos;]; }
			if (field[&apos;ORC.14.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;ORC.14.2&apos;]; }
			if (field[&apos;ORC.14.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;ORC.14.3&apos;]; }
			if (field[&apos;ORC.14.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;ORC.14.4&apos;]; }
			if (field[&apos;ORC.14.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;ORC.14.5&apos;]; }
			if (field[&apos;ORC.14.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;ORC.14.6&apos;]; }
			if (field[&apos;ORC.14.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;ORC.14.7&apos;]; }
			if (field[&apos;ORC.14.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;ORC.14.8&apos;]; }
			if (field[&apos;ORC.14.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;ORC.14.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				orc[index].callBackPhoneNumber.push(block);
			}
		}
		if (orc[index].callBackPhoneNumber.length == 0) {
			delete orc[index].callBackPhoneNumber;
		}

		// ORC.15, orderEffectiveDateTime
		if (seg[&apos;ORC.15&apos;][&apos;ORC.15.1&apos;].toString() != &quot;&quot;) { orc[index].orderEffectiveDateTime = seg[&apos;ORC.15&apos;][&apos;ORC.15.1&apos;]; }

		// ORC.16, orderControlCodeReason
		orc[index].orderControlCodeReason = {};
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.1&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.id = seg[&apos;ORC.16&apos;][&apos;ORC.16.1&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.2&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.text = seg[&apos;ORC.16&apos;][&apos;ORC.16.2&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.3&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.codingSystem = seg[&apos;ORC.16&apos;][&apos;ORC.16.3&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.4&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.altId = seg[&apos;ORC.16&apos;][&apos;ORC.16.4&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.5&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.altText = seg[&apos;ORC.16&apos;][&apos;ORC.16.5&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.6&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.altCodingSystem = seg[&apos;ORC.16&apos;][&apos;ORC.16.6&apos;]; }
		if (Object.keys(orc[index].orderControlCodeReason).length == 0) {
			delete orc[index].orderControlCodeReason;
		}

		// ORC.17, enteringOrganization
		orc[index].enteringOrganization = {};
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.1&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.id = seg[&apos;ORC.17&apos;][&apos;ORC.17.1&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.2&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.text = seg[&apos;ORC.17&apos;][&apos;ORC.17.2&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.3&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.codingSystem = seg[&apos;ORC.17&apos;][&apos;ORC.17.3&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.4&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.altId = seg[&apos;ORC.17&apos;][&apos;ORC.17.4&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.5&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.altText = seg[&apos;ORC.17&apos;][&apos;ORC.17.5&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.6&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.altCodingSystem = seg[&apos;ORC.17&apos;][&apos;ORC.17.6&apos;]; }
		if (Object.keys(orc[index].enteringOrganization).length == 0) {
			delete orc[index].enteringOrganization;
		}

		// ORC.18, enteringDevice
		orc[index].enteringDevice = {};
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.1&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.id = seg[&apos;ORC.18&apos;][&apos;ORC.18.1&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.2&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.text = seg[&apos;ORC.18&apos;][&apos;ORC.18.2&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.3&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.codingSystem = seg[&apos;ORC.18&apos;][&apos;ORC.18.3&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.4&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.altId = seg[&apos;ORC.18&apos;][&apos;ORC.18.4&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.5&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.altText = seg[&apos;ORC.18&apos;][&apos;ORC.18.5&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.6&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.altCodingSystem = seg[&apos;ORC.18&apos;][&apos;ORC.18.6&apos;]; }
		if (Object.keys(orc[index].enteringDevice).length == 0) {
			delete orc[index].enteringDevice;
		}

		// ORC.19, actionBy
		orc[index].actionBy = {};
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.1&apos;].toString() != &quot;&quot;) { orc[index].actionBy.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.1&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.2&apos;].toString() != &quot;&quot;) { orc[index].actionBy.lastName = seg[&apos;ORC.19&apos;][&apos;ORC.19.2&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.3&apos;].toString() != &quot;&quot;) { orc[index].actionBy.firstName = seg[&apos;ORC.19&apos;][&apos;ORC.19.3&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.4&apos;].toString() != &quot;&quot;) { orc[index].actionBy.middleInitOrName = seg[&apos;ORC.19&apos;][&apos;ORC.19.4&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.5&apos;].toString() != &quot;&quot;) { orc[index].actionBy.suffix = seg[&apos;ORC.19&apos;][&apos;ORC.19.5&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.6&apos;].toString() != &quot;&quot;) { orc[index].actionBy.prefix = seg[&apos;ORC.19&apos;][&apos;ORC.19.6&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.7&apos;].toString() != &quot;&quot;) { orc[index].actionBy.degree = seg[&apos;ORC.19&apos;][&apos;ORC.19.7&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.8&apos;].toString() != &quot;&quot;) { orc[index].actionBy.sourceTable = seg[&apos;ORC.19&apos;][&apos;ORC.19.8&apos;]; }
		orc[index].actionBy.assigningAuthority = {};
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.1&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningAuthority.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.1&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.2&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningAuthority.universalId = seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.2&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.3&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningAuthority.universalIdType = seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.3&apos;]; }
		if (Object.keys(orc[index].actionBy.assigningAuthority).length == 0) {
			if (seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningAuthority.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;]; }
			else delete orc[index].actionBy.assigningAuthority;
		}
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.10&apos;].toString() != &quot;&quot;) { orc[index].actionBy.nameTypeCode = seg[&apos;ORC.19&apos;][&apos;ORC.19.10&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.11&apos;].toString() != &quot;&quot;) { orc[index].actionBy.identifierCheckDigit = seg[&apos;ORC.19&apos;][&apos;ORC.19.11&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.12&apos;].toString() != &quot;&quot;) { orc[index].actionBy.codeIdentifyingCheckDigitScheme = seg[&apos;ORC.19&apos;][&apos;ORC.19.12&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.13&apos;].toString() != &quot;&quot;) { orc[index].actionBy.identifierTypeCode = seg[&apos;ORC.19&apos;][&apos;ORC.19.13&apos;]; }
		orc[index].actionBy.assigningFacility = {};
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.1&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningFacility.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.1&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.2&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningFacility.universalId = seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.2&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.3&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningFacility.universalIdType = seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.3&apos;]; }
		if (Object.keys(orc[index].actionBy.assigningFacility).length == 0) {
			if (seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningFacility.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;]; }
			else delete orc[index].actionBy.assigningFacility;
		}
		if (Object.keys(orc[index].actionBy).length == 0) {
			delete orc[index].actionBy;
		}

		// NTE (ORC for ORM)
		var nteGroup = getSegmentsAfter(msg,seg,&apos;NTE&apos;,true);
		if (nteGroup.length &gt; 0) {
			orc[index].NTE = [];
			var indexNTE = 0;
			for each (nteSeg in nteGroup) {
				orc[index].NTE[indexNTE] = {};

				// NTE.1, setId
				if (nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { orc[index].NTE[indexNTE].setId = nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }

				// NTE.2, sourceOfComment
				if (nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { orc[index].NTE[indexNTE].sourceOfComment = nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }

				// NTE.3, comment
				orc[index].NTE[indexNTE].comment = [];
				for each (field in nteSeg[&apos;NTE.3&apos;]) {
					var block = {};
					if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
						orc[index].NTE[indexNTE].comment.push(field[&apos;NTE.3.1&apos;]);
					}
				}
				if (orc[index].NTE[indexNTE].comment.length == 0) {
					delete orc[index].NTE[indexNTE].comment;
				}

				// clean up NTE and increment index
				if (Object.keys(nte[indexNTE]).length == 0) {
					delete nte[indexNTE];
				} else {
					indexNTE++;
				}
			}
		}

		// CTI (ORC for ORM)
		var ctiGroup = getSegmentsAfter(msg,seg,&apos;CTI&apos;,false);
		if (ctiGroup.length &gt; 0) {
			orc[index].CTI = [];
			var indexCTI = 0;
			for each (ctiSeg in ctiGroup) {
				orc[index].CTI[indexCTI] = {};

				// CTI.1, sponsorStudyIdentifier
				orc[index].CTI[indexCTI].sponsorStudyIdentifier = {};
				if (ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.1&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].sponsorStudyIdentifier.id = ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.1&apos;]; }
				if (ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.2&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].sponsorStudyIdentifier.namespaceId = ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.2&apos;]; }
				if (ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.3&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].sponsorStudyIdentifier.universalId = ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.3&apos;]; }
				if (ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.4&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].sponsorStudyIdentifier.unniveralIdType = ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.4&apos;]; }
				if (Object.keys(orc[index].CTI[indexCTI].sponsorStudyIdentifier).length == 0) {
					delete orc[index].CTI[indexCTI].sponsorStudyIdentifier;
				}

				// CTI.2, studyPhaseIdentifier
				orc[index].CTI[indexCTI].studyPhaseIdentifier = {};
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.1&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.id = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.1&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.2&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.text = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.2&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.3&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.codingSystem = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.3&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.4&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.altId = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.4&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.5&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.altText = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.5&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.6&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.altCodingSystem = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.6&apos;]; }
				if (Object.keys(orc[index].CTI[indexCTI].studyPhaseIdentifier).length == 0) {
					delete orc[index].CTI[indexCTI].studyPhaseIdentifier;
				}

				// CTI.3, studyScheduledTimePoint
				orc[index].CTI[indexCTI].studyScheduledTimePoint = {};
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.1&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.id = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.1&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.2&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.text = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.2&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.3&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.codingSystem = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.3&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.4&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.altId = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.4&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.5&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.altText = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.5&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.6&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.altCodingSystem = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.6&apos;]; }
				if (Object.keys(orc[index].CTI[indexCTI].studyScheduledTimePoint).length == 0) {
					delete orc[index].CTI[indexCTI].studyScheduledTimePoint;
				}

				// clean up CTI and increment index
				if (Object.keys(orc[index].CTI[indexCTI]).length == 0) {
					delete orc[index].CTI[indexCTI];
				} else {
					indexCTI++;
				}
			}
		}

		// BLG (ORC for ORM)
		var blgGroup = getSegmentsAfter(msg,seg,&apos;BLG&apos;,false);
		if (blgGroup.length &gt; 0) {
			orc[index].BLG = [];
			var indexBLG = 0;
			for each (blgSeg in blgGroup) {
				orc[index].BLG[indexBLG] = {}

				// BLG.1, whenToCharge
				orc[index].BLG[indexBLG].whenToCharge = {};
				if (blgSeg[&apos;BLG.1&apos;][&apos;BLG.1.1&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].whenToCharge.whenToChargeCode = blgSeg[&apos;BLG.1&apos;][&apos;BLG.1.1&apos;]; }
				if (blgSeg[&apos;BLG.1&apos;][&apos;BLG.1.2&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].whenToCharge.dateTime = blgSeg[&apos;BLG.1&apos;][&apos;BLG.1.2&apos;]; }
				if (Object.keys(orc[index].BLG[indexBLG].whenToCharge).length == 0) {
					delete orc[index].BLG[indexBLG].whenToCharge;
				}

				// BLG.2, chargeType
				if (blgSeg[&apos;BLG.2&apos;][&apos;BLG.2.1&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].chargeType =  blgSeg[&apos;BLG.2&apos;][&apos;BLG.2.1&apos;];}

				// BLG.3, accountId
				orc[index].BLG[indexBLG].accountId = {};
				if (blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.1&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].accountId.id = blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.1&apos;]; }
				if (blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.2&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].accountId.identifierCheckDigit = blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.2&apos;]; }
				if (blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.3&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].accountId.codeIdentifyingCheckDigitScheme = blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.3&apos;]; }
				orc[index].BLG[indexBLG].accountId.assigningAuthority = {};
				if (blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.4&apos;][&apos;BLG.3.4.1&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].accountId.assigningAuthority.namespaceId = blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.4&apos;][&apos;BLG.3.4.1&apos;]; }
				if (blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.4&apos;][&apos;BLG.3.4.2&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].accountId.assigningAuthority.universalId = blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.4&apos;][&apos;BLG.3.4.2&apos;]; }
				if (blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.4&apos;][&apos;BLG.3.4.3&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].accountId.assigningAuthority.universalIdType = blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.4&apos;][&apos;BLG.3.4.3&apos;]; }
				if (Object.keys(orc[index].BLG[indexBLG].accountId.assigningAuthority).length == 0) {
					if (blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.4&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].accountId.assigningAuthority.namespaceId = blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.4&apos;]; }
					else delete orc[index].BLG[indexBLG].accountId.assigningAuthority;
				}
				if (Object.keys(orc[index].BLG[indexBLG].accountId).length == 0) {
					delete orc[index].BLG[indexBLG].accountId;
				}

				// clean up BLG and increment index
				if (Object.keys(orc[index].BLG[indexBLG]).length == 0) {
					delete orc[index].BLG[indexBLG];
				} else {
					indexBLG++;
				}
			}
		}
		
		// clean up ORC and increment index
		if (Object.keys(orc[index]).length == 0) {
			delete orc[index];
		} else {
			index++;
		}
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// If it has content, add the AL1 segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// ORC
var orc;
if (msg[&apos;ORC&apos;].length() &gt; 0) {
	orc = [];
	var index = 0;
	for each (seg in msg.ORC) {
		orc[index] = {};

		// ORC.1, orderControl
		if (seg[&apos;ORC.1&apos;][&apos;ORC.1.1&apos;].toString() != &quot;&quot;) { orc[index].orderControl = seg[&apos;ORC.1&apos;][&apos;ORC.1.1&apos;]; }

		// ORC.2, placerOrderNumber
		orc[index].placerOrderNumber = {};
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;].toString() != &quot;&quot;) { orc[index].placerOrderNumber.id = seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;].toString() != &quot;&quot;) { orc[index].placerOrderNumber.namespaceId = seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;].toString() != &quot;&quot;) { orc[index].placerOrderNumber.universalId = seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;].toString() != &quot;&quot;) { orc[index].placerOrderNumber.universalIdType = seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;]; }
		if (Object.keys(orc[index].placerOrderNumber).length == 0) {
			delete orc[index].placerOrderNumber;
		}

		// ORC.3, fillerOrderNumber
		orc[index].fillerOrderNumber = {};
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;].toString() != &quot;&quot;) { orc[index].fillerOrderNumber.id = seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;].toString() != &quot;&quot;) { orc[index].fillerOrderNumber.namespaceId = seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;].toString() != &quot;&quot;) { orc[index].fillerOrderNumber.universalId = seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;].toString() != &quot;&quot;) { orc[index].fillerOrderNumber.universalIdType = seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;]; }
		if (Object.keys(orc[index].fillerOrderNumber).length == 0) {
			delete orc[index].fillerOrderNumber;
		}

		// ORC.4, placerGroupNumber
		orc[index].placerGroupNumber = {};
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;].toString() != &quot;&quot;) { orc[index].placerGroupNumber.id = seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;].toString() != &quot;&quot;) { orc[index].placerGroupNumber.namespaceId = seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;].toString() != &quot;&quot;) { orc[index].placerGroupNumber.universalId = seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;].toString() != &quot;&quot;) { orc[index].placerGroupNumber.universalIdType = seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;]; }
		if (Object.keys(orc[index].placerGroupNumber).length == 0) {
			delete orc[index].placerGroupNumber;
		}

		// ORC.5, orderStatus
		if (seg[&apos;ORC.5&apos;][&apos;ORC.5.1&apos;].toString() != &quot;&quot;) { orc[index].orderStatus = seg[&apos;ORC.5&apos;][&apos;ORC.5.1&apos;]; }

		// ORC.6, responseFlag
		if (seg[&apos;ORC.6&apos;][&apos;ORC.6.1&apos;].toString() != &quot;&quot;) { orc[index].responseFlag = seg[&apos;ORC.6&apos;][&apos;ORC.6.1&apos;]; }

		// ORC.7, timingQuantity
		orc[index].timingQuantity = {};
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.1&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.quantity = seg[&apos;ORC.7&apos;][&apos;ORC.7.1&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.2&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.interval = seg[&apos;ORC.7&apos;][&apos;ORC.7.2&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.3&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.duration = seg[&apos;ORC.7&apos;][&apos;ORC.7.3&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.4&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.startDateTime = seg[&apos;ORC.7&apos;][&apos;ORC.7.4&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.5&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.endDateTime = seg[&apos;ORC.7&apos;][&apos;ORC.7.5&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.6&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.priority = seg[&apos;ORC.7&apos;][&apos;ORC.7.6&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.7&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.condition = seg[&apos;ORC.7&apos;][&apos;ORC.7.7&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.8&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.text = seg[&apos;ORC.7&apos;][&apos;ORC.7.8&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.9&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.conjunction = seg[&apos;ORC.7&apos;][&apos;ORC.7.9&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.10&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.orderSequencing = seg[&apos;ORC.7&apos;][&apos;ORC.7.10&apos;]; }
		if (Object.keys(orc[index].timingQuantity).length == 0) {
			delete orc[index].timingQuantity;
		}

		// ORC.8, parentOrder
		orc[index].parentOrder = {};
		orc[index].parentOrder.parentsPlacerOrderNumber = {};
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.1&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.id = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.1&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.2&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.namespaceId = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.2&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.3&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.universalId = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.3&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.4&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.universalIdType = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.4&apos;]; }
		if (Object.keys(orc[index].parentOrder.parentsPlacerOrderNumber).length == 0) {
			if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.id = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;]; }
			else delete orc[index].parentOrder.parentsPlacerOrderNumber;
		}
		orc[index].parentOrder.parentsFillerOrderNumber = {};
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.1&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.id = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.1&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.2&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.namespaceId = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.2&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.3&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.universalId = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.3&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.4&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.universalIdType = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.4&apos;]; }
		if (Object.keys(orc[index].parentOrder.parentsFillerOrderNumber).length == 0) {
			if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.id = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;]; }
			else delete orc[index].parentOrder.parentsFillerOrderNumber;
		}
		if (Object.keys(orc[index].parentOrder).length == 0) {
			delete orc[index].parentOrder;
		}

		// ORC.9, transactionDateTime
		if (seg[&apos;ORC.9&apos;][&apos;ORC.9.1&apos;].toString() != &quot;&quot;) { orc[index].transactionDateTime = seg[&apos;ORC.9&apos;][&apos;ORC.9.1&apos;]; }

		// ORC.10, enteredBy
		orc[index].enteredBy = {};
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.1&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.1&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.2&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.lastName = seg[&apos;ORC.10&apos;][&apos;ORC.10.2&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.3&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.firstName = seg[&apos;ORC.10&apos;][&apos;ORC.10.3&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.4&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.middleInitOrName = seg[&apos;ORC.10&apos;][&apos;ORC.10.4&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.5&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.suffix = seg[&apos;ORC.10&apos;][&apos;ORC.10.5&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.6&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.prefix = seg[&apos;ORC.10&apos;][&apos;ORC.10.6&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.7&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.degree = seg[&apos;ORC.10&apos;][&apos;ORC.10.7&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.8&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.sourceTable = seg[&apos;ORC.10&apos;][&apos;ORC.10.8&apos;]; }
		orc[index].enteredBy.assigningAuthority = {};
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.1&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningAuthority.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.1&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.2&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningAuthority.universalId = seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.2&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.3&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningAuthority.universalIdType = seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.3&apos;]; }
		if (Object.keys(orc[index].enteredBy.assigningAuthority).length == 0) {
			if (seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningAuthority.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;]; }
			else delete orc[index].enteredBy.assigningAuthority;
		}
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.10&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.nameTypeCode = seg[&apos;ORC.10&apos;][&apos;ORC.10.10&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.11&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.identifierCheckDigit = seg[&apos;ORC.10&apos;][&apos;ORC.10.11&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.12&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.codeIdentifyingCheckDigitScheme = seg[&apos;ORC.10&apos;][&apos;ORC.10.12&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.13&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.identifierTypeCode = seg[&apos;ORC.10&apos;][&apos;ORC.10.13&apos;]; }
		orc[index].enteredBy.assigningFacility = {};
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.1&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningFacility.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.1&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.2&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningFacility.universalId = seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.2&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.3&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningFacility.universalIdType = seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.3&apos;]; }
		if (Object.keys(orc[index].enteredBy.assigningFacility).length == 0) {
			if (seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningFacility.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;]; }
			else delete orc[index].enteredBy.assigningFacility;
		}
		if (Object.keys(orc[index].enteredBy).length == 0) {
			delete orc[index].enteredBy;
		}

		// ORC.11, verifiedBy
		orc[index].verifiedBy = {};
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.1&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.1&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.2&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.lastName = seg[&apos;ORC.11&apos;][&apos;ORC.11.2&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.3&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.firstName = seg[&apos;ORC.11&apos;][&apos;ORC.11.3&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.4&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.middleInitOrName = seg[&apos;ORC.11&apos;][&apos;ORC.11.4&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.5&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.suffix = seg[&apos;ORC.11&apos;][&apos;ORC.11.5&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.6&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.prefix = seg[&apos;ORC.11&apos;][&apos;ORC.11.6&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.7&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.degree = seg[&apos;ORC.11&apos;][&apos;ORC.11.7&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.8&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.sourceTable = seg[&apos;ORC.11&apos;][&apos;ORC.11.8&apos;]; }
		orc[index].verifiedBy.assigningAuthority = {};
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.1&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningAuthority.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.1&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.2&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningAuthority.universalId = seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.2&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.3&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningAuthority.universalIdType = seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.3&apos;]; }
		if (Object.keys(orc[index].verifiedBy.assigningAuthority).length == 0) {
			if (seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningAuthority.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;]; }
			else delete orc[index].verifiedBy.assigningAuthority;
		}
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.10&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.nameTypeCode = seg[&apos;ORC.11&apos;][&apos;ORC.11.10&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.11&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.identifierCheckDigit = seg[&apos;ORC.11&apos;][&apos;ORC.11.11&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.12&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.codeIdentifyingCheckDigitScheme = seg[&apos;ORC.11&apos;][&apos;ORC.11.12&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.13&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.identifierTypeCode = seg[&apos;ORC.11&apos;][&apos;ORC.11.13&apos;]; }
		orc[index].verifiedBy.assigningFacility = {};
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.1&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningFacility.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.1&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.2&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningFacility.universalId = seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.2&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.3&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningFacility.universalIdType = seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.3&apos;]; }
		if (Object.keys(orc[index].verifiedBy.assigningFacility).length == 0) {
			if (seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningFacility.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;]; }
			else delete orc[index].verifiedBy.assigningFacility;
		}
		if (Object.keys(orc[index].verifiedBy).length == 0) {
			delete orc[index].verifiedBy;
		}

		// ORC.12, orderingProvider
		orc[index].orderingProvider = {};
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.1&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.1&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.2&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.lastName = seg[&apos;ORC.12&apos;][&apos;ORC.12.2&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.3&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.firstName = seg[&apos;ORC.12&apos;][&apos;ORC.12.3&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.4&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.middleInitOrName = seg[&apos;ORC.12&apos;][&apos;ORC.12.4&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.5&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.suffix = seg[&apos;ORC.12&apos;][&apos;ORC.12.5&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.6&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.prefix = seg[&apos;ORC.12&apos;][&apos;ORC.12.6&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.7&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.degree = seg[&apos;ORC.12&apos;][&apos;ORC.12.7&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.8&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.sourceTable = seg[&apos;ORC.12&apos;][&apos;ORC.12.8&apos;]; }
		orc[index].orderingProvider.assigningAuthority = {};
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.1&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningAuthority.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.1&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.2&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningAuthority.universalId = seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.2&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.3&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningAuthority.universalIdType = seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.3&apos;]; }
		if (Object.keys(orc[index].orderingProvider.assigningAuthority).length == 0) {
			if (seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningAuthority.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;]; }
			else delete orc[index].orderingProvider.assigningAuthority;
		}
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.10&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.nameTypeCode = seg[&apos;ORC.12&apos;][&apos;ORC.12.10&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.11&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.identifierCheckDigit = seg[&apos;ORC.12&apos;][&apos;ORC.12.11&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.12&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.codeIdentifyingCheckDigitScheme = seg[&apos;ORC.12&apos;][&apos;ORC.12.12&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.13&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.identifierTypeCode = seg[&apos;ORC.12&apos;][&apos;ORC.12.13&apos;]; }
		orc[index].orderingProvider.assigningFacility = {};
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.1&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningFacility.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.1&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.2&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningFacility.universalId = seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.2&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.3&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningFacility.universalIdType = seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.3&apos;]; }
		if (Object.keys(orc[index].orderingProvider.assigningFacility).length == 0) {
			if (seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningFacility.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;]; }
			else delete orc[index].orderingProvider.assigningFacility;
		}
		if (Object.keys(orc[index].orderingProvider).length == 0) {
			delete orc[index].orderingProvider;
		}

		// ORC.13, enterersLocation
		orc[index].enterersLocation = {};
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.1&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.pointOfCare = seg[&apos;ORC.13&apos;][&apos;ORC.13.1&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.2&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.room = seg[&apos;ORC.13&apos;][&apos;ORC.13.2&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.3&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.bed = seg[&apos;ORC.13&apos;][&apos;ORC.13.3&apos;]; }
		orc[index].enterersLocation.facility = {};
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.1&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.facility.nameSpaceId =  seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.1&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.2&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.facility.universalId =  seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.2&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.3&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.facility.universalIdType =  seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.3&apos;]; }
		if (Object.keys(orc[index].enterersLocation.facility).length == 0) {
			if (seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.facility.nameSpaceId = seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;]; }
			else delete orc[index].enterersLocation.facility;
		}
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.5&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.locationStatus = seg[&apos;ORC.13&apos;][&apos;ORC.13.5&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.6&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.personLocationType = seg[&apos;ORC.13&apos;][&apos;ORC.13.6&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.7&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.building = seg[&apos;ORC.13&apos;][&apos;ORC.13.7&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.8&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.floor = seg[&apos;ORC.13&apos;][&apos;ORC.13.8&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.9&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.locationDescription = seg[&apos;ORC.13&apos;][&apos;ORC.13.9&apos;]; }
		if (Object.keys(orc[index].enterersLocation).length == 0) {
			delete orc[index].enterersLocation;
		}

		// ORC.14, callBackPhoneNumber
		orc[index].callBackPhoneNumber = [];
		for each (field in seg[&apos;ORC.14&apos;]) {
			var block = {};
			if (field[&apos;ORC.14.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;ORC.14.1&apos;]; }
			if (field[&apos;ORC.14.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;ORC.14.2&apos;]; }
			if (field[&apos;ORC.14.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;ORC.14.3&apos;]; }
			if (field[&apos;ORC.14.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;ORC.14.4&apos;]; }
			if (field[&apos;ORC.14.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;ORC.14.5&apos;]; }
			if (field[&apos;ORC.14.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;ORC.14.6&apos;]; }
			if (field[&apos;ORC.14.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;ORC.14.7&apos;]; }
			if (field[&apos;ORC.14.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;ORC.14.8&apos;]; }
			if (field[&apos;ORC.14.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;ORC.14.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				orc[index].callBackPhoneNumber.push(block);
			}
		}
		if (orc[index].callBackPhoneNumber.length == 0) {
			delete orc[index].callBackPhoneNumber;
		}

		// ORC.15, orderEffectiveDateTime
		if (seg[&apos;ORC.15&apos;][&apos;ORC.15.1&apos;].toString() != &quot;&quot;) { orc[index].orderEffectiveDateTime = seg[&apos;ORC.15&apos;][&apos;ORC.15.1&apos;]; }

		// ORC.16, orderControlCodeReason
		orc[index].orderControlCodeReason = {};
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.1&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.id = seg[&apos;ORC.16&apos;][&apos;ORC.16.1&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.2&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.text = seg[&apos;ORC.16&apos;][&apos;ORC.16.2&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.3&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.codingSystem = seg[&apos;ORC.16&apos;][&apos;ORC.16.3&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.4&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.altId = seg[&apos;ORC.16&apos;][&apos;ORC.16.4&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.5&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.altText = seg[&apos;ORC.16&apos;][&apos;ORC.16.5&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.6&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.altCodingSystem = seg[&apos;ORC.16&apos;][&apos;ORC.16.6&apos;]; }
		if (Object.keys(orc[index].orderControlCodeReason).length == 0) {
			delete orc[index].orderControlCodeReason;
		}

		// ORC.17, enteringOrganization
		orc[index].enteringOrganization = {};
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.1&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.id = seg[&apos;ORC.17&apos;][&apos;ORC.17.1&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.2&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.text = seg[&apos;ORC.17&apos;][&apos;ORC.17.2&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.3&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.codingSystem = seg[&apos;ORC.17&apos;][&apos;ORC.17.3&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.4&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.altId = seg[&apos;ORC.17&apos;][&apos;ORC.17.4&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.5&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.altText = seg[&apos;ORC.17&apos;][&apos;ORC.17.5&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.6&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.altCodingSystem = seg[&apos;ORC.17&apos;][&apos;ORC.17.6&apos;]; }
		if (Object.keys(orc[index].enteringOrganization).length == 0) {
			delete orc[index].enteringOrganization;
		}

		// ORC.18, enteringDevice
		orc[index].enteringDevice = {};
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.1&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.id = seg[&apos;ORC.18&apos;][&apos;ORC.18.1&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.2&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.text = seg[&apos;ORC.18&apos;][&apos;ORC.18.2&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.3&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.codingSystem = seg[&apos;ORC.18&apos;][&apos;ORC.18.3&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.4&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.altId = seg[&apos;ORC.18&apos;][&apos;ORC.18.4&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.5&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.altText = seg[&apos;ORC.18&apos;][&apos;ORC.18.5&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.6&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.altCodingSystem = seg[&apos;ORC.18&apos;][&apos;ORC.18.6&apos;]; }
		if (Object.keys(orc[index].enteringDevice).length == 0) {
			delete orc[index].enteringDevice;
		}

		// ORC.19, actionBy
		orc[index].actionBy = {};
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.1&apos;].toString() != &quot;&quot;) { orc[index].actionBy.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.1&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.2&apos;].toString() != &quot;&quot;) { orc[index].actionBy.lastName = seg[&apos;ORC.19&apos;][&apos;ORC.19.2&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.3&apos;].toString() != &quot;&quot;) { orc[index].actionBy.firstName = seg[&apos;ORC.19&apos;][&apos;ORC.19.3&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.4&apos;].toString() != &quot;&quot;) { orc[index].actionBy.middleInitOrName = seg[&apos;ORC.19&apos;][&apos;ORC.19.4&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.5&apos;].toString() != &quot;&quot;) { orc[index].actionBy.suffix = seg[&apos;ORC.19&apos;][&apos;ORC.19.5&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.6&apos;].toString() != &quot;&quot;) { orc[index].actionBy.prefix = seg[&apos;ORC.19&apos;][&apos;ORC.19.6&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.7&apos;].toString() != &quot;&quot;) { orc[index].actionBy.degree = seg[&apos;ORC.19&apos;][&apos;ORC.19.7&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.8&apos;].toString() != &quot;&quot;) { orc[index].actionBy.sourceTable = seg[&apos;ORC.19&apos;][&apos;ORC.19.8&apos;]; }
		orc[index].actionBy.assigningAuthority = {};
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.1&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningAuthority.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.1&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.2&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningAuthority.universalId = seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.2&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.3&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningAuthority.universalIdType = seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.3&apos;]; }
		if (Object.keys(orc[index].actionBy.assigningAuthority).length == 0) {
			if (seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningAuthority.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;]; }
			else delete orc[index].actionBy.assigningAuthority;
		}
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.10&apos;].toString() != &quot;&quot;) { orc[index].actionBy.nameTypeCode = seg[&apos;ORC.19&apos;][&apos;ORC.19.10&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.11&apos;].toString() != &quot;&quot;) { orc[index].actionBy.identifierCheckDigit = seg[&apos;ORC.19&apos;][&apos;ORC.19.11&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.12&apos;].toString() != &quot;&quot;) { orc[index].actionBy.codeIdentifyingCheckDigitScheme = seg[&apos;ORC.19&apos;][&apos;ORC.19.12&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.13&apos;].toString() != &quot;&quot;) { orc[index].actionBy.identifierTypeCode = seg[&apos;ORC.19&apos;][&apos;ORC.19.13&apos;]; }
		orc[index].actionBy.assigningFacility = {};
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.1&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningFacility.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.1&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.2&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningFacility.universalId = seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.2&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.3&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningFacility.universalIdType = seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.3&apos;]; }
		if (Object.keys(orc[index].actionBy.assigningFacility).length == 0) {
			if (seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningFacility.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;]; }
			else delete orc[index].actionBy.assigningFacility;
		}
		if (Object.keys(orc[index].actionBy).length == 0) {
			delete orc[index].actionBy;
		}

		// NTE (ORC for ORM)
		var nteGroup = getSegmentsAfter(msg,seg,&apos;NTE&apos;,true);
		if (nteGroup.length &gt; 0) {
			orc[index].NTE = [];
			var indexNTE = 0;
			for each (nteSeg in nteGroup) {
				orc[index].NTE[indexNTE] = {};

				// NTE.1, setId
				if (nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { orc[index].NTE[indexNTE].setId = nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }

				// NTE.2, sourceOfComment
				if (nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { orc[index].NTE[indexNTE].sourceOfComment = nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }

				// NTE.3, comment
				orc[index].NTE[indexNTE].comment = [];
				for each (field in nteSeg[&apos;NTE.3&apos;]) {
					var block = {};
					if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
						orc[index].NTE[indexNTE].comment.push(field[&apos;NTE.3.1&apos;]);
					}
				}
				if (orc[index].NTE[indexNTE].comment.length == 0) {
					delete orc[index].NTE[indexNTE].comment;
				}

				// clean up NTE and increment index
				if (Object.keys(nte[indexNTE]).length == 0) {
					delete nte[indexNTE];
				} else {
					indexNTE++;
				}
			}
		}

		// CTI (ORC for ORM)
		var ctiGroup = getSegmentsAfter(msg,seg,&apos;CTI&apos;,false);
		if (ctiGroup.length &gt; 0) {
			orc[index].CTI = [];
			var indexCTI = 0;
			for each (ctiSeg in ctiGroup) {
				orc[index].CTI[indexCTI] = {};

				// CTI.1, sponsorStudyIdentifier
				orc[index].CTI[indexCTI].sponsorStudyIdentifier = {};
				if (ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.1&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].sponsorStudyIdentifier.id = ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.1&apos;]; }
				if (ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.2&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].sponsorStudyIdentifier.namespaceId = ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.2&apos;]; }
				if (ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.3&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].sponsorStudyIdentifier.universalId = ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.3&apos;]; }
				if (ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.4&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].sponsorStudyIdentifier.unniveralIdType = ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.4&apos;]; }
				if (Object.keys(orc[index].CTI[indexCTI].sponsorStudyIdentifier).length == 0) {
					delete orc[index].CTI[indexCTI].sponsorStudyIdentifier;
				}

				// CTI.2, studyPhaseIdentifier
				orc[index].CTI[indexCTI].studyPhaseIdentifier = {};
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.1&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.id = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.1&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.2&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.text = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.2&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.3&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.codingSystem = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.3&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.4&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.altId = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.4&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.5&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.altText = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.5&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.6&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.altCodingSystem = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.6&apos;]; }
				if (Object.keys(orc[index].CTI[indexCTI].studyPhaseIdentifier).length == 0) {
					delete orc[index].CTI[indexCTI].studyPhaseIdentifier;
				}

				// CTI.3, studyScheduledTimePoint
				orc[index].CTI[indexCTI].studyScheduledTimePoint = {};
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.1&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.id = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.1&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.2&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.text = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.2&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.3&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.codingSystem = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.3&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.4&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.altId = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.4&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.5&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.altText = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.5&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.6&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.altCodingSystem = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.6&apos;]; }
				if (Object.keys(orc[index].CTI[indexCTI].studyScheduledTimePoint).length == 0) {
					delete orc[index].CTI[indexCTI].studyScheduledTimePoint;
				}

				// clean up CTI and increment index
				if (Object.keys(orc[index].CTI[indexCTI]).length == 0) {
					delete orc[index].CTI[indexCTI];
				} else {
					indexCTI++;
				}
			}
		}

		// BLG (ORC for ORM)
		var blgGroup = getSegmentsAfter(msg,seg,&apos;BLG&apos;,false);
		if (blgGroup.length &gt; 0) {
			orc[index].BLG = [];
			var indexBLG = 0;
			for each (blgSeg in blgGroup) {
				orc[index].BLG[indexBLG] = {}

				// BLG.1, whenToCharge
				orc[index].BLG[indexBLG].whenToCharge = {};
				if (blgSeg[&apos;BLG.1&apos;][&apos;BLG.1.1&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].whenToCharge.whenToChargeCode = blgSeg[&apos;BLG.1&apos;][&apos;BLG.1.1&apos;]; }
				if (blgSeg[&apos;BLG.1&apos;][&apos;BLG.1.2&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].whenToCharge.dateTime = blgSeg[&apos;BLG.1&apos;][&apos;BLG.1.2&apos;]; }
				if (Object.keys(orc[index].BLG[indexBLG].whenToCharge).length == 0) {
					delete orc[index].BLG[indexBLG].whenToCharge;
				}

				// BLG.2, chargeType
				if (blgSeg[&apos;BLG.2&apos;][&apos;BLG.2.1&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].chargeType =  blgSeg[&apos;BLG.2&apos;][&apos;BLG.2.1&apos;];}

				// BLG.3, accountId
				orc[index].BLG[indexBLG].accountId = {};
				if (blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.1&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].accountId.id = blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.1&apos;]; }
				if (blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.2&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].accountId.identifierCheckDigit = blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.2&apos;]; }
				if (blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.3&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].accountId.codeIdentifyingCheckDigitScheme = blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.3&apos;]; }
				orc[index].BLG[indexBLG].accountId.assigningAuthority = {};
				if (blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.4&apos;][&apos;BLG.3.4.1&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].accountId.assigningAuthority.namespaceId = blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.4&apos;][&apos;BLG.3.4.1&apos;]; }
				if (blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.4&apos;][&apos;BLG.3.4.2&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].accountId.assigningAuthority.universalId = blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.4&apos;][&apos;BLG.3.4.2&apos;]; }
				if (blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.4&apos;][&apos;BLG.3.4.3&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].accountId.assigningAuthority.universalIdType = blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.4&apos;][&apos;BLG.3.4.3&apos;]; }
				if (Object.keys(orc[index].BLG[indexBLG].accountId.assigningAuthority).length == 0) {
					if (blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.4&apos;].toString() != &quot;&quot;) { orc[index].BLG[indexBLG].accountId.assigningAuthority.namespaceId = blgSeg[&apos;BLG.3&apos;][&apos;BLG.3.4&apos;]; }
					else delete orc[index].BLG[indexBLG].accountId.assigningAuthority;
				}
				if (Object.keys(orc[index].BLG[indexBLG].accountId).length == 0) {
					delete orc[index].BLG[indexBLG].accountId;
				}

				// clean up BLG and increment index
				if (Object.keys(orc[index].BLG[indexBLG]).length == 0) {
					delete orc[index].BLG[indexBLG];
				} else {
					indexBLG++;
				}
			}
		}
		
		// clean up ORC and increment index
		if (Object.keys(orc[index]).length == 0) {
			delete orc[index];
		} else {
			index++;
		}
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// If it has content, add the AL1 segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>12</sequenceNumber>
          <name>--OBR (Observation Request) Segment - REQUIRES ORC MAPPING STEP ABOVE</name>
          <script>// Pull out the ORC JSON to embed the OBR segments in
var orc = JSON.parse($(&apos;hl7JSON&apos;)).content.ORC;

// ORC is a required to have a OBR, but if the ORC was blank and was removed from the JSON, just create a new one to add the OBR into
if (!orc) {
	orc = [{}];
}

// ORC
if (msg[&apos;ORC&apos;].length() &gt; 0) {
	var index = 0;
	for each (seg in msg.ORC) {

		// OBR (ORC for ORM)
		var obrGroup = getSegmentsAfter(msg,seg,&apos;OBR&apos;,false);
		if (obrGroup.length &gt; 0) {
			orc[index].OBR = [];
			var indexOBR = 0;
			for each (obrSeg in obrGroup) {
				orc[index].OBR[indexOBR] = {};

				// OBR.1, setId
				if (obrSeg[&apos;OBR.1&apos;][&apos;OBR.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].setId = obrSeg[&apos;OBR.1&apos;][&apos;OBR.1.1&apos;]; }
				
				// OBR.2, placerOrderNumber
				orc[index].OBR[indexOBR].placerOrderNumber = {};
				if (obrSeg[&apos;OBR.2&apos;][&apos;OBR.2.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].placerOrderNumber.id = obrSeg[&apos;OBR.2&apos;][&apos;OBR.2.1&apos;]; }
				if (obrSeg[&apos;OBR.2&apos;][&apos;OBR.2.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].placerOrderNumber.namespaceId = obrSeg[&apos;OBR.2&apos;][&apos;OBR.2.2&apos;]; }
				if (obrSeg[&apos;OBR.2&apos;][&apos;OBR.2.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].placerOrderNumber.universalId = obrSeg[&apos;OBR.2&apos;][&apos;OBR.2.3&apos;]; }
				if (obrSeg[&apos;OBR.2&apos;][&apos;OBR.2.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].placerOrderNumber.universalIdType = obrSeg[&apos;OBR.2&apos;][&apos;OBR.2.4&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].placerOrderNumber).length == 0) {
					delete orc[index].placerOrderNumber;
				}

				// OBR.3, fillerOrderNumber
				orc[index].OBR[indexOBR].fillerOrderNumber = {};
				if (obrSeg[&apos;OBR.3&apos;][&apos;OBR.3.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].fillerOrderNumber.id = obrSeg[&apos;OBR.3&apos;][&apos;OBR.3.1&apos;]; }
				if (obrSeg[&apos;OBR.3&apos;][&apos;OBR.3.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].fillerOrderNumber.namespaceId = obrSeg[&apos;OBR.3&apos;][&apos;OBR.3.2&apos;]; }
				if (obrSeg[&apos;OBR.3&apos;][&apos;OBR.3.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].fillerOrderNumber.universalId = obrSeg[&apos;OBR.3&apos;][&apos;OBR.3.3&apos;]; }
				if (obrSeg[&apos;OBR.3&apos;][&apos;OBR.3.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].fillerOrderNumber.universalIdType = obrSeg[&apos;OBR.3&apos;][&apos;OBR.3.4&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].fillerOrderNumber).length == 0) {
					delete orc[index].fillerOrderNumber;
				}
				
				// OBR.4, universalServiceID
				orc[index].OBR[indexOBR].universalServiceID = {};
				if (obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].universalServiceID.id = obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.1&apos;]; }
				if (obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].universalServiceID.text = obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.2&apos;]; }
				if (obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].universalServiceID.codingSystem = obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.3&apos;]; }
				if (obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].universalServiceID.altId = obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.4&apos;]; }
				if (obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].universalServiceID.altText = obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.5&apos;]; }
				if (obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].universalServiceID.altCodingSystem = obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.6&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].universalServiceID).length == 0) {
					delete orc[index].OBR[indexOBR].universalServiceID;
				}

				// OBR.5, priority
				if (obrSeg[&apos;OBR.5&apos;][&apos;OBR.5.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].priority = obrSeg[&apos;OBR.5&apos;][&apos;OBR.5.1&apos;]; }
				
				// OBR.6, requestedDatetime
				if (obrSeg[&apos;OBR.6&apos;][&apos;OBR.6.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].requestedDatetime = obrSeg[&apos;OBR.6&apos;][&apos;OBR.6.1&apos;]; }
				
				// OBR.7, observationDateTime
				if (obrSeg[&apos;OBR.7&apos;][&apos;OBR.7.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].observationDateTime = obrSeg[&apos;OBR.7&apos;][&apos;OBR.7.1&apos;]; }
				
				// OBR.8, observationEndDateTime
				if (obrSeg[&apos;OBR.8&apos;][&apos;OBR.8.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].observationEndDateTime = obrSeg[&apos;OBR.8&apos;][&apos;OBR.8.1&apos;]; }
				
				// OBR.9, collectionVolume
				orc[index].OBR[indexOBR].collectionVolume = {};
				if (obrSeg[&apos;OBR.9&apos;][&apos;OBR.9.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].collectionVolume.quantity = obrSeg[&apos;OBR.9&apos;][&apos;OBR.9.1&apos;]; }
				if (obrSeg[&apos;OBR.9&apos;][&apos;OBR.9.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].collectionVolume.units = obrSeg[&apos;OBR.9&apos;][&apos;OBR.9.2&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].collectionVolume).length == 0) {
					delete orc[index].OBR[indexOBR].collectionVolume;
				}

				// OBR.10, collectorIdentifier
				orc[index].OBR[indexOBR].collectorIdentifier = [];
				for each (field in obrSeg[&apos;OBR.10&apos;]) {
					var block = {};
					if (field[&apos;OBR.10.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.10.1&apos;]; }
					if (field[&apos;OBR.10.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;OBR.10.2&apos;]; }
					if (field[&apos;OBR.10.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;OBR.10.3&apos;]; }
					if (field[&apos;OBR.10.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;OBR.10.4&apos;]; }
					if (field[&apos;OBR.10.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;OBR.10.5&apos;]; }
					if (field[&apos;OBR.10.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;OBR.10.6&apos;]; }
					if (field[&apos;OBR.10.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;OBR.10.7&apos;]; }
					if (field[&apos;OBR.10.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;OBR.10.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;OBR.10.9&apos;][&apos;OBR.10.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.10.9&apos;][&apos;OBR.10.9.1&apos;]; }
					if (field[&apos;OBR.10.9&apos;][&apos;OBR.10.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;OBR.10.9&apos;][&apos;OBR.10.9.2&apos;]; }
					if (field[&apos;OBR.10.9&apos;][&apos;OBR.10.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;OBR.10.9&apos;][&apos;OBR.10.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;OBR.10.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.10.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;OBR.10.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;OBR.10.10&apos;]; }
					if (field[&apos;OBR.10.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;OBR.10.11&apos;]; }
					if (field[&apos;OBR.10.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;OBR.10.12&apos;]; }
					if (field[&apos;OBR.10.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;OBR.10.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;OBR.10.14&apos;][&apos;OBR.10.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.10.14&apos;][&apos;OBR.10.14.1&apos;]; }
					if (field[&apos;OBR.10.14&apos;][&apos;OBR.10.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;OBR.10.14&apos;][&apos;OBR.10.14.2&apos;]; }
					if (field[&apos;OBR.10.14&apos;][&apos;OBR.10.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;OBR.10.14&apos;][&apos;OBR.10.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;OBR.10.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.10.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].collectorIdentifier.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].collectorIdentifier.length == 0) {
					delete orc[index].OBR[indexOBR].collectorIdentifier;
				}

				// OBR.11, specimenActionCode
				if (obrSeg[&apos;OBR.11&apos;][&apos;OBR.11.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenActionCode = obrSeg[&apos;OBR.11&apos;][&apos;OBR.11.1&apos;]; }
				
				// OBR.12, dangerCode
				orc[index].OBR[indexOBR].dangerCode = {};
				if (obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].dangerCode.id = obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.1&apos;]; }
				if (obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].dangerCode.text = obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.2&apos;]; }
				if (obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].dangerCode.codingSystem = obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.3&apos;]; }
				if (obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].dangerCode.altId = obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.4&apos;]; }
				if (obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].dangerCode.altText = obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.5&apos;]; }
				if (obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].dangerCode.altCodingSystem = obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.6&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].dangerCode).length == 0) {
					delete orc[index].OBR[indexOBR].dangerCode;
				}
				
				// OBR.13, relevantClinicalInfo
				if (obrSeg[&apos;OBR.13&apos;][&apos;OBR.13.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].relevantClinicalInfo = obrSeg[&apos;OBR.13&apos;][&apos;OBR.13.1&apos;]; }
				
				// OBR.14, specimenReceivedDateTime
				if (obrSeg[&apos;OBR.14&apos;][&apos;OBR.14.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenReceivedDateTime = obrSeg[&apos;OBR.14&apos;][&apos;OBR.14.1&apos;]; }
				
				// OBR.15, specimenSource
				orc[index].OBR[indexOBR].specimenSource = {};
				orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode = {};
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode.id = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.1&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode.text = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.2&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode.codingSystem = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.3&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode.altId = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.4&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode.altText = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.5&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode.altCodingSystem = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.6&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode).length == 0) {
					if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode.id = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;]; }
					else delete orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode;
				}
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.2&apos;].toString() != &quot;&quot;) {
					orc[index].OBR[indexOBR].specimenSource.additives = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.2&apos;];
				}
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.3&apos;].toString() != &quot;&quot;) {
					orc[index].OBR[indexOBR].specimenSource.freetext = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.3&apos;];
				}
				orc[index].OBR[indexOBR].specimenSource.bodySite = {};
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.bodySite.id = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.1&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.bodySite.text = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.2&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.bodySite.codingSystem = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.3&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.bodySite.altId = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.4&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.bodySite.altText = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.5&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.bodySite.altCodingSystem = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.6&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].specimenSource.bodySite).length == 0) {
					if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.bodySite.id = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;]; }
					else delete orc[index].OBR[indexOBR].specimenSource.bodySite;
				}
				orc[index].OBR[indexOBR].specimenSource.siteModifier = {};
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.siteModifier.id = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.1&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.siteModifier.text = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.2&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.siteModifier.codingSystem = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.3&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.siteModifier.altId = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.4&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.siteModifier.altText = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.5&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.siteModifier.altCodingSystem = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.6&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].specimenSource.siteModifier).length == 0) {
					if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.siteModifier.id = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;]; }
					else delete orc[index].OBR[indexOBR].specimenSource.siteModifier;
				}
				orc[index].OBR[indexOBR].specimenSource.collectionMethod = {};
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.collectionMethod.id = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.1&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.collectionMethod.text = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.2&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.collectionMethod.codingSystem = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.3&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.collectionMethod.altId = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.4&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.collectionMethod.altText = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.5&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.collectionMethod.altCodingSystem = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.6&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].specimenSource.collectionMethod).length == 0) {
					if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.collectionMethod.id = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;]; }
					else delete orc[index].OBR[indexOBR].specimenSource.collectionMethod;
				}
				if (Object.keys(orc[index].OBR[indexOBR].specimenSource).length == 0) {
					delete orc[index].OBR[indexOBR].specimenSource;
				}

				// OBR.16, orderingProvider
				orc[index].OBR[indexOBR].orderingProvider = [];
				for each (field in obrSeg[&apos;OBR.16&apos;]) {
					var block = {};
					if (field[&apos;OBR.16.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.16.1&apos;]; }
					if (field[&apos;OBR.16.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;OBR.16.2&apos;]; }
					if (field[&apos;OBR.16.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;OBR.16.3&apos;]; }
					if (field[&apos;OBR.16.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;OBR.16.4&apos;]; }
					if (field[&apos;OBR.16.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;OBR.16.5&apos;]; }
					if (field[&apos;OBR.16.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;OBR.16.6&apos;]; }
					if (field[&apos;OBR.16.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;OBR.16.7&apos;]; }
					if (field[&apos;OBR.16.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;OBR.16.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;OBR.16.9&apos;][&apos;OBR.16.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.16.9&apos;][&apos;OBR.16.9.1&apos;]; }
					if (field[&apos;OBR.16.9&apos;][&apos;OBR.16.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;OBR.16.9&apos;][&apos;OBR.16.9.2&apos;]; }
					if (field[&apos;OBR.16.9&apos;][&apos;OBR.16.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;OBR.16.9&apos;][&apos;OBR.16.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;OBR.16.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.16.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;OBR.16.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;OBR.16.10&apos;]; }
					if (field[&apos;OBR.16.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;OBR.16.11&apos;]; }
					if (field[&apos;OBR.16.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;OBR.16.12&apos;]; }
					if (field[&apos;OBR.16.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;OBR.16.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;OBR.16.14&apos;][&apos;OBR.16.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.16.14&apos;][&apos;OBR.16.14.1&apos;]; }
					if (field[&apos;OBR.16.14&apos;][&apos;OBR.16.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;OBR.16.14&apos;][&apos;OBR.16.14.2&apos;]; }
					if (field[&apos;OBR.16.14&apos;][&apos;OBR.16.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;OBR.16.14&apos;][&apos;OBR.16.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;OBR.16.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.16.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].orderingProvider.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].orderingProvider.length == 0) {
					delete orc[index].OBR[indexOBR].orderingProvider;
				}

				// OBR.17, orderCallbackPhoneNumber
				orc[index].OBR[indexOBR].orderCallbackPhoneNumber = [];
				for each (field in obrSeg[&apos;OBR.17&apos;]) {
					var block = {};
					if (field[&apos;OBR.17.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;OBR.17.1&apos;]; }
					if (field[&apos;OBR.17.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;OBR.17.2&apos;]; }
					if (field[&apos;OBR.17.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;OBR.17.3&apos;]; }
					if (field[&apos;OBR.17.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;OBR.17.4&apos;]; }
					if (field[&apos;OBR.17.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;OBR.17.5&apos;]; }
					if (field[&apos;OBR.17.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;OBR.17.6&apos;]; }
					if (field[&apos;OBR.17.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;OBR.17.7&apos;]; }
					if (field[&apos;OBR.17.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;OBR.17.8&apos;]; }
					if (field[&apos;OBR.17.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;OBR.17.9&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].orderCallbackPhoneNumber.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].orderCallbackPhoneNumber.length == 0) {
					delete orc[index].OBR[indexOBR].orderCallbackPhoneNumber;
				}

				// OBR.18, placerfield1
				if (obrSeg[&apos;OBR.18&apos;][&apos;OBR.18.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].placerfield1 = obrSeg[&apos;OBR.18&apos;][&apos;OBR.18.1&apos;]; }
				
				// OBR.19, placerfield2
				if (obrSeg[&apos;OBR.19&apos;][&apos;OBR.19.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].placerfield2 = obrSeg[&apos;OBR.19&apos;][&apos;OBR.19.1&apos;]; }
				
				// OBR.20, fillerField1
				if (obrSeg[&apos;OBR.20&apos;][&apos;OBR.20.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].fillerField1 = obrSeg[&apos;OBR.20&apos;][&apos;OBR.20.1&apos;]; }
				
				// OBR.21, fillerField2
				if (obrSeg[&apos;OBR.21&apos;][&apos;OBR.21.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].fillerField2 = obrSeg[&apos;OBR.21&apos;][&apos;OBR.21.1&apos;]; }
				
				// OBR.22, resultsRptStatusChngDateTime
				if (obrSeg[&apos;OBR.22&apos;][&apos;OBR.22.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].resultsRptStatusChngDateTime = obrSeg[&apos;OBR.22&apos;][&apos;OBR.22.1&apos;]; }
				
				// OBR.23, chargeToPractice
				orc[index].OBR[indexOBR].chargeToPractice = {};
				orc[index].OBR[indexOBR].chargeToPractice.dollarAmount = {};
				if (obrSeg[&apos;OBR.23&apos;][&apos;OBR.23.1&apos;][&apos;OBR.23.1.1&apos;].toString() !=&quot;&quot;) { orc[index].OBR[indexOBR].chargeToPractice.dollarAmount.quantity = obrSeg[&apos;OBR.23&apos;][&apos;OBR.23.1&apos;][&apos;OBR.23.1.1&apos;]; }
				if (obrSeg[&apos;OBR.23&apos;][&apos;OBR.23.1&apos;][&apos;OBR.23.1.2&apos;].toString() !=&quot;&quot;) { orc[index].OBR[indexOBR].chargeToPractice.dollarAmount.denomination = obrSeg[&apos;OBR.23&apos;][&apos;OBR.23.1&apos;][&apos;OBR.23.1.2&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].chargeToPractice.dollarAmount).length == 0) {
					if (obrSeg[&apos;OBR.23&apos;][&apos;OBR.23.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].chargeToPractice.dollarAmount.quantity = obrSeg[&apos;OBR.23&apos;][&apos;OBR.23.1&apos;]; }
					else delete orc[index].OBR[indexOBR].chargeToPractice.dollarAmount;
				}
				if (Object.keys(orc[index].OBR[indexOBR].chargeToPractice).length == 0) {
					delete orc[index].OBR[indexOBR].chargeToPractice;
				}

				// OBR.24, diagnosticServSectID
				if (obrSeg[&apos;OBR.24&apos;][&apos;OBR.24.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].diagnosticServSectID = obrSeg[&apos;OBR.24&apos;][&apos;OBR.24.1&apos;]; }
				
				// OBR.25, resultStatus
				if (obrSeg[&apos;OBR.25&apos;][&apos;OBR.25.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].resultStatus = obrSeg[&apos;OBR.25&apos;][&apos;OBR.25.1&apos;]; }
				
				// OBR.26, parentResult
				orc[index].OBR[indexOBR].parentResult = {};
				orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult = {};
				if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult.id = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.1&apos;]; }
				if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult.text = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.2&apos;]; }
				if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult.codingSystem = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.3&apos;]; }
				if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult.altId = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.4&apos;]; }
				if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult.altText = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.5&apos;]; }
				if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult.altCodingSystem = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.6&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult).length == 0) {
					if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult.id = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;]; }
					else delete orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult;
				}
				if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx4subIdOfParentResult = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.2&apos;]; }
				if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx5partOfObservationResultFromParent = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.3&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].parentResult).length == 0) {
					delete orc[index].OBR[indexOBR].parentResult;
				}

				// OBR.27, quantityTiming
				orc[index].OBR[indexOBR].quantityTiming = [];
				for each (field in obrSeg[&apos;OBR.27&apos;]) {
					var block = {};
					if (field[&apos;OBR.27.1&apos;].toString() != &quot;&quot;) { block.quantity = field[&apos;OBR.27.1&apos;]; }
					if (field[&apos;OBR.27.2&apos;].toString() != &quot;&quot;) { block.interval = field[&apos;OBR.27.2&apos;]; }
					if (field[&apos;OBR.27.3&apos;].toString() != &quot;&quot;) { block.duration = field[&apos;OBR.27.3&apos;]; }
					if (field[&apos;OBR.27.4&apos;].toString() != &quot;&quot;) { block.startDateTime = field[&apos;OBR.27.4&apos;]; }
					if (field[&apos;OBR.27.5&apos;].toString() != &quot;&quot;) { block.endDateTime = field[&apos;OBR.27.5&apos;]; }
					if (field[&apos;OBR.27.6&apos;].toString() != &quot;&quot;) { block.priority = field[&apos;OBR.27.6&apos;]; }
					if (field[&apos;OBR.27.7&apos;].toString() != &quot;&quot;) { block.condition = field[&apos;OBR.27.7&apos;]; }
					if (field[&apos;OBR.27.8&apos;].toString() != &quot;&quot;) { block.text = field[&apos;OBR.27.8&apos;]; }
					if (field[&apos;OBR.27.9&apos;].toString() != &quot;&quot;) { block.conjunction = field[&apos;OBR.27.9&apos;]; }
					if (field[&apos;OBR.27.10&apos;].toString() != &quot;&quot;) { block.orderSequencing = field[&apos;OBR.27.10&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].quantityTiming.push(block)
					}
				}
				if (orc[index].OBR[indexOBR].quantityTiming.length == 0) {
					delete orc[index].OBR[indexOBR].quantityTiming;
				}

				// OBR.28, resultCopiesTo
				orc[index].OBR[indexOBR].resultCopiesTo = [];
				for each (field in obrSeg[&apos;OBR.28&apos;]) {
					var block = {};
					if (field[&apos;OBR.28.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.28.1&apos;]; }
					if (field[&apos;OBR.28.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;OBR.28.2&apos;]; }
					if (field[&apos;OBR.28.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;OBR.28.3&apos;]; }
					if (field[&apos;OBR.28.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;OBR.28.4&apos;]; }
					if (field[&apos;OBR.28.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;OBR.28.5&apos;]; }
					if (field[&apos;OBR.28.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;OBR.28.6&apos;]; }
					if (field[&apos;OBR.28.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;OBR.28.7&apos;]; }
					if (field[&apos;OBR.28.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;OBR.28.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;OBR.28.9&apos;][&apos;OBR.28.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.28.9&apos;][&apos;OBR.28.9.1&apos;]; }
					if (field[&apos;OBR.28.9&apos;][&apos;OBR.28.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;OBR.28.9&apos;][&apos;OBR.28.9.2&apos;]; }
					if (field[&apos;OBR.28.9&apos;][&apos;OBR.28.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;OBR.28.9&apos;][&apos;OBR.28.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;OBR.28.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.28.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;OBR.28.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;OBR.28.10&apos;]; }
					if (field[&apos;OBR.28.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;OBR.28.11&apos;]; }
					if (field[&apos;OBR.28.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;OBR.28.12&apos;]; }
					if (field[&apos;OBR.28.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;OBR.28.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;OBR.28.14&apos;][&apos;OBR.28.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.28.14&apos;][&apos;OBR.28.14.1&apos;]; }
					if (field[&apos;OBR.28.14&apos;][&apos;OBR.28.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;OBR.28.14&apos;][&apos;OBR.28.14.2&apos;]; }
					if (field[&apos;OBR.28.14&apos;][&apos;OBR.28.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;OBR.28.14&apos;][&apos;OBR.28.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;OBR.28.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.28.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].resultCopiesTo.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].resultCopiesTo.length == 0) {
					delete orc[index].OBR[indexOBR].resultCopiesTo;
				}

				// OBR.29, parent
				orc[index].OBR[indexOBR].parent = {};
				orc[index].OBR[indexOBR].parent.parentsPlacerOrderNumber = {};
				if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;][&apos;OBR.29.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsPlacerOrderNumber.id = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;][&apos;OBR.29.1.1&apos;]; }
				if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;][&apos;OBR.29.1.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsPlacerOrderNumber.namespaceId = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;][&apos;OBR.29.1.2&apos;]; }
				if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;][&apos;OBR.29.1.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsPlacerOrderNumber.universalId = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;][&apos;OBR.29.1.3&apos;]; }
				if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;][&apos;OBR.29.1.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsPlacerOrderNumber.universalIdType = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;][&apos;OBR.29.1.4&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].parent.parentsPlacerOrderNumber).length == 0) {
					if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsPlacerOrderNumber.id = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;]; }
					else delete orc[index].OBR[indexOBR].parent.parentsPlacerOrderNumber;
				}
				orc[index].OBR[indexOBR].parent.parentsFillerOrderNumber = {};
				if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;][&apos;OBR.29.2.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsFillerOrderNumber.id = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;][&apos;OBR.29.2.1&apos;]; }
				if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;][&apos;OBR.29.2.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsFillerOrderNumber.namespaceId = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;][&apos;OBR.29.2.2&apos;]; }
				if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;][&apos;OBR.29.2.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsFillerOrderNumber.universalId = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;][&apos;OBR.29.2.3&apos;]; }
				if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;][&apos;OBR.29.2.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsFillerOrderNumber.universalIdType = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;][&apos;OBR.29.2.4&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].parent.parentsFillerOrderNumber).length == 0) {
					if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsFillerOrderNumber.id = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;]; }
					else delete orc[index].OBR[indexOBR].parent.parentsFillerOrderNumber;
				}
				if (Object.keys(orc[index].OBR[indexOBR].parent).length == 0) {
					delete orc[index].OBR[indexOBR].parent;
				}

				// OBR.30, transportationMode
				if (obrSeg[&apos;OBR.30&apos;][&apos;OBR.30.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].transportationMode = obrSeg[&apos;OBR.30&apos;][&apos;OBR.30.1&apos;]; }
				
				// OBR.31, reasonForStudy
				orc[index].OBR[indexOBR].reasonForStudy = [];
				for each (field in obrSeg[&apos;OBR.31&apos;]) {
					var block = {};
					if (field[&apos;OBR.31.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.31.1&apos;]; }
					if (field[&apos;OBR.31.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;OBR.31.2&apos;]; }
					if (field[&apos;OBR.31.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;OBR.31.3&apos;]; }
					if (field[&apos;OBR.31.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;OBR.31.4&apos;]; }
					if (field[&apos;OBR.31.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;OBR.31.5&apos;]; }
					if (field[&apos;OBR.31.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;OBR.31.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].reasonForStudy.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].reasonForStudy.length == 0) {
					delete orc[index].OBR[indexOBR].reasonForStudy;
				}

				// OBR.32, principalResultInterpreter
				orc[index].OBR[indexOBR].principalResultInterpreter = {};
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.id = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.1&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.lastName = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.2&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.firstName = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.3&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.middleInitOrName = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.4&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.suffix = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.5&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.prefix = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.6&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.7&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.degree = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.7&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.8&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.sourceTable = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.8&apos;]; }
				orc[index].OBR[indexOBR].principalResultInterpreter.assigningAuthority = {};
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.9&apos;][&apos;OBR.32.9.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.assigningAuthority.id = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.9&apos;][&apos;OBR.32.9.1&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.9&apos;][&apos;OBR.32.9.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.assigningAuthority.universalId = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.9&apos;][&apos;OBR.32.9.2&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.9&apos;][&apos;OBR.32.9.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.assigningAuthority.universalIdType = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.9&apos;][&apos;OBR.32.9.3&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].principalResultInterpreter.assigningAuthority).length == 0) {
					if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.9&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.assigningAuthority.id = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.9&apos;]; }
					else delete orc[index].OBR[indexOBR].principalResultInterpreter.assigningAuthority;
				}
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.10&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.nameTypeCode = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.10&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.11&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.identifierCheckDigit = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.11&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.12&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.codeIdentifyingCheckDigitScheme = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.12&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.13&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.identifierTypeCode = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.13&apos;]; }
				orc[index].OBR[indexOBR].principalResultInterpreter.assigningFacility = {};
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.14&apos;][&apos;OBR.32.14.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.assigningFacility.id = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.14&apos;][&apos;OBR.32.14.1&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.14&apos;][&apos;OBR.32.14.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.assigningFacility.universalId = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.14&apos;][&apos;OBR.32.14.2&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.14&apos;][&apos;OBR.32.14.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.assigningFacility.universalIdType = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.14&apos;][&apos;OBR.32.14.3&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].principalResultInterpreter.assigningFacility).length == 0) {
					if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.14&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.assigningFacility.id = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.14&apos;]; }
					else delete orc[index].OBR[indexOBR].principalResultInterpreter.assigningFacility;
				}
				if (Object.keys(orc[index].OBR[indexOBR].principalResultInterpreter).length == 0) {
					delete orc[index].OBR[indexOBR].principalResultInterpreter;
				}

				// OBR.33, assistantResultInterpreter
				orc[index].OBR[indexOBR].assistantResultInterpreter = [];
				for each (field in obrSeg[&apos;OBR.33&apos;]) {
					var block = {};
					if (field[&apos;OBR.33.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.33.1&apos;]; }
					if (field[&apos;OBR.33.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;OBR.33.2&apos;]; }
					if (field[&apos;OBR.33.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;OBR.33.3&apos;]; }
					if (field[&apos;OBR.33.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;OBR.33.4&apos;]; }
					if (field[&apos;OBR.33.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;OBR.33.5&apos;]; }
					if (field[&apos;OBR.33.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;OBR.33.6&apos;]; }
					if (field[&apos;OBR.33.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;OBR.33.7&apos;]; }
					if (field[&apos;OBR.33.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;OBR.33.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;OBR.33.9&apos;][&apos;OBR.33.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.33.9&apos;][&apos;OBR.33.9.1&apos;]; }
					if (field[&apos;OBR.33.9&apos;][&apos;OBR.33.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;OBR.33.9&apos;][&apos;OBR.33.9.2&apos;]; }
					if (field[&apos;OBR.33.9&apos;][&apos;OBR.33.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;OBR.33.9&apos;][&apos;OBR.33.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;OBR.33.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.33.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;OBR.33.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;OBR.33.10&apos;]; }
					if (field[&apos;OBR.33.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;OBR.33.11&apos;]; }
					if (field[&apos;OBR.33.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;OBR.33.12&apos;]; }
					if (field[&apos;OBR.33.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;OBR.33.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;OBR.33.14&apos;][&apos;OBR.33.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.33.14&apos;][&apos;OBR.33.14.1&apos;]; }
					if (field[&apos;OBR.33.14&apos;][&apos;OBR.33.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;OBR.33.14&apos;][&apos;OBR.33.14.2&apos;]; }
					if (field[&apos;OBR.33.14&apos;][&apos;OBR.33.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;OBR.33.14&apos;][&apos;OBR.33.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;OBR.33.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.33.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].assistantResultInterpreter.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].assistantResultInterpreter.length == 0) {
					delete orc[index].OBR[indexOBR].assistantResultInterpreter;
				}

				// OBR.34, technician
				orc[index].OBR[indexOBR].technician = [];
				for each (field in obrSeg[&apos;OBR.34&apos;]) {
					var block = {};
					if (field[&apos;OBR.34.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.34.1&apos;]; }
					if (field[&apos;OBR.34.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;OBR.34.2&apos;]; }
					if (field[&apos;OBR.34.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;OBR.34.3&apos;]; }
					if (field[&apos;OBR.34.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;OBR.34.4&apos;]; }
					if (field[&apos;OBR.34.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;OBR.34.5&apos;]; }
					if (field[&apos;OBR.34.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;OBR.34.6&apos;]; }
					if (field[&apos;OBR.34.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;OBR.34.7&apos;]; }
					if (field[&apos;OBR.34.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;OBR.34.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;OBR.34.9&apos;][&apos;OBR.34.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.34.9&apos;][&apos;OBR.34.9.1&apos;]; }
					if (field[&apos;OBR.34.9&apos;][&apos;OBR.34.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;OBR.34.9&apos;][&apos;OBR.34.9.2&apos;]; }
					if (field[&apos;OBR.34.9&apos;][&apos;OBR.34.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;OBR.34.9&apos;][&apos;OBR.34.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;OBR.34.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.34.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;OBR.34.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;OBR.34.10&apos;]; }
					if (field[&apos;OBR.34.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;OBR.34.11&apos;]; }
					if (field[&apos;OBR.34.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;OBR.34.12&apos;]; }
					if (field[&apos;OBR.34.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;OBR.34.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;OBR.34.14&apos;][&apos;OBR.34.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.34.14&apos;][&apos;OBR.34.14.1&apos;]; }
					if (field[&apos;OBR.34.14&apos;][&apos;OBR.34.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;OBR.34.14&apos;][&apos;OBR.34.14.2&apos;]; }
					if (field[&apos;OBR.34.14&apos;][&apos;OBR.34.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;OBR.34.14&apos;][&apos;OBR.34.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].technician.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].technician.length == 0) {
					delete orc[index].OBR[indexOBR].technician;
				}

				// OBR.35, transcriptionist
				orc[index].OBR[indexOBR].transcriptionist = [];
				for each (field in obrSeg[&apos;OBR.35&apos;]) {
					var block = {};
					if (field[&apos;OBR.35.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.35.1&apos;]; }
					if (field[&apos;OBR.35.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;OBR.35.2&apos;]; }
					if (field[&apos;OBR.35.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;OBR.35.3&apos;]; }
					if (field[&apos;OBR.35.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;OBR.35.4&apos;]; }
					if (field[&apos;OBR.35.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;OBR.35.5&apos;]; }
					if (field[&apos;OBR.35.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;OBR.35.6&apos;]; }
					if (field[&apos;OBR.35.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;OBR.35.7&apos;]; }
					if (field[&apos;OBR.35.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;OBR.35.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;OBR.35.9&apos;][&apos;OBR.35.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.35.9&apos;][&apos;OBR.35.9.1&apos;]; }
					if (field[&apos;OBR.35.9&apos;][&apos;OBR.35.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;OBR.35.9&apos;][&apos;OBR.35.9.2&apos;]; }
					if (field[&apos;OBR.35.9&apos;][&apos;OBR.35.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;OBR.35.9&apos;][&apos;OBR.35.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;OBR.35.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.35.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;OBR.35.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;OBR.35.10&apos;]; }
					if (field[&apos;OBR.35.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;OBR.35.11&apos;]; }
					if (field[&apos;OBR.35.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;OBR.35.12&apos;]; }
					if (field[&apos;OBR.35.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;OBR.35.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;OBR.35.14&apos;][&apos;OBR.35.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.35.14&apos;][&apos;OBR.35.14.1&apos;]; }
					if (field[&apos;OBR.35.14&apos;][&apos;OBR.35.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;OBR.35.14&apos;][&apos;OBR.35.14.2&apos;]; }
					if (field[&apos;OBR.35.14&apos;][&apos;OBR.35.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;OBR.35.14&apos;][&apos;OBR.35.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].transcriptionist.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].transcriptionist.length == 0) {
					delete orc[index].OBR[indexOBR].transcriptionist;
				}

				// OBR.36, scheduledDateTime
				if (obrSeg[&apos;OBR.36&apos;][&apos;OBR.36.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].scheduledDateTime = obrSeg[&apos;OBR.36&apos;][&apos;OBR.36.1&apos;]; }
				
				// OBR.37, numberOfSampleContainers
				if (obrSeg[&apos;OBR.37&apos;][&apos;OBR.37.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].numberOfSampleContainers = obrSeg[&apos;OBR.37&apos;][&apos;OBR.37.1&apos;]; }
				
				// OBR.38, transportLogisticsOfCollectedSample
				orc[index].OBR[indexOBR].transportLogisticsOfCollectedSample = [];
				for each (field in obrSeg[&apos;OBR.38&apos;]) {
					var block = {};
					if (field[&apos;OBR.38.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.38.1&apos;]; }
					if (field[&apos;OBR.38.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;OBR.38.2&apos;]; }
					if (field[&apos;OBR.38.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;OBR.38.3&apos;]; }
					if (field[&apos;OBR.38.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;OBR.38.4&apos;]; }
					if (field[&apos;OBR.38.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;OBR.38.5&apos;]; }
					if (field[&apos;OBR.38.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;OBR.38.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].transportLogisticsOfCollectedSample.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].transportLogisticsOfCollectedSample.length == 0) {
					delete orc[index].OBR[indexOBR].transportLogisticsOfCollectedSample;
				}

				// OBR.39, collectorsComment
				orc[index].OBR[indexOBR].collectorsComment = [];
				for each (field in obrSeg[&apos;OBR.39&apos;]) {
					var block = {};
					if (field[&apos;OBR.39.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.39.1&apos;]; }
					if (field[&apos;OBR.39.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;OBR.39.2&apos;]; }
					if (field[&apos;OBR.39.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;OBR.39.3&apos;]; }
					if (field[&apos;OBR.39.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;OBR.39.4&apos;]; }
					if (field[&apos;OBR.39.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;OBR.39.5&apos;]; }
					if (field[&apos;OBR.39.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;OBR.39.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].collectorsComment.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].collectorsComment.length == 0) {
					delete orc[index].OBR[indexOBR].collectorsComment;
				}

				// OBR.40, transportArrangementResponsibility
				orc[index].OBR[indexOBR].transportArrangementResponsibility = {};
				if (obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].transportArrangementResponsibility.id = obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.1&apos;]; }
				if (obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].transportArrangementResponsibility.text = obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.2&apos;]; }
				if (obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].transportArrangementResponsibility.codingSystem = obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.3&apos;]; }
				if (obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].transportArrangementResponsibility.altId = obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.4&apos;]; }
				if (obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].transportArrangementResponsibility.altText = obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.5&apos;]; }
				if (obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].transportArrangementResponsibility.altCodingSystem = obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.6&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].transportArrangementResponsibility).length == 0) {
					delete orc[index].OBR[indexOBR].transportArrangementResponsibility;
				}

				// OBR.41, transportArranged
				if (obrSeg[&apos;OBR.41&apos;][&apos;OBR.41.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].transportArranged = obrSeg[&apos;OBR.41&apos;][&apos;OBR.41.1&apos;]; }
				
				// OBR.42, escortRequired
				if (obrSeg[&apos;OBR.42&apos;][&apos;OBR.42.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].escortRequired = obrSeg[&apos;OBR.42&apos;][&apos;OBR.42.1&apos;]; }
				
				// OBR.43, plannedPatientTransportComment
				orc[index].OBR[indexOBR].plannedPatientTransportComment = [];
				for each (field in obrSeg[&apos;OBR.43&apos;]) {
					var block = {};
					if (field[&apos;OBR.43.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.43.1&apos;]; }
					if (field[&apos;OBR.43.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;OBR.43.2&apos;]; }
					if (field[&apos;OBR.43.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;OBR.43.3&apos;]; }
					if (field[&apos;OBR.43.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;OBR.43.4&apos;]; }
					if (field[&apos;OBR.43.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;OBR.43.5&apos;]; }
					if (field[&apos;OBR.43.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;OBR.43.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].plannedPatientTransportComment.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].plannedPatientTransportComment.length == 0) {
					delete orc[index].OBR[indexOBR].plannedPatientTransportComment;
				}
				
				// clean up OBR and increment index
				if (Object.keys(orc[index].OBR[indexOBR]).length == 0) {
					delete orc[index].OBR[indexOBR];
				} else {
					indexOBR++;
				}
			}

			// Clean up the OBR object if it&apos;s empty
			if (orc[index].OBR[0] == null){
				delete orc[index].OBR;
			}
		}

		// Increment the ORC index
		index++;
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// If it has content, add the AL1 segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// Pull out the ORC JSON to embed the OBR segments in
var orc = JSON.parse($(&apos;hl7JSON&apos;)).content.ORC;

// ORC is a required to have a OBR, but if the ORC was blank and was removed from the JSON, just create a new one to add the OBR into
if (!orc) {
	orc = [{}];
}

// ORC
if (msg[&apos;ORC&apos;].length() &gt; 0) {
	var index = 0;
	for each (seg in msg.ORC) {

		// OBR (ORC for ORM)
		var obrGroup = getSegmentsAfter(msg,seg,&apos;OBR&apos;,false);
		if (obrGroup.length &gt; 0) {
			orc[index].OBR = [];
			var indexOBR = 0;
			for each (obrSeg in obrGroup) {
				orc[index].OBR[indexOBR] = {};

				// OBR.1, setId
				if (obrSeg[&apos;OBR.1&apos;][&apos;OBR.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].setId = obrSeg[&apos;OBR.1&apos;][&apos;OBR.1.1&apos;]; }
				
				// OBR.2, placerOrderNumber
				orc[index].OBR[indexOBR].placerOrderNumber = {};
				if (obrSeg[&apos;OBR.2&apos;][&apos;OBR.2.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].placerOrderNumber.id = obrSeg[&apos;OBR.2&apos;][&apos;OBR.2.1&apos;]; }
				if (obrSeg[&apos;OBR.2&apos;][&apos;OBR.2.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].placerOrderNumber.namespaceId = obrSeg[&apos;OBR.2&apos;][&apos;OBR.2.2&apos;]; }
				if (obrSeg[&apos;OBR.2&apos;][&apos;OBR.2.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].placerOrderNumber.universalId = obrSeg[&apos;OBR.2&apos;][&apos;OBR.2.3&apos;]; }
				if (obrSeg[&apos;OBR.2&apos;][&apos;OBR.2.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].placerOrderNumber.universalIdType = obrSeg[&apos;OBR.2&apos;][&apos;OBR.2.4&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].placerOrderNumber).length == 0) {
					delete orc[index].placerOrderNumber;
				}

				// OBR.3, fillerOrderNumber
				orc[index].OBR[indexOBR].fillerOrderNumber = {};
				if (obrSeg[&apos;OBR.3&apos;][&apos;OBR.3.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].fillerOrderNumber.id = obrSeg[&apos;OBR.3&apos;][&apos;OBR.3.1&apos;]; }
				if (obrSeg[&apos;OBR.3&apos;][&apos;OBR.3.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].fillerOrderNumber.namespaceId = obrSeg[&apos;OBR.3&apos;][&apos;OBR.3.2&apos;]; }
				if (obrSeg[&apos;OBR.3&apos;][&apos;OBR.3.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].fillerOrderNumber.universalId = obrSeg[&apos;OBR.3&apos;][&apos;OBR.3.3&apos;]; }
				if (obrSeg[&apos;OBR.3&apos;][&apos;OBR.3.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].fillerOrderNumber.universalIdType = obrSeg[&apos;OBR.3&apos;][&apos;OBR.3.4&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].fillerOrderNumber).length == 0) {
					delete orc[index].fillerOrderNumber;
				}
				
				// OBR.4, universalServiceID
				orc[index].OBR[indexOBR].universalServiceID = {};
				if (obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].universalServiceID.id = obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.1&apos;]; }
				if (obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].universalServiceID.text = obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.2&apos;]; }
				if (obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].universalServiceID.codingSystem = obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.3&apos;]; }
				if (obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].universalServiceID.altId = obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.4&apos;]; }
				if (obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].universalServiceID.altText = obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.5&apos;]; }
				if (obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].universalServiceID.altCodingSystem = obrSeg[&apos;OBR.4&apos;][&apos;OBR.4.6&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].universalServiceID).length == 0) {
					delete orc[index].OBR[indexOBR].universalServiceID;
				}

				// OBR.5, priority
				if (obrSeg[&apos;OBR.5&apos;][&apos;OBR.5.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].priority = obrSeg[&apos;OBR.5&apos;][&apos;OBR.5.1&apos;]; }
				
				// OBR.6, requestedDatetime
				if (obrSeg[&apos;OBR.6&apos;][&apos;OBR.6.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].requestedDatetime = obrSeg[&apos;OBR.6&apos;][&apos;OBR.6.1&apos;]; }
				
				// OBR.7, observationDateTime
				if (obrSeg[&apos;OBR.7&apos;][&apos;OBR.7.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].observationDateTime = obrSeg[&apos;OBR.7&apos;][&apos;OBR.7.1&apos;]; }
				
				// OBR.8, observationEndDateTime
				if (obrSeg[&apos;OBR.8&apos;][&apos;OBR.8.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].observationEndDateTime = obrSeg[&apos;OBR.8&apos;][&apos;OBR.8.1&apos;]; }
				
				// OBR.9, collectionVolume
				orc[index].OBR[indexOBR].collectionVolume = {};
				if (obrSeg[&apos;OBR.9&apos;][&apos;OBR.9.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].collectionVolume.quantity = obrSeg[&apos;OBR.9&apos;][&apos;OBR.9.1&apos;]; }
				if (obrSeg[&apos;OBR.9&apos;][&apos;OBR.9.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].collectionVolume.units = obrSeg[&apos;OBR.9&apos;][&apos;OBR.9.2&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].collectionVolume).length == 0) {
					delete orc[index].OBR[indexOBR].collectionVolume;
				}

				// OBR.10, collectorIdentifier
				orc[index].OBR[indexOBR].collectorIdentifier = [];
				for each (field in obrSeg[&apos;OBR.10&apos;]) {
					var block = {};
					if (field[&apos;OBR.10.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.10.1&apos;]; }
					if (field[&apos;OBR.10.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;OBR.10.2&apos;]; }
					if (field[&apos;OBR.10.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;OBR.10.3&apos;]; }
					if (field[&apos;OBR.10.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;OBR.10.4&apos;]; }
					if (field[&apos;OBR.10.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;OBR.10.5&apos;]; }
					if (field[&apos;OBR.10.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;OBR.10.6&apos;]; }
					if (field[&apos;OBR.10.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;OBR.10.7&apos;]; }
					if (field[&apos;OBR.10.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;OBR.10.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;OBR.10.9&apos;][&apos;OBR.10.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.10.9&apos;][&apos;OBR.10.9.1&apos;]; }
					if (field[&apos;OBR.10.9&apos;][&apos;OBR.10.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;OBR.10.9&apos;][&apos;OBR.10.9.2&apos;]; }
					if (field[&apos;OBR.10.9&apos;][&apos;OBR.10.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;OBR.10.9&apos;][&apos;OBR.10.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;OBR.10.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.10.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;OBR.10.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;OBR.10.10&apos;]; }
					if (field[&apos;OBR.10.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;OBR.10.11&apos;]; }
					if (field[&apos;OBR.10.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;OBR.10.12&apos;]; }
					if (field[&apos;OBR.10.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;OBR.10.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;OBR.10.14&apos;][&apos;OBR.10.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.10.14&apos;][&apos;OBR.10.14.1&apos;]; }
					if (field[&apos;OBR.10.14&apos;][&apos;OBR.10.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;OBR.10.14&apos;][&apos;OBR.10.14.2&apos;]; }
					if (field[&apos;OBR.10.14&apos;][&apos;OBR.10.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;OBR.10.14&apos;][&apos;OBR.10.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;OBR.10.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.10.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].collectorIdentifier.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].collectorIdentifier.length == 0) {
					delete orc[index].OBR[indexOBR].collectorIdentifier;
				}

				// OBR.11, specimenActionCode
				if (obrSeg[&apos;OBR.11&apos;][&apos;OBR.11.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenActionCode = obrSeg[&apos;OBR.11&apos;][&apos;OBR.11.1&apos;]; }
				
				// OBR.12, dangerCode
				orc[index].OBR[indexOBR].dangerCode = {};
				if (obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].dangerCode.id = obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.1&apos;]; }
				if (obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].dangerCode.text = obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.2&apos;]; }
				if (obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].dangerCode.codingSystem = obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.3&apos;]; }
				if (obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].dangerCode.altId = obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.4&apos;]; }
				if (obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].dangerCode.altText = obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.5&apos;]; }
				if (obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].dangerCode.altCodingSystem = obrSeg[&apos;OBR.12&apos;][&apos;OBR.12.6&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].dangerCode).length == 0) {
					delete orc[index].OBR[indexOBR].dangerCode;
				}
				
				// OBR.13, relevantClinicalInfo
				if (obrSeg[&apos;OBR.13&apos;][&apos;OBR.13.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].relevantClinicalInfo = obrSeg[&apos;OBR.13&apos;][&apos;OBR.13.1&apos;]; }
				
				// OBR.14, specimenReceivedDateTime
				if (obrSeg[&apos;OBR.14&apos;][&apos;OBR.14.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenReceivedDateTime = obrSeg[&apos;OBR.14&apos;][&apos;OBR.14.1&apos;]; }
				
				// OBR.15, specimenSource
				orc[index].OBR[indexOBR].specimenSource = {};
				orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode = {};
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode.id = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.1&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode.text = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.2&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode.codingSystem = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.3&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode.altId = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.4&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode.altText = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.5&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode.altCodingSystem = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;][&apos;OBR.15.1.6&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode).length == 0) {
					if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode.id = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.1&apos;]; }
					else delete orc[index].OBR[indexOBR].specimenSource.specimenSourceNameOrCode;
				}
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.2&apos;].toString() != &quot;&quot;) {
					orc[index].OBR[indexOBR].specimenSource.additives = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.2&apos;];
				}
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.3&apos;].toString() != &quot;&quot;) {
					orc[index].OBR[indexOBR].specimenSource.freetext = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.3&apos;];
				}
				orc[index].OBR[indexOBR].specimenSource.bodySite = {};
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.bodySite.id = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.1&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.bodySite.text = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.2&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.bodySite.codingSystem = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.3&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.bodySite.altId = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.4&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.bodySite.altText = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.5&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.bodySite.altCodingSystem = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;][&apos;OBR.15.4.6&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].specimenSource.bodySite).length == 0) {
					if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.bodySite.id = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.4&apos;]; }
					else delete orc[index].OBR[indexOBR].specimenSource.bodySite;
				}
				orc[index].OBR[indexOBR].specimenSource.siteModifier = {};
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.siteModifier.id = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.1&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.siteModifier.text = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.2&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.siteModifier.codingSystem = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.3&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.siteModifier.altId = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.4&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.siteModifier.altText = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.5&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.siteModifier.altCodingSystem = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;][&apos;OBR.15.5.6&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].specimenSource.siteModifier).length == 0) {
					if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.siteModifier.id = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.5&apos;]; }
					else delete orc[index].OBR[indexOBR].specimenSource.siteModifier;
				}
				orc[index].OBR[indexOBR].specimenSource.collectionMethod = {};
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.collectionMethod.id = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.1&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.collectionMethod.text = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.2&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.collectionMethod.codingSystem = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.3&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.collectionMethod.altId = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.4&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.collectionMethod.altText = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.5&apos;]; }
				if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.collectionMethod.altCodingSystem = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;][&apos;OBR.15.6.6&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].specimenSource.collectionMethod).length == 0) {
					if (obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].specimenSource.collectionMethod.id = obrSeg[&apos;OBR.15&apos;][&apos;OBR.15.6&apos;]; }
					else delete orc[index].OBR[indexOBR].specimenSource.collectionMethod;
				}
				if (Object.keys(orc[index].OBR[indexOBR].specimenSource).length == 0) {
					delete orc[index].OBR[indexOBR].specimenSource;
				}

				// OBR.16, orderingProvider
				orc[index].OBR[indexOBR].orderingProvider = [];
				for each (field in obrSeg[&apos;OBR.16&apos;]) {
					var block = {};
					if (field[&apos;OBR.16.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.16.1&apos;]; }
					if (field[&apos;OBR.16.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;OBR.16.2&apos;]; }
					if (field[&apos;OBR.16.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;OBR.16.3&apos;]; }
					if (field[&apos;OBR.16.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;OBR.16.4&apos;]; }
					if (field[&apos;OBR.16.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;OBR.16.5&apos;]; }
					if (field[&apos;OBR.16.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;OBR.16.6&apos;]; }
					if (field[&apos;OBR.16.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;OBR.16.7&apos;]; }
					if (field[&apos;OBR.16.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;OBR.16.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;OBR.16.9&apos;][&apos;OBR.16.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.16.9&apos;][&apos;OBR.16.9.1&apos;]; }
					if (field[&apos;OBR.16.9&apos;][&apos;OBR.16.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;OBR.16.9&apos;][&apos;OBR.16.9.2&apos;]; }
					if (field[&apos;OBR.16.9&apos;][&apos;OBR.16.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;OBR.16.9&apos;][&apos;OBR.16.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;OBR.16.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.16.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;OBR.16.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;OBR.16.10&apos;]; }
					if (field[&apos;OBR.16.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;OBR.16.11&apos;]; }
					if (field[&apos;OBR.16.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;OBR.16.12&apos;]; }
					if (field[&apos;OBR.16.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;OBR.16.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;OBR.16.14&apos;][&apos;OBR.16.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.16.14&apos;][&apos;OBR.16.14.1&apos;]; }
					if (field[&apos;OBR.16.14&apos;][&apos;OBR.16.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;OBR.16.14&apos;][&apos;OBR.16.14.2&apos;]; }
					if (field[&apos;OBR.16.14&apos;][&apos;OBR.16.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;OBR.16.14&apos;][&apos;OBR.16.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;OBR.16.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.16.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].orderingProvider.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].orderingProvider.length == 0) {
					delete orc[index].OBR[indexOBR].orderingProvider;
				}

				// OBR.17, orderCallbackPhoneNumber
				orc[index].OBR[indexOBR].orderCallbackPhoneNumber = [];
				for each (field in obrSeg[&apos;OBR.17&apos;]) {
					var block = {};
					if (field[&apos;OBR.17.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;OBR.17.1&apos;]; }
					if (field[&apos;OBR.17.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;OBR.17.2&apos;]; }
					if (field[&apos;OBR.17.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;OBR.17.3&apos;]; }
					if (field[&apos;OBR.17.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;OBR.17.4&apos;]; }
					if (field[&apos;OBR.17.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;OBR.17.5&apos;]; }
					if (field[&apos;OBR.17.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;OBR.17.6&apos;]; }
					if (field[&apos;OBR.17.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;OBR.17.7&apos;]; }
					if (field[&apos;OBR.17.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;OBR.17.8&apos;]; }
					if (field[&apos;OBR.17.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;OBR.17.9&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].orderCallbackPhoneNumber.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].orderCallbackPhoneNumber.length == 0) {
					delete orc[index].OBR[indexOBR].orderCallbackPhoneNumber;
				}

				// OBR.18, placerfield1
				if (obrSeg[&apos;OBR.18&apos;][&apos;OBR.18.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].placerfield1 = obrSeg[&apos;OBR.18&apos;][&apos;OBR.18.1&apos;]; }
				
				// OBR.19, placerfield2
				if (obrSeg[&apos;OBR.19&apos;][&apos;OBR.19.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].placerfield2 = obrSeg[&apos;OBR.19&apos;][&apos;OBR.19.1&apos;]; }
				
				// OBR.20, fillerField1
				if (obrSeg[&apos;OBR.20&apos;][&apos;OBR.20.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].fillerField1 = obrSeg[&apos;OBR.20&apos;][&apos;OBR.20.1&apos;]; }
				
				// OBR.21, fillerField2
				if (obrSeg[&apos;OBR.21&apos;][&apos;OBR.21.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].fillerField2 = obrSeg[&apos;OBR.21&apos;][&apos;OBR.21.1&apos;]; }
				
				// OBR.22, resultsRptStatusChngDateTime
				if (obrSeg[&apos;OBR.22&apos;][&apos;OBR.22.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].resultsRptStatusChngDateTime = obrSeg[&apos;OBR.22&apos;][&apos;OBR.22.1&apos;]; }
				
				// OBR.23, chargeToPractice
				orc[index].OBR[indexOBR].chargeToPractice = {};
				orc[index].OBR[indexOBR].chargeToPractice.dollarAmount = {};
				if (obrSeg[&apos;OBR.23&apos;][&apos;OBR.23.1&apos;][&apos;OBR.23.1.1&apos;].toString() !=&quot;&quot;) { orc[index].OBR[indexOBR].chargeToPractice.dollarAmount.quantity = obrSeg[&apos;OBR.23&apos;][&apos;OBR.23.1&apos;][&apos;OBR.23.1.1&apos;]; }
				if (obrSeg[&apos;OBR.23&apos;][&apos;OBR.23.1&apos;][&apos;OBR.23.1.2&apos;].toString() !=&quot;&quot;) { orc[index].OBR[indexOBR].chargeToPractice.dollarAmount.denomination = obrSeg[&apos;OBR.23&apos;][&apos;OBR.23.1&apos;][&apos;OBR.23.1.2&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].chargeToPractice.dollarAmount).length == 0) {
					if (obrSeg[&apos;OBR.23&apos;][&apos;OBR.23.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].chargeToPractice.dollarAmount.quantity = obrSeg[&apos;OBR.23&apos;][&apos;OBR.23.1&apos;]; }
					else delete orc[index].OBR[indexOBR].chargeToPractice.dollarAmount;
				}
				if (Object.keys(orc[index].OBR[indexOBR].chargeToPractice).length == 0) {
					delete orc[index].OBR[indexOBR].chargeToPractice;
				}

				// OBR.24, diagnosticServSectID
				if (obrSeg[&apos;OBR.24&apos;][&apos;OBR.24.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].diagnosticServSectID = obrSeg[&apos;OBR.24&apos;][&apos;OBR.24.1&apos;]; }
				
				// OBR.25, resultStatus
				if (obrSeg[&apos;OBR.25&apos;][&apos;OBR.25.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].resultStatus = obrSeg[&apos;OBR.25&apos;][&apos;OBR.25.1&apos;]; }
				
				// OBR.26, parentResult
				orc[index].OBR[indexOBR].parentResult = {};
				orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult = {};
				if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult.id = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.1&apos;]; }
				if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult.text = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.2&apos;]; }
				if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult.codingSystem = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.3&apos;]; }
				if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult.altId = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.4&apos;]; }
				if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult.altText = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.5&apos;]; }
				if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult.altCodingSystem = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;][&apos;OBR.26.1.6&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult).length == 0) {
					if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult.id = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.1&apos;]; }
					else delete orc[index].OBR[indexOBR].parentResult.obx3observationIdentifierOfParentResult;
				}
				if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx4subIdOfParentResult = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.2&apos;]; }
				if (obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parentResult.obx5partOfObservationResultFromParent = obrSeg[&apos;OBR.26&apos;][&apos;OBR.26.3&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].parentResult).length == 0) {
					delete orc[index].OBR[indexOBR].parentResult;
				}

				// OBR.27, quantityTiming
				orc[index].OBR[indexOBR].quantityTiming = [];
				for each (field in obrSeg[&apos;OBR.27&apos;]) {
					var block = {};
					if (field[&apos;OBR.27.1&apos;].toString() != &quot;&quot;) { block.quantity = field[&apos;OBR.27.1&apos;]; }
					if (field[&apos;OBR.27.2&apos;].toString() != &quot;&quot;) { block.interval = field[&apos;OBR.27.2&apos;]; }
					if (field[&apos;OBR.27.3&apos;].toString() != &quot;&quot;) { block.duration = field[&apos;OBR.27.3&apos;]; }
					if (field[&apos;OBR.27.4&apos;].toString() != &quot;&quot;) { block.startDateTime = field[&apos;OBR.27.4&apos;]; }
					if (field[&apos;OBR.27.5&apos;].toString() != &quot;&quot;) { block.endDateTime = field[&apos;OBR.27.5&apos;]; }
					if (field[&apos;OBR.27.6&apos;].toString() != &quot;&quot;) { block.priority = field[&apos;OBR.27.6&apos;]; }
					if (field[&apos;OBR.27.7&apos;].toString() != &quot;&quot;) { block.condition = field[&apos;OBR.27.7&apos;]; }
					if (field[&apos;OBR.27.8&apos;].toString() != &quot;&quot;) { block.text = field[&apos;OBR.27.8&apos;]; }
					if (field[&apos;OBR.27.9&apos;].toString() != &quot;&quot;) { block.conjunction = field[&apos;OBR.27.9&apos;]; }
					if (field[&apos;OBR.27.10&apos;].toString() != &quot;&quot;) { block.orderSequencing = field[&apos;OBR.27.10&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].quantityTiming.push(block)
					}
				}
				if (orc[index].OBR[indexOBR].quantityTiming.length == 0) {
					delete orc[index].OBR[indexOBR].quantityTiming;
				}

				// OBR.28, resultCopiesTo
				orc[index].OBR[indexOBR].resultCopiesTo = [];
				for each (field in obrSeg[&apos;OBR.28&apos;]) {
					var block = {};
					if (field[&apos;OBR.28.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.28.1&apos;]; }
					if (field[&apos;OBR.28.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;OBR.28.2&apos;]; }
					if (field[&apos;OBR.28.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;OBR.28.3&apos;]; }
					if (field[&apos;OBR.28.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;OBR.28.4&apos;]; }
					if (field[&apos;OBR.28.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;OBR.28.5&apos;]; }
					if (field[&apos;OBR.28.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;OBR.28.6&apos;]; }
					if (field[&apos;OBR.28.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;OBR.28.7&apos;]; }
					if (field[&apos;OBR.28.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;OBR.28.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;OBR.28.9&apos;][&apos;OBR.28.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.28.9&apos;][&apos;OBR.28.9.1&apos;]; }
					if (field[&apos;OBR.28.9&apos;][&apos;OBR.28.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;OBR.28.9&apos;][&apos;OBR.28.9.2&apos;]; }
					if (field[&apos;OBR.28.9&apos;][&apos;OBR.28.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;OBR.28.9&apos;][&apos;OBR.28.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;OBR.28.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.28.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;OBR.28.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;OBR.28.10&apos;]; }
					if (field[&apos;OBR.28.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;OBR.28.11&apos;]; }
					if (field[&apos;OBR.28.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;OBR.28.12&apos;]; }
					if (field[&apos;OBR.28.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;OBR.28.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;OBR.28.14&apos;][&apos;OBR.28.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.28.14&apos;][&apos;OBR.28.14.1&apos;]; }
					if (field[&apos;OBR.28.14&apos;][&apos;OBR.28.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;OBR.28.14&apos;][&apos;OBR.28.14.2&apos;]; }
					if (field[&apos;OBR.28.14&apos;][&apos;OBR.28.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;OBR.28.14&apos;][&apos;OBR.28.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;OBR.28.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.28.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].resultCopiesTo.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].resultCopiesTo.length == 0) {
					delete orc[index].OBR[indexOBR].resultCopiesTo;
				}

				// OBR.29, parent
				orc[index].OBR[indexOBR].parent = {};
				orc[index].OBR[indexOBR].parent.parentsPlacerOrderNumber = {};
				if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;][&apos;OBR.29.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsPlacerOrderNumber.id = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;][&apos;OBR.29.1.1&apos;]; }
				if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;][&apos;OBR.29.1.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsPlacerOrderNumber.namespaceId = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;][&apos;OBR.29.1.2&apos;]; }
				if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;][&apos;OBR.29.1.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsPlacerOrderNumber.universalId = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;][&apos;OBR.29.1.3&apos;]; }
				if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;][&apos;OBR.29.1.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsPlacerOrderNumber.universalIdType = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;][&apos;OBR.29.1.4&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].parent.parentsPlacerOrderNumber).length == 0) {
					if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsPlacerOrderNumber.id = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.1&apos;]; }
					else delete orc[index].OBR[indexOBR].parent.parentsPlacerOrderNumber;
				}
				orc[index].OBR[indexOBR].parent.parentsFillerOrderNumber = {};
				if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;][&apos;OBR.29.2.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsFillerOrderNumber.id = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;][&apos;OBR.29.2.1&apos;]; }
				if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;][&apos;OBR.29.2.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsFillerOrderNumber.namespaceId = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;][&apos;OBR.29.2.2&apos;]; }
				if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;][&apos;OBR.29.2.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsFillerOrderNumber.universalId = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;][&apos;OBR.29.2.3&apos;]; }
				if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;][&apos;OBR.29.2.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsFillerOrderNumber.universalIdType = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;][&apos;OBR.29.2.4&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].parent.parentsFillerOrderNumber).length == 0) {
					if (obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].parent.parentsFillerOrderNumber.id = obrSeg[&apos;OBR.29&apos;][&apos;OBR.29.2&apos;]; }
					else delete orc[index].OBR[indexOBR].parent.parentsFillerOrderNumber;
				}
				if (Object.keys(orc[index].OBR[indexOBR].parent).length == 0) {
					delete orc[index].OBR[indexOBR].parent;
				}

				// OBR.30, transportationMode
				if (obrSeg[&apos;OBR.30&apos;][&apos;OBR.30.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].transportationMode = obrSeg[&apos;OBR.30&apos;][&apos;OBR.30.1&apos;]; }
				
				// OBR.31, reasonForStudy
				orc[index].OBR[indexOBR].reasonForStudy = [];
				for each (field in obrSeg[&apos;OBR.31&apos;]) {
					var block = {};
					if (field[&apos;OBR.31.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.31.1&apos;]; }
					if (field[&apos;OBR.31.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;OBR.31.2&apos;]; }
					if (field[&apos;OBR.31.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;OBR.31.3&apos;]; }
					if (field[&apos;OBR.31.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;OBR.31.4&apos;]; }
					if (field[&apos;OBR.31.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;OBR.31.5&apos;]; }
					if (field[&apos;OBR.31.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;OBR.31.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].reasonForStudy.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].reasonForStudy.length == 0) {
					delete orc[index].OBR[indexOBR].reasonForStudy;
				}

				// OBR.32, principalResultInterpreter
				orc[index].OBR[indexOBR].principalResultInterpreter = {};
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.id = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.1&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.lastName = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.2&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.firstName = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.3&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.middleInitOrName = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.4&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.suffix = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.5&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.prefix = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.6&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.7&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.degree = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.7&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.8&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.sourceTable = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.8&apos;]; }
				orc[index].OBR[indexOBR].principalResultInterpreter.assigningAuthority = {};
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.9&apos;][&apos;OBR.32.9.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.assigningAuthority.id = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.9&apos;][&apos;OBR.32.9.1&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.9&apos;][&apos;OBR.32.9.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.assigningAuthority.universalId = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.9&apos;][&apos;OBR.32.9.2&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.9&apos;][&apos;OBR.32.9.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.assigningAuthority.universalIdType = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.9&apos;][&apos;OBR.32.9.3&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].principalResultInterpreter.assigningAuthority).length == 0) {
					if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.9&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.assigningAuthority.id = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.9&apos;]; }
					else delete orc[index].OBR[indexOBR].principalResultInterpreter.assigningAuthority;
				}
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.10&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.nameTypeCode = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.10&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.11&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.identifierCheckDigit = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.11&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.12&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.codeIdentifyingCheckDigitScheme = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.12&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.13&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.identifierTypeCode = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.13&apos;]; }
				orc[index].OBR[indexOBR].principalResultInterpreter.assigningFacility = {};
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.14&apos;][&apos;OBR.32.14.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.assigningFacility.id = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.14&apos;][&apos;OBR.32.14.1&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.14&apos;][&apos;OBR.32.14.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.assigningFacility.universalId = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.14&apos;][&apos;OBR.32.14.2&apos;]; }
				if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.14&apos;][&apos;OBR.32.14.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.assigningFacility.universalIdType = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.14&apos;][&apos;OBR.32.14.3&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].principalResultInterpreter.assigningFacility).length == 0) {
					if (obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.14&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].principalResultInterpreter.assigningFacility.id = obrSeg[&apos;OBR.32&apos;][&apos;OBR.32.14&apos;]; }
					else delete orc[index].OBR[indexOBR].principalResultInterpreter.assigningFacility;
				}
				if (Object.keys(orc[index].OBR[indexOBR].principalResultInterpreter).length == 0) {
					delete orc[index].OBR[indexOBR].principalResultInterpreter;
				}

				// OBR.33, assistantResultInterpreter
				orc[index].OBR[indexOBR].assistantResultInterpreter = [];
				for each (field in obrSeg[&apos;OBR.33&apos;]) {
					var block = {};
					if (field[&apos;OBR.33.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.33.1&apos;]; }
					if (field[&apos;OBR.33.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;OBR.33.2&apos;]; }
					if (field[&apos;OBR.33.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;OBR.33.3&apos;]; }
					if (field[&apos;OBR.33.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;OBR.33.4&apos;]; }
					if (field[&apos;OBR.33.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;OBR.33.5&apos;]; }
					if (field[&apos;OBR.33.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;OBR.33.6&apos;]; }
					if (field[&apos;OBR.33.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;OBR.33.7&apos;]; }
					if (field[&apos;OBR.33.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;OBR.33.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;OBR.33.9&apos;][&apos;OBR.33.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.33.9&apos;][&apos;OBR.33.9.1&apos;]; }
					if (field[&apos;OBR.33.9&apos;][&apos;OBR.33.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;OBR.33.9&apos;][&apos;OBR.33.9.2&apos;]; }
					if (field[&apos;OBR.33.9&apos;][&apos;OBR.33.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;OBR.33.9&apos;][&apos;OBR.33.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;OBR.33.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.33.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;OBR.33.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;OBR.33.10&apos;]; }
					if (field[&apos;OBR.33.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;OBR.33.11&apos;]; }
					if (field[&apos;OBR.33.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;OBR.33.12&apos;]; }
					if (field[&apos;OBR.33.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;OBR.33.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;OBR.33.14&apos;][&apos;OBR.33.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.33.14&apos;][&apos;OBR.33.14.1&apos;]; }
					if (field[&apos;OBR.33.14&apos;][&apos;OBR.33.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;OBR.33.14&apos;][&apos;OBR.33.14.2&apos;]; }
					if (field[&apos;OBR.33.14&apos;][&apos;OBR.33.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;OBR.33.14&apos;][&apos;OBR.33.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;OBR.33.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.33.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].assistantResultInterpreter.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].assistantResultInterpreter.length == 0) {
					delete orc[index].OBR[indexOBR].assistantResultInterpreter;
				}

				// OBR.34, technician
				orc[index].OBR[indexOBR].technician = [];
				for each (field in obrSeg[&apos;OBR.34&apos;]) {
					var block = {};
					if (field[&apos;OBR.34.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.34.1&apos;]; }
					if (field[&apos;OBR.34.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;OBR.34.2&apos;]; }
					if (field[&apos;OBR.34.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;OBR.34.3&apos;]; }
					if (field[&apos;OBR.34.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;OBR.34.4&apos;]; }
					if (field[&apos;OBR.34.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;OBR.34.5&apos;]; }
					if (field[&apos;OBR.34.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;OBR.34.6&apos;]; }
					if (field[&apos;OBR.34.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;OBR.34.7&apos;]; }
					if (field[&apos;OBR.34.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;OBR.34.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;OBR.34.9&apos;][&apos;OBR.34.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.34.9&apos;][&apos;OBR.34.9.1&apos;]; }
					if (field[&apos;OBR.34.9&apos;][&apos;OBR.34.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;OBR.34.9&apos;][&apos;OBR.34.9.2&apos;]; }
					if (field[&apos;OBR.34.9&apos;][&apos;OBR.34.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;OBR.34.9&apos;][&apos;OBR.34.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;OBR.34.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.34.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;OBR.34.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;OBR.34.10&apos;]; }
					if (field[&apos;OBR.34.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;OBR.34.11&apos;]; }
					if (field[&apos;OBR.34.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;OBR.34.12&apos;]; }
					if (field[&apos;OBR.34.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;OBR.34.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;OBR.34.14&apos;][&apos;OBR.34.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.34.14&apos;][&apos;OBR.34.14.1&apos;]; }
					if (field[&apos;OBR.34.14&apos;][&apos;OBR.34.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;OBR.34.14&apos;][&apos;OBR.34.14.2&apos;]; }
					if (field[&apos;OBR.34.14&apos;][&apos;OBR.34.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;OBR.34.14&apos;][&apos;OBR.34.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].technician.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].technician.length == 0) {
					delete orc[index].OBR[indexOBR].technician;
				}

				// OBR.35, transcriptionist
				orc[index].OBR[indexOBR].transcriptionist = [];
				for each (field in obrSeg[&apos;OBR.35&apos;]) {
					var block = {};
					if (field[&apos;OBR.35.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.35.1&apos;]; }
					if (field[&apos;OBR.35.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;OBR.35.2&apos;]; }
					if (field[&apos;OBR.35.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;OBR.35.3&apos;]; }
					if (field[&apos;OBR.35.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;OBR.35.4&apos;]; }
					if (field[&apos;OBR.35.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;OBR.35.5&apos;]; }
					if (field[&apos;OBR.35.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;OBR.35.6&apos;]; }
					if (field[&apos;OBR.35.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;OBR.35.7&apos;]; }
					if (field[&apos;OBR.35.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;OBR.35.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;OBR.35.9&apos;][&apos;OBR.35.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.35.9&apos;][&apos;OBR.35.9.1&apos;]; }
					if (field[&apos;OBR.35.9&apos;][&apos;OBR.35.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;OBR.35.9&apos;][&apos;OBR.35.9.2&apos;]; }
					if (field[&apos;OBR.35.9&apos;][&apos;OBR.35.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;OBR.35.9&apos;][&apos;OBR.35.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;OBR.35.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;OBR.35.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;OBR.35.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;OBR.35.10&apos;]; }
					if (field[&apos;OBR.35.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;OBR.35.11&apos;]; }
					if (field[&apos;OBR.35.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;OBR.35.12&apos;]; }
					if (field[&apos;OBR.35.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;OBR.35.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;OBR.35.14&apos;][&apos;OBR.35.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;OBR.35.14&apos;][&apos;OBR.35.14.1&apos;]; }
					if (field[&apos;OBR.35.14&apos;][&apos;OBR.35.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;OBR.35.14&apos;][&apos;OBR.35.14.2&apos;]; }
					if (field[&apos;OBR.35.14&apos;][&apos;OBR.35.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;OBR.35.14&apos;][&apos;OBR.35.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].transcriptionist.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].transcriptionist.length == 0) {
					delete orc[index].OBR[indexOBR].transcriptionist;
				}

				// OBR.36, scheduledDateTime
				if (obrSeg[&apos;OBR.36&apos;][&apos;OBR.36.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].scheduledDateTime = obrSeg[&apos;OBR.36&apos;][&apos;OBR.36.1&apos;]; }
				
				// OBR.37, numberOfSampleContainers
				if (obrSeg[&apos;OBR.37&apos;][&apos;OBR.37.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].numberOfSampleContainers = obrSeg[&apos;OBR.37&apos;][&apos;OBR.37.1&apos;]; }
				
				// OBR.38, transportLogisticsOfCollectedSample
				orc[index].OBR[indexOBR].transportLogisticsOfCollectedSample = [];
				for each (field in obrSeg[&apos;OBR.38&apos;]) {
					var block = {};
					if (field[&apos;OBR.38.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.38.1&apos;]; }
					if (field[&apos;OBR.38.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;OBR.38.2&apos;]; }
					if (field[&apos;OBR.38.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;OBR.38.3&apos;]; }
					if (field[&apos;OBR.38.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;OBR.38.4&apos;]; }
					if (field[&apos;OBR.38.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;OBR.38.5&apos;]; }
					if (field[&apos;OBR.38.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;OBR.38.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].transportLogisticsOfCollectedSample.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].transportLogisticsOfCollectedSample.length == 0) {
					delete orc[index].OBR[indexOBR].transportLogisticsOfCollectedSample;
				}

				// OBR.39, collectorsComment
				orc[index].OBR[indexOBR].collectorsComment = [];
				for each (field in obrSeg[&apos;OBR.39&apos;]) {
					var block = {};
					if (field[&apos;OBR.39.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.39.1&apos;]; }
					if (field[&apos;OBR.39.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;OBR.39.2&apos;]; }
					if (field[&apos;OBR.39.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;OBR.39.3&apos;]; }
					if (field[&apos;OBR.39.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;OBR.39.4&apos;]; }
					if (field[&apos;OBR.39.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;OBR.39.5&apos;]; }
					if (field[&apos;OBR.39.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;OBR.39.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].collectorsComment.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].collectorsComment.length == 0) {
					delete orc[index].OBR[indexOBR].collectorsComment;
				}

				// OBR.40, transportArrangementResponsibility
				orc[index].OBR[indexOBR].transportArrangementResponsibility = {};
				if (obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].transportArrangementResponsibility.id = obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.1&apos;]; }
				if (obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].transportArrangementResponsibility.text = obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.2&apos;]; }
				if (obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].transportArrangementResponsibility.codingSystem = obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.3&apos;]; }
				if (obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].transportArrangementResponsibility.altId = obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.4&apos;]; }
				if (obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].transportArrangementResponsibility.altText = obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.5&apos;]; }
				if (obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].transportArrangementResponsibility.altCodingSystem = obrSeg[&apos;OBR.40&apos;][&apos;OBR.40.6&apos;]; }
				if (Object.keys(orc[index].OBR[indexOBR].transportArrangementResponsibility).length == 0) {
					delete orc[index].OBR[indexOBR].transportArrangementResponsibility;
				}

				// OBR.41, transportArranged
				if (obrSeg[&apos;OBR.41&apos;][&apos;OBR.41.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].transportArranged = obrSeg[&apos;OBR.41&apos;][&apos;OBR.41.1&apos;]; }
				
				// OBR.42, escortRequired
				if (obrSeg[&apos;OBR.42&apos;][&apos;OBR.42.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].escortRequired = obrSeg[&apos;OBR.42&apos;][&apos;OBR.42.1&apos;]; }
				
				// OBR.43, plannedPatientTransportComment
				orc[index].OBR[indexOBR].plannedPatientTransportComment = [];
				for each (field in obrSeg[&apos;OBR.43&apos;]) {
					var block = {};
					if (field[&apos;OBR.43.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBR.43.1&apos;]; }
					if (field[&apos;OBR.43.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;OBR.43.2&apos;]; }
					if (field[&apos;OBR.43.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;OBR.43.3&apos;]; }
					if (field[&apos;OBR.43.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;OBR.43.4&apos;]; }
					if (field[&apos;OBR.43.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;OBR.43.5&apos;]; }
					if (field[&apos;OBR.43.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;OBR.43.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBR[indexOBR].plannedPatientTransportComment.push(block);
					}
				}
				if (orc[index].OBR[indexOBR].plannedPatientTransportComment.length == 0) {
					delete orc[index].OBR[indexOBR].plannedPatientTransportComment;
				}
				
				// clean up OBR and increment index
				if (Object.keys(orc[index].OBR[indexOBR]).length == 0) {
					delete orc[index].OBR[indexOBR];
				} else {
					indexOBR++;
				}
			}

			// Clean up the OBR object if it&apos;s empty
			if (orc[index].OBR[0] == null){
				delete orc[index].OBR;
			}
		}

		// Increment the ORC index
		index++;
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// If it has content, add the AL1 segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>13</sequenceNumber>
          <name>----NTE (Notes), OBX (Observation) Segments - REQUIRES OBR MAPPING STEP ABOVE</name>
          <script>// Pull out the ORC JSON to embed the OBR segments in
var orc = JSON.parse($(&apos;hl7JSON&apos;)).content.ORC;

// ORC is a required to have an OBR, but if the ORC was blank and was removed from the JSON, just create a new one to add the OBR into
if (!orc) {
	orc = [{}];
}

// ORC
if (msg[&apos;ORC&apos;].length() &gt; 0) {
	var index = 0;
	for each (seg in msg.ORC) {

		// OBR (ORC for ORM)
		var obrGroup = getSegmentsAfter(msg,seg,&apos;OBR&apos;,false);
		if (obrGroup.length &gt; 0) {
			var indexOBR = 0;

			// OBR is required for NTE and OBX, so create it if it&apos;s not already present in the ORC object
			if (!orc[index].OBR) {
				orc[index].OBR = [{}];
			}
			
			for each (obrSeg in obrGroup) {

				// NTE (OBR)
				var nteGroup = getSegmentsAfter(msg,obrSeg,&apos;NTE&apos;,true);
				if (nteGroup.length &gt; 0) {
					orc[index].OBR[indexOBR].NTE = [];
					var indexNTE = 0;
					for each (nteSeg in nteGroup) {
						orc[index].OBR[indexOBR].NTE[indexNTE] = {};

						// NTE.1, setId
						if (nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].NTE[indexNTE].setId = nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }

						// NTE.2, sourceOfComment
						if (nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].NTE[indexNTE].sourceOfComment = nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }

						// NTE.3, comment
						orc[index].OBR[indexOBR].NTE[indexNTE].comment = [];
						for each (field in nteSeg[&apos;NTE.3&apos;]) {
							var block = {};
							if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
								orc[index].OBR[indexOBR].NTE[indexNTE].comment.push(field[&apos;NTE.3.1&apos;]);
							}
						}
						if (orc[index].OBR[indexOBR].NTE[indexNTE].comment.length == 0) {
							delete orc[index].OBR[indexOBR].NTE[indexNTE].comment;
						}

						// clean up NTE and increment index
						if (orc[index].OBR[indexOBR].NTE.length == 0) {
							delete orc[index].OBR[indexOBR].NTE;
						} else {
							indexNTE++;
						}
					}
				}

				// OBX (OBR)
				var obxGroup = getSegmentsAfter(msg,obrSeg,&apos;OBX&apos;,false);
				if (obxGroup.length &gt; 0) {
					orc[index].OBR[indexOBR].OBX = [];
					var indexOBX = 0;
					for each (obxSeg in obxGroup) {
						orc[index].OBR[indexOBR].OBX[indexOBX] = {};

						// OBX.1, setId
						if (obxSeg[&apos;OBX.1&apos;][&apos;OBX.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].setId = obxSeg[&apos;OBX.1&apos;][&apos;OBX.1.1&apos;]; }

						// OBX.2, valueType
						if (obxSeg[&apos;OBX.2&apos;][&apos;OBX.2.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].valueType = obxSeg[&apos;OBX.2&apos;][&apos;OBX.2.1&apos;]; }
						
						// OBX.3, identifier
						orc[index].OBR[indexOBR].OBX[indexOBX].identifier = {};
						if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].identifier.id = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.1&apos;]; }
						if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].identifier.text = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.2&apos;]; }
						if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].identifier.codingSystem = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.3&apos;]; }
						if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].identifier.altId = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.4&apos;]; }
						if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].identifier.altText = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.5&apos;]; }
						if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].identifier.altCodingSystem = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.6&apos;]; }
						if (Object.keys(orc[index].OBR[indexOBR].OBX[indexOBX].identifier).length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].identifier;
						}

						// OBX.4, subId
						if (obxSeg[&apos;OBX.4&apos;][&apos;OBX.4.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].subId = obxSeg[&apos;OBX.4&apos;][&apos;OBX.4.1&apos;]; }
						
						// OBX.5, observationValue
						orc[index].OBR[indexOBR].OBX[indexOBX].observationValue = [];
						for each (field in obxSeg[&apos;OBX.5&apos;]) {
							if (field[&apos;OBX.5.1&apos;].toString() != &quot;&quot;) { 
								orc[index].OBR[indexOBR].OBX[indexOBX].observationValue.push(field[&apos;OBX.5.1&apos;]); 
							} else if (field[&apos;OBX.5.5&apos;].toString() != &quot;&quot;) { 
								orc[index].OBR[indexOBR].OBX[indexOBX].observationValue.push(field[&apos;OBX.5.5&apos;]); 
							}
						}
						if (orc[index].OBR[indexOBR].OBX[indexOBX].observationValue.length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].observationValue;
						}

						// OBX.6, units
						orc[index].OBR[indexOBR].OBX[indexOBX].units = {};
						if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].units.id = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.1&apos;]; }
						if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].units.text = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.2&apos;]; }
						if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].units.codingSystem = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.3&apos;]; }
						if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].units.altId = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.4&apos;]; }
						if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].units.altText = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.5&apos;]; }
						if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].units.altCodingSystem = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.6&apos;]; }
						if (Object.keys(orc[index].OBR[indexOBR].OBX[indexOBX].units).length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].units;
						}

						// OBX.7, referenceRange
						if (obxSeg[&apos;OBX.7&apos;][&apos;OBX.7.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].referenceRange = obxSeg[&apos;OBX.7&apos;][&apos;OBX.7.1&apos;]; }
						
						// OBX.8, abnormalFlag
						orc[index].OBR[indexOBR].OBX[indexOBX].abnormalFlag = [];
						for each (field in obxSeg[&apos;OBX.9&apos;]) {
							if (field[&apos;OBX.9.1&apos;].toString() != &quot;&quot;) { 
								orc[index].OBR[indexOBR].OBX[indexOBX].abnormalFlag.push(field[&apos;OBX.9.1&apos;]); 
							}
						}
						if (orc[index].OBR[indexOBR].OBX[indexOBX].abnormalFlag.length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].abnormalFlag;
						}

						// OBX.9, probability
						if (obxSeg[&apos;OBX.9&apos;][&apos;OBX.9.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].probability = obxSeg[&apos;OBX.9&apos;][&apos;OBX.9.1&apos;]; }
						
						// OBX.10, natureOfAbnormal
						orc[index].OBR[indexOBR].OBX[indexOBX].natureOfAbnormal = [];
						for each (field in obxSeg[&apos;OBX.10&apos;]) {
							if (field[&apos;OBX.10.1&apos;].toString() != &quot;&quot;) { 
								orc[index].OBR[indexOBR].OBX[indexOBX].natureOfAbnormal.push(field[&apos;OBX.10.1&apos;]); 
							}
						}
						if (orc[index].OBR[indexOBR].OBX[indexOBX].natureOfAbnormal.length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].natureOfAbnormal;
						}

						// OBX.11, observeResultStatus
						if (obxSeg[&apos;OBX.11&apos;][&apos;OBX.11.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].observeResultStatus = obxSeg[&apos;OBX.11&apos;][&apos;OBX.11.1&apos;]; }
						
						// OBX.12, effectiveDateLastNormalValue
						if (obxSeg[&apos;OBX.12&apos;][&apos;OBX.12.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].effectiveDateLastNormalValue = obxSeg[&apos;OBX.12&apos;][&apos;OBX.12.1&apos;]; }
						
						// OBX.13, definedAccessChecks
						if (obxSeg[&apos;OBX.13&apos;][&apos;OBX.13.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].definedAccessChecks = obxSeg[&apos;OBX.13&apos;][&apos;OBX.13.1&apos;]; }
						
						// OBX.14, observationDateTime
						if (obxSeg[&apos;OBX.14&apos;][&apos;OBX.14.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].observationDateTime = obxSeg[&apos;OBX.14&apos;][&apos;OBX.14.1&apos;]; }
						
						// OBX.15, producersId
						orc[index].OBR[indexOBR].OBX[indexOBX].producersId = {};
						if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].producersId.id = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.1&apos;]; }
						if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].producersId.text = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.2&apos;]; }
						if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].producersId.codingSystem = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.3&apos;]; }
						if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].producersId.altId = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.4&apos;]; }
						if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].producersId.altText = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.5&apos;]; }
						if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].producersId.altCodingSystem = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.6&apos;]; }
						if (Object.keys(orc[index].OBR[indexOBR].OBX[indexOBX].producersId).length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].producersId;
						}

						// OBX.16, responsibleObserver
						orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver = {};
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.id = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.1&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.lastName = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.2&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.firstName = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.3&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.middleInitOrName = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.4&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.suffix = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.5&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.prefix = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.6&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.7&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.degree = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.7&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.8&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.sourceTable = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.8&apos;]; }
						orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningAuthority = {};
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningAuthority.id = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.1&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningAuthority.universalId = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.2&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningAuthority.universalIdType = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.3&apos;]; }
						if (Object.keys(orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningAuthority).length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningAuthority;
						}
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.10&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.nameTypeCode = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.10&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.11&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.identifierCheckDigit = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.11&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.12&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.codeIdentifyingCheckDigitScheme = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.12&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.13&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.identifierTypeCode = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.13&apos;]; }
						orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningFacility = {};
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningFacility.id = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.1&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningFacility.universalId = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.2&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningFacility.universalIdType = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.3&apos;]; }
						if (Object.keys(orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningFacility).length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningFacility;
						}
						if (Object.keys(orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver).length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver;
						}

						// OBX.17, observationMethod
						orc[index].OBR[indexOBR].OBX[indexOBX].observationMethod = [];
						for each (field in obxSeg[&apos;OBX.17&apos;]) {
							var block = {};
							if (field[&apos;OBX.17.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBX.17.1&apos;]; }
							if (field[&apos;OBX.17.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;OBX.17.2&apos;]; }
							if (field[&apos;OBX.17.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;OBX.17.3&apos;]; }
							if (field[&apos;OBX.17.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;OBX.17.4&apos;]; }
							if (field[&apos;OBX.17.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;OBX.17.5&apos;]; }
							if (field[&apos;OBX.17.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;OBX.17.6&apos;]; }
							if (Object.keys(block).length &gt; 0) {
								orc[index].OBR[indexOBR].OBX[indexOBX].observationMethod.push(block);
							}
						}
						if (orc[index].OBR[indexOBR].OBX[indexOBX].observationMethod.length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].observationMethod;
						}

						// NTE (OBX)
						var nteGroup = getSegmentsAfter(msg,obxSeg,&apos;NTE&apos;,true);
						if (nteGroup.length &gt; 0) {
							orc[index].OBR[indexOBR].OBX[indexOBX].NTE = [];
							var indexNTE = 0;
							for each (nteSeg in nteGroup) {
								orc[index].OBR[indexOBR].OBX[indexOBX].NTE[indexNTE] = {};

								// NTE.1, setId
								if (nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].NTE[indexNTE].setId = nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }

								// NTE.2, sourceOfComment
								if (nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].NTE[indexNTE].sourceOfComment = nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }

								// NTE.3, comment
								orc[index].OBR[indexOBR].OBX[indexOBX].NTE[indexNTE].comment = [];
								for each (field in nteSeg[&apos;NTE.3&apos;]) {
									var block = {};
									if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
										orc[index].OBR[indexOBR].OBX[indexOBX].NTE[indexNTE].comment.push(field[&apos;NTE.3.1&apos;]);
									}
								}
								if (orc[index].OBR[indexOBR].OBX[indexOBX].NTE[indexNTE].comment.length == 0) {
									delete orc[index].OBR[indexOBR].OBX[indexOBX].NTE[indexNTE].comment;
								}

								// clean up NTE and increment index
								if (orc[index].OBR[indexOBR].OBX[indexOBX].NTE.length == 0) {
									delete orc[index].OBR[indexOBR].OBX[indexOBX].NTE;
								} else {
									indexNTE++;
								}
							}
						}

						// clean up OBX and increment index
						if (Object.keys(orc[index].OBR[indexOBR].OBX[indexOBX]).length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX];
						} else {
							indexOBX++;
						}
					}
				}

				// clean up OBR and increment index
				if (Object.keys(orc[index].OBR[indexOBR]).length == 0) {
					delete orc[index].OBR[indexOBR];
				} else {
					indexOBR++;
				}
			}

			// Clean up the OBR object if it&apos;s empty
			if (orc[index].OBR[0] == null){
				delete orc[index].OBR;
			}
		}

		// Increment the ORC index
		index++;
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// If it has content, add the AL1 segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// Pull out the ORC JSON to embed the OBR segments in
var orc = JSON.parse($(&apos;hl7JSON&apos;)).content.ORC;

// ORC is a required to have an OBR, but if the ORC was blank and was removed from the JSON, just create a new one to add the OBR into
if (!orc) {
	orc = [{}];
}

// ORC
if (msg[&apos;ORC&apos;].length() &gt; 0) {
	var index = 0;
	for each (seg in msg.ORC) {

		// OBR (ORC for ORM)
		var obrGroup = getSegmentsAfter(msg,seg,&apos;OBR&apos;,false);
		if (obrGroup.length &gt; 0) {
			var indexOBR = 0;

			// OBR is required for NTE and OBX, so create it if it&apos;s not already present in the ORC object
			if (!orc[index].OBR) {
				orc[index].OBR = [{}];
			}
			
			for each (obrSeg in obrGroup) {

				// NTE (OBR)
				var nteGroup = getSegmentsAfter(msg,obrSeg,&apos;NTE&apos;,true);
				if (nteGroup.length &gt; 0) {
					orc[index].OBR[indexOBR].NTE = [];
					var indexNTE = 0;
					for each (nteSeg in nteGroup) {
						orc[index].OBR[indexOBR].NTE[indexNTE] = {};

						// NTE.1, setId
						if (nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].NTE[indexNTE].setId = nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }

						// NTE.2, sourceOfComment
						if (nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].NTE[indexNTE].sourceOfComment = nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }

						// NTE.3, comment
						orc[index].OBR[indexOBR].NTE[indexNTE].comment = [];
						for each (field in nteSeg[&apos;NTE.3&apos;]) {
							var block = {};
							if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
								orc[index].OBR[indexOBR].NTE[indexNTE].comment.push(field[&apos;NTE.3.1&apos;]);
							}
						}
						if (orc[index].OBR[indexOBR].NTE[indexNTE].comment.length == 0) {
							delete orc[index].OBR[indexOBR].NTE[indexNTE].comment;
						}

						// clean up NTE and increment index
						if (orc[index].OBR[indexOBR].NTE.length == 0) {
							delete orc[index].OBR[indexOBR].NTE;
						} else {
							indexNTE++;
						}
					}
				}

				// OBX (OBR)
				var obxGroup = getSegmentsAfter(msg,obrSeg,&apos;OBX&apos;,false);
				if (obxGroup.length &gt; 0) {
					orc[index].OBR[indexOBR].OBX = [];
					var indexOBX = 0;
					for each (obxSeg in obxGroup) {
						orc[index].OBR[indexOBR].OBX[indexOBX] = {};

						// OBX.1, setId
						if (obxSeg[&apos;OBX.1&apos;][&apos;OBX.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].setId = obxSeg[&apos;OBX.1&apos;][&apos;OBX.1.1&apos;]; }

						// OBX.2, valueType
						if (obxSeg[&apos;OBX.2&apos;][&apos;OBX.2.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].valueType = obxSeg[&apos;OBX.2&apos;][&apos;OBX.2.1&apos;]; }
						
						// OBX.3, identifier
						orc[index].OBR[indexOBR].OBX[indexOBX].identifier = {};
						if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].identifier.id = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.1&apos;]; }
						if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].identifier.text = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.2&apos;]; }
						if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].identifier.codingSystem = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.3&apos;]; }
						if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].identifier.altId = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.4&apos;]; }
						if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].identifier.altText = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.5&apos;]; }
						if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].identifier.altCodingSystem = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.6&apos;]; }
						if (Object.keys(orc[index].OBR[indexOBR].OBX[indexOBX].identifier).length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].identifier;
						}

						// OBX.4, subId
						if (obxSeg[&apos;OBX.4&apos;][&apos;OBX.4.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].subId = obxSeg[&apos;OBX.4&apos;][&apos;OBX.4.1&apos;]; }
						
						// OBX.5, observationValue
						orc[index].OBR[indexOBR].OBX[indexOBX].observationValue = [];
						for each (field in obxSeg[&apos;OBX.5&apos;]) {
							if (field[&apos;OBX.5.1&apos;].toString() != &quot;&quot;) { 
								orc[index].OBR[indexOBR].OBX[indexOBX].observationValue.push(field[&apos;OBX.5.1&apos;]); 
							} else if (field[&apos;OBX.5.5&apos;].toString() != &quot;&quot;) { 
								orc[index].OBR[indexOBR].OBX[indexOBX].observationValue.push(field[&apos;OBX.5.5&apos;]); 
							}
						}
						if (orc[index].OBR[indexOBR].OBX[indexOBX].observationValue.length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].observationValue;
						}

						// OBX.6, units
						orc[index].OBR[indexOBR].OBX[indexOBX].units = {};
						if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].units.id = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.1&apos;]; }
						if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].units.text = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.2&apos;]; }
						if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].units.codingSystem = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.3&apos;]; }
						if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].units.altId = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.4&apos;]; }
						if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].units.altText = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.5&apos;]; }
						if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].units.altCodingSystem = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.6&apos;]; }
						if (Object.keys(orc[index].OBR[indexOBR].OBX[indexOBX].units).length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].units;
						}

						// OBX.7, referenceRange
						if (obxSeg[&apos;OBX.7&apos;][&apos;OBX.7.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].referenceRange = obxSeg[&apos;OBX.7&apos;][&apos;OBX.7.1&apos;]; }
						
						// OBX.8, abnormalFlag
						orc[index].OBR[indexOBR].OBX[indexOBX].abnormalFlag = [];
						for each (field in obxSeg[&apos;OBX.9&apos;]) {
							if (field[&apos;OBX.9.1&apos;].toString() != &quot;&quot;) { 
								orc[index].OBR[indexOBR].OBX[indexOBX].abnormalFlag.push(field[&apos;OBX.9.1&apos;]); 
							}
						}
						if (orc[index].OBR[indexOBR].OBX[indexOBX].abnormalFlag.length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].abnormalFlag;
						}

						// OBX.9, probability
						if (obxSeg[&apos;OBX.9&apos;][&apos;OBX.9.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].probability = obxSeg[&apos;OBX.9&apos;][&apos;OBX.9.1&apos;]; }
						
						// OBX.10, natureOfAbnormal
						orc[index].OBR[indexOBR].OBX[indexOBX].natureOfAbnormal = [];
						for each (field in obxSeg[&apos;OBX.10&apos;]) {
							if (field[&apos;OBX.10.1&apos;].toString() != &quot;&quot;) { 
								orc[index].OBR[indexOBR].OBX[indexOBX].natureOfAbnormal.push(field[&apos;OBX.10.1&apos;]); 
							}
						}
						if (orc[index].OBR[indexOBR].OBX[indexOBX].natureOfAbnormal.length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].natureOfAbnormal;
						}

						// OBX.11, observeResultStatus
						if (obxSeg[&apos;OBX.11&apos;][&apos;OBX.11.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].observeResultStatus = obxSeg[&apos;OBX.11&apos;][&apos;OBX.11.1&apos;]; }
						
						// OBX.12, effectiveDateLastNormalValue
						if (obxSeg[&apos;OBX.12&apos;][&apos;OBX.12.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].effectiveDateLastNormalValue = obxSeg[&apos;OBX.12&apos;][&apos;OBX.12.1&apos;]; }
						
						// OBX.13, definedAccessChecks
						if (obxSeg[&apos;OBX.13&apos;][&apos;OBX.13.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].definedAccessChecks = obxSeg[&apos;OBX.13&apos;][&apos;OBX.13.1&apos;]; }
						
						// OBX.14, observationDateTime
						if (obxSeg[&apos;OBX.14&apos;][&apos;OBX.14.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].observationDateTime = obxSeg[&apos;OBX.14&apos;][&apos;OBX.14.1&apos;]; }
						
						// OBX.15, producersId
						orc[index].OBR[indexOBR].OBX[indexOBX].producersId = {};
						if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].producersId.id = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.1&apos;]; }
						if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].producersId.text = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.2&apos;]; }
						if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].producersId.codingSystem = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.3&apos;]; }
						if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].producersId.altId = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.4&apos;]; }
						if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].producersId.altText = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.5&apos;]; }
						if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].producersId.altCodingSystem = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.6&apos;]; }
						if (Object.keys(orc[index].OBR[indexOBR].OBX[indexOBX].producersId).length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].producersId;
						}

						// OBX.16, responsibleObserver
						orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver = {};
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.id = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.1&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.lastName = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.2&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.firstName = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.3&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.4&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.middleInitOrName = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.4&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.5&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.suffix = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.5&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.6&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.prefix = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.6&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.7&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.degree = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.7&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.8&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.sourceTable = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.8&apos;]; }
						orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningAuthority = {};
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningAuthority.id = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.1&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningAuthority.universalId = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.2&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningAuthority.universalIdType = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.3&apos;]; }
						if (Object.keys(orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningAuthority).length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningAuthority;
						}
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.10&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.nameTypeCode = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.10&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.11&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.identifierCheckDigit = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.11&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.12&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.codeIdentifyingCheckDigitScheme = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.12&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.13&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.identifierTypeCode = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.13&apos;]; }
						orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningFacility = {};
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningFacility.id = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.1&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.2&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningFacility.universalId = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.2&apos;]; }
						if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.3&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningFacility.universalIdType = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.3&apos;]; }
						if (Object.keys(orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningFacility).length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver.assigningFacility;
						}
						if (Object.keys(orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver).length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].responsibleObserver;
						}

						// OBX.17, observationMethod
						orc[index].OBR[indexOBR].OBX[indexOBX].observationMethod = [];
						for each (field in obxSeg[&apos;OBX.17&apos;]) {
							var block = {};
							if (field[&apos;OBX.17.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBX.17.1&apos;]; }
							if (field[&apos;OBX.17.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;OBX.17.2&apos;]; }
							if (field[&apos;OBX.17.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;OBX.17.3&apos;]; }
							if (field[&apos;OBX.17.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;OBX.17.4&apos;]; }
							if (field[&apos;OBX.17.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;OBX.17.5&apos;]; }
							if (field[&apos;OBX.17.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;OBX.17.6&apos;]; }
							if (Object.keys(block).length &gt; 0) {
								orc[index].OBR[indexOBR].OBX[indexOBX].observationMethod.push(block);
							}
						}
						if (orc[index].OBR[indexOBR].OBX[indexOBX].observationMethod.length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX].observationMethod;
						}

						// NTE (OBX)
						var nteGroup = getSegmentsAfter(msg,obxSeg,&apos;NTE&apos;,true);
						if (nteGroup.length &gt; 0) {
							orc[index].OBR[indexOBR].OBX[indexOBX].NTE = [];
							var indexNTE = 0;
							for each (nteSeg in nteGroup) {
								orc[index].OBR[indexOBR].OBX[indexOBX].NTE[indexNTE] = {};

								// NTE.1, setId
								if (nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].NTE[indexNTE].setId = nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }

								// NTE.2, sourceOfComment
								if (nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { orc[index].OBR[indexOBR].OBX[indexOBX].NTE[indexNTE].sourceOfComment = nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }

								// NTE.3, comment
								orc[index].OBR[indexOBR].OBX[indexOBX].NTE[indexNTE].comment = [];
								for each (field in nteSeg[&apos;NTE.3&apos;]) {
									var block = {};
									if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
										orc[index].OBR[indexOBR].OBX[indexOBX].NTE[indexNTE].comment.push(field[&apos;NTE.3.1&apos;]);
									}
								}
								if (orc[index].OBR[indexOBR].OBX[indexOBX].NTE[indexNTE].comment.length == 0) {
									delete orc[index].OBR[indexOBR].OBX[indexOBX].NTE[indexNTE].comment;
								}

								// clean up NTE and increment index
								if (orc[index].OBR[indexOBR].OBX[indexOBX].NTE.length == 0) {
									delete orc[index].OBR[indexOBR].OBX[indexOBX].NTE;
								} else {
									indexNTE++;
								}
							}
						}

						// clean up OBX and increment index
						if (Object.keys(orc[index].OBR[indexOBR].OBX[indexOBX]).length == 0) {
							delete orc[index].OBR[indexOBR].OBX[indexOBX];
						} else {
							indexOBX++;
						}
					}
				}

				// clean up OBR and increment index
				if (Object.keys(orc[index].OBR[indexOBR]).length == 0) {
					delete orc[index].OBR[indexOBR];
				} else {
					indexOBR++;
				}
			}

			// Clean up the OBR object if it&apos;s empty
			if (orc[index].OBR[0] == null){
				delete orc[index].OBR;
			}
		}

		// Increment the ORC index
		index++;
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// If it has content, add the AL1 segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
      </steps>
      <inboundTemplate encoding="base64"></inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundDataType>HL7V2</inboundDataType>
      <outboundDataType>HL7V2</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.1">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.1">
          <handleRepetitions>true</handleRepetitions>
          <handleSubcomponents>true</handleSubcomponents>
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <stripNamespaces>true</stripNamespaces>
          <segmentDelimiter>\r</segmentDelimiter>
          <convertLineBreaks>true</convertLineBreaks>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.1">
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <segmentDelimiter>\r</segmentDelimiter>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.1">
          <splitType>MSH_Segment</splitType>
          <batchScript></batchScript>
        </batchProperties>
        <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.1">
          <segmentDelimiter>\r</segmentDelimiter>
          <successfulACKCode>AA</successfulACKCode>
          <successfulACKMessage></successfulACKMessage>
          <errorACKCode>AE</errorACKCode>
          <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
          <rejectedACKCode>AR</rejectedACKCode>
          <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
          <msh15ACKAccept>false</msh15ACKAccept>
          <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
        </responseGenerationProperties>
        <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.1">
          <successfulACKCode>AA,CA</successfulACKCode>
          <errorACKCode>AE,CE</errorACKCode>
          <rejectedACKCode>AR,CR</rejectedACKCode>
          <validateMessageControlId>true</validateMessageControlId>
          <originalMessageControlId>Destination_Encoded</originalMessageControlId>
          <originalIdMapVariable></originalIdMapVariable>
        </responseValidationProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.1">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.1">
          <handleRepetitions>true</handleRepetitions>
          <handleSubcomponents>true</handleSubcomponents>
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <stripNamespaces>true</stripNamespaces>
          <segmentDelimiter>\r</segmentDelimiter>
          <convertLineBreaks>true</convertLineBreaks>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.1">
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <segmentDelimiter>\r</segmentDelimiter>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.1">
          <splitType>MSH_Segment</splitType>
          <batchScript></batchScript>
        </batchProperties>
        <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.1">
          <segmentDelimiter>\r</segmentDelimiter>
          <successfulACKCode>AA</successfulACKCode>
          <successfulACKMessage></successfulACKMessage>
          <errorACKCode>AE</errorACKCode>
          <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
          <rejectedACKCode>AR</rejectedACKCode>
          <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
          <msh15ACKAccept>false</msh15ACKAccept>
          <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
        </responseGenerationProperties>
        <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.1">
          <successfulACKCode>AA,CA</successfulACKCode>
          <errorACKCode>AE,CE</errorACKCode>
          <rejectedACKCode>AR,CR</rejectedACKCode>
          <validateMessageControlId>true</validateMessageControlId>
          <originalMessageControlId>Destination_Encoded</originalMessageControlId>
          <originalIdMapVariable></originalIdMapVariable>
        </responseValidationProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.4.1">
      <rules/>
    </filter>
    <transportName>Channel Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.4.1">
      <metaDataId>1</metaDataId>
      <name>Internal Test</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.4.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.4.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
        </destinationConnectorProperties>
        <channelId>none</channelId>
        <channelTemplate>${hl7JSON}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.4.1">
        <steps/>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.1">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.1">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.1">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.1">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.1">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.4.1">
        <steps/>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.4.1">
        <rules/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.4.1">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <tags class="linked-hash-set"/>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="3.4.1">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <archiveEnabled>true</archiveEnabled>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <codeTemplateLibraries>
    <codeTemplateLibrary version="3.4.1">
      <id>10e63131-3e24-4419-a268-ed823aba5790</id>
      <name>Datica Mirth OCI Code Template Library</name>
      <revision>1</revision>
      <lastModified>
        <time>1512397292259</time>
        <timezone>America/New_York</timezone>
      </lastModified>
      <description>This library contains code templates used by the Datica Mirth OCI channels</description>
      <includeNewChannels>true</includeNewChannels>
      <enabledChannelIds>
        <string>1192bb86-1f4d-4ca0-9343-e1b87d790154</string>
        <string>44ade9e2-d2ec-40f0-99cd-c2518f1aef0a</string>
        <string>2edfb44b-d53e-43c0-9cee-dfb8c5d28c80</string>
        <string>12832ab3-cdac-485f-bf81-4c525359af88</string>
        <string>6546423b-30d4-46dc-92d7-3e651a542a42</string>
        <string>0d245f0f-1239-46cb-96db-b6c03ee91b18</string>
        <string>515eb748-bcc9-4b46-a086-be3174f3df41</string>
        <string>f6ba16ce-08cf-499f-8dac-143646aadd51</string>
        <string>6a27e181-4776-46d7-b862-5cc4968ec8e7</string>
        <string>647fa65c-d0bb-4f32-a1f6-b218136ebdb8</string>
      </enabledChannelIds>
      <disabledChannelIds>
        <string>8b69b2e3-4cb0-40f9-93e4-b56c33ba112d</string>
        <string>03fbd8a8-0215-47fb-8077-bdfea025f8be</string>
        <string>3a0d6cc3-aa81-405f-9030-9e6f1aaede1e</string>
        <string>e7c2be6b-fba1-4fa6-8960-0fe4e997b5bd</string>
        <string>7fa5ee0f-5da8-4460-b9b9-9ad791096261</string>
        <string>52e9904e-a3ec-44fa-ae8a-d660a6e10a42</string>
        <string>4c14f245-2cd7-4e51-9401-6a941fa948f5</string>
        <string>7a7a1307-a695-490f-9755-46ada428c159</string>
        <string>4108bf57-50de-4347-8719-64f582334aa0</string>
        <string>638e0505-abd0-405d-8422-8b6e0e84e238</string>
        <string>9ff5bb6e-6c76-4b3a-9e87-033a11dad4f6</string>
        <string>27b614a4-fbd6-41bc-b37f-d9454a0b73eb</string>
        <string>8f7a81c6-ab97-4335-b731-f3d2c715cada</string>
        <string>a605c468-d34f-4966-9c18-db8ce72e023f</string>
        <string>ab4e0274-be44-444a-8530-c08ae238cd93</string>
        <string>9391bf69-d2f7-4085-bff0-723ef11a9df5</string>
        <string>053386c8-3182-4620-bc1b-9d3974d34be8</string>
        <string>4b7b461d-8246-4797-a8f3-06f07d9efee4</string>
        <string>76e2dd55-419b-4f78-8cb4-b8eb687499f5</string>
        <string>866fbd5b-63a2-4211-b13f-dabd5601de7c</string>
        <string>184f26f3-f72c-4208-a66e-6ff4b78d0d98</string>
        <string>689629e8-f3d1-4ded-b2e8-b28264f74da6</string>
        <string>479ca566-d489-4f92-ac92-6bb019eecd27</string>
        <string>dce6c65a-511c-4d06-909e-6e9553281842</string>
        <string>651d65e5-1460-44d9-8b9d-ee983797f36e</string>
        <string>424319ec-4d06-44ae-b395-b0e0e3c161e5</string>
        <string>b9e4ec1b-3666-4a7c-a6e5-d44bf4acb58b</string>
        <string>423968eb-01ad-465f-891a-250444e65d13</string>
        <string>fc6b053f-f078-477d-b317-e55aa12e8d1a</string>
        <string>3076fe92-da8c-46f1-b162-4498433c82c3</string>
        <string>0a73e2f2-ef41-4e08-afde-3f0a445106eb</string>
        <string>06f51744-9fe3-4c9c-a100-0497fc79a5b1</string>
        <string>14fd925a-eaab-457c-9d8b-18803350fb1a</string>
        <string>ae2cac45-d0d6-404f-9530-3fc44e2369cc</string>
        <string>6a029d79-d96f-4437-b9ef-10b2f345dd5d</string>
        <string>4da26cfa-8b26-4353-9928-f33f024bc8a6</string>
        <string>217689ee-ddf7-4085-9261-3e030e95293a</string>
        <string>a20be57d-4b14-4932-88fd-b3264b444fdf</string>
        <string>3dde045a-c514-4cd7-b6d5-5576155177d5</string>
        <string>a99f3b5a-07f0-400d-ae09-c195cf2a59c5</string>
        <string>70d1e94a-bc04-413e-8510-f534075deb79</string>
        <string>f2231b87-3c49-498a-962d-03503bc04147</string>
        <string>6d5edbe0-3c33-4a60-b78b-08e32afdb880</string>
        <string>af777014-3696-4fad-8f98-293e7d65a90c</string>
        <string>17f3958e-1207-47ba-aab9-5aab3ef15476</string>
        <string>8729b803-b38a-46f6-be11-5169facc2632</string>
        <string>015db3f7-825c-484e-86b2-33b9e79b727c</string>
        <string>2a032710-3d63-450a-b0bf-c0099bb29aab</string>
        <string>4bf5438f-232a-487a-9581-c796f605654d</string>
        <string>60254522-dc8c-43d6-bb41-ac66897c0d43</string>
        <string>1f7adc36-6fa0-47f3-9228-d55c8a988ac0</string>
        <string>5c88d795-4958-4147-b151-b84111a83d89</string>
        <string>d94f8c71-b05b-4446-813d-be17058a6480</string>
        <string>a48610e7-1f18-467b-bb69-b3ac5c2b8c04</string>
        <string>29361ad8-00dc-45c7-ab61-7b2e07023969</string>
        <string>f893da87-8e5f-48b8-9280-c384ff3bcc99</string>
        <string>83eb8d17-1892-4bfd-b19b-e28e0ca03b69</string>
        <string>1d2d8815-0962-4986-b731-b1f49a733db8</string>
        <string>ab1f0813-77a3-4b4e-90be-a472e999a047</string>
        <string>07b13575-8803-4340-92e8-40bc9f160fc8</string>
        <string>6f4013b1-cbc4-412b-9984-2204fe7746da</string>
        <string>660f2bb8-3471-47a4-9299-98a985017333</string>
        <string>30573bec-3215-4dc8-becb-091ab5485be0</string>
        <string>46214349-f697-4c7b-8d26-44fd409efc53</string>
        <string>f6b6cbe4-cdca-42f0-ac74-dfa7e49a27c6</string>
        <string>abf6afe4-de93-44e8-b59c-1c967d045b38</string>
        <string>9966294e-7c31-4f52-9d2f-2fd705e583a9</string>
        <string>f1246189-09ae-4ecb-b73e-35d9d4a21876</string>
        <string>e00c4162-2e90-440a-8e99-1543a0d8472d</string>
        <string>0fa23c6d-b057-44bc-a4b3-f4019fea0c5e</string>
        <string>9901adbe-50a3-431f-8b18-b93375093c6f</string>
        <string>c43b6a54-5476-4eb7-82c7-b741009c4031</string>
        <string>3c90fc7c-1aa1-4381-83a1-116e3e6bdd61</string>
        <string>f590b560-ca56-45de-8716-1432f7b6efc5</string>
        <string>a7091b52-5045-47d3-84ae-e5a6579e2943</string>
        <string>aa0e5130-6ffd-4960-a1f4-a9cefd1af050</string>
        <string>3511e706-3d3c-4174-a65f-0905688e9f22</string>
        <string>9977e3d2-2184-4e4f-8815-f9b42830dd51</string>
        <string>3fc61612-3fc3-4a64-b42f-2975a71f66b7</string>
        <string>f47f2edc-2a29-4fc4-9de6-a9efa9fcbb38</string>
        <string>f1b9e55e-698d-4d5a-a6fd-d8bc75f7251f</string>
        <string>b1e2fe6b-4991-40ff-a9f4-4ce5abed0109</string>
        <string>6c07f763-a93a-47ae-a1d8-2580fc0f5ccc</string>
        <string>c8f5ba67-7d41-4abf-b4f5-dd122b441f36</string>
        <string>2dcc02c1-0e50-44e2-aa63-46b5bbb6d31c</string>
        <string>698bc4ea-c9c7-4af3-9cbc-0ae9f27665bd</string>
        <string>20ebe877-0a55-4589-8daa-bbc66f8c1746</string>
        <string>104680bd-a293-4edc-a33a-ecfeec069da5</string>
        <string>99beb09b-6d76-4fc1-aa07-8e53472b7036</string>
        <string>782cfee5-4ca6-49c3-ae7f-dd76a5e4df48</string>
        <string>d0b3a0e3-01ff-4ce5-a4a7-748c7413e51f</string>
        <string>20b589b6-4167-4f8d-b8ab-242f62a28452</string>
        <string>993fe87c-697f-4259-b59f-ebd7e3913ac8</string>
        <string>640344b6-2d0e-4858-bd43-ef58d9329f75</string>
        <string>93aa0bb7-a3e4-488d-98ec-d14ba49d1c9c</string>
        <string>d51e8dea-3e2a-49d4-9475-21db46ed1559</string>
        <string>c67da354-57e3-401f-b684-2190b92335ac</string>
        <string>4ad918f5-1323-44a9-b3ec-fce83e062b9d</string>
        <string>b4c20126-17c5-4c11-a76e-7fa2aaf94cbe</string>
        <string>220aeb9b-3050-43ff-bd41-7e38cec5010e</string>
        <string>e8667ddb-063e-48cf-a163-f2d50944296b</string>
        <string>2de6bc63-2d0c-4891-8662-05331cdbc135</string>
        <string>e340c788-a921-4bab-92d9-ff8e0a640575</string>
        <string>7223dcc0-41c9-4cba-872f-3cb8ca724ea3</string>
        <string>a74ae7d3-b6c3-49b5-840f-0aafbac3fa6b</string>
        <string>b92f73d2-fb74-4a63-bec5-c8464bc22653</string>
        <string>b340b685-f8f8-4df2-a03e-82efe8d9afcf</string>
        <string>a8454dfe-aa8e-469f-a5bc-fe30fd3d3033</string>
        <string>ef90d21a-b975-45f9-8426-83de2de99188</string>
        <string>fd282052-cae0-4b01-9f4a-2a68f8d4fd8a</string>
        <string>cadedffd-7184-4c62-9ed9-5cf36ccb32b8</string>
        <string>98d6cd83-c049-44d8-ad48-1c44d95ce6f2</string>
        <string>fc7fa005-2346-4dc2-9fb2-faaa090c556f</string>
        <string>1045246c-704d-445d-8733-86aa16205994</string>
        <string>0d6774d6-8663-4513-8a78-fea5ebe69bbc</string>
        <string>b56f9561-3659-4e4d-a03c-723b2daf9f49</string>
        <string>6548b06b-0e02-4375-8749-b61e5a016ed2</string>
        <string>76656822-9750-4ba0-8b42-8efc01f75230</string>
        <string>1cb576e1-6c80-457b-a7d7-9406113157a3</string>
        <string>86e5d119-ef36-4eb6-852e-701228076b51</string>
        <string>748de96b-9101-47d0-88aa-c18344c194ca</string>
        <string>6704e9fc-7f6f-4e67-bfd4-527ba1a8b186</string>
        <string>749d6b73-ced6-4638-a7ad-4049c811a35c</string>
        <string>412610bb-4ac3-4229-8929-f7969018a9dd</string>
        <string>04ef8a88-576f-42ab-a637-5383776a0b60</string>
        <string>8cfa82cc-ee8a-428a-9fff-e32b2439b9c8</string>
        <string>6d6a6667-6c83-476a-a0f6-dd8d524dd887</string>
        <string>fbd5a175-ad41-44f6-95d3-bd898a3f3fb8</string>
        <string>a6bb0a27-6db8-4218-9478-a1600bae3a7b</string>
        <string>2d2c762c-2f17-482e-af65-1b979c758250</string>
        <string>1a7d6d5f-97a9-4e77-80eb-cfb94fa445c6</string>
        <string>4dcf348b-f385-4889-8e10-580092be907f</string>
        <string>ab7f86cd-94ff-4237-bef9-3e45057821ba</string>
        <string>fd891108-6b82-4ca9-a0ac-0d163926ae0a</string>
        <string>bc5b7a3d-b86d-48d1-81fd-a5f92303defb</string>
        <string>4c9b4da2-faf1-45b3-9cdf-bec2f81bf308</string>
        <string>55de7d91-8e2e-473b-9ca1-09aa47254a75</string>
        <string>add3dd62-61ff-4c63-a4a5-59b97c22c830</string>
        <string>ce9ebf65-8647-46bb-83aa-f1acb687c877</string>
      </disabledChannelIds>
      <codeTemplates>
        <codeTemplate version="3.4.1">
          <id>b9651842-7ccb-4761-aedf-a9a1461dd5f7</id>
          <name>Convert HL7 Date Format to ISO</name>
          <revision>1</revision>
          <lastModified>
            <time>1512397292449</time>
            <timezone>America/New_York</timezone>
          </lastModified>
          <type>FUNCTION</type>
          <contextSet>
            <delegate>
              <contextType>DESTINATION_DISPATCHER</contextType>
              <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
              <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
              <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              <contextType>SOURCE_RECEIVER</contextType>
            </delegate>
          </contextSet>
          <code>/**
	Converts standard HL7 v2.x date format to human-readable ISO date format
*/

/*
	Author: Datica Inc.
	toISODate: Returns an ISO-formatted date string with specified timezone offset

	Arguments
	---------
		Required
		--------
			hl7DateString:		An HL7-formatted date string (ex: &quot;yyyyMMddHHmmss&quot;

		Optional
		--------
			timezome:			A timezone identifier string corresponding to one of the java.util.TimeZone values (ex: &quot;US/Central&quot;)
*/

function toISODate( hl7DateString, timezone ) {
	var isoDate;
	var dateString;
	var hl7Formatter;
	var isoFormatter = new Packages.java.text.SimpleDateFormat(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ssZ&quot;);

	if (timezone) {
		isoFormatter.setTimeZone(Packages.java.util.TimeZone.getTimeZone(timezone));
	}
	
	if ( hl7DateString != null &amp;&amp; !isNaN(hl7DateString.substring(0,13)) &amp;&amp; hl7DateString.length &gt; 14 ) {
		hl7Formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmssZ&quot;);
	}
	else if ( hl7DateString != null &amp;&amp; !isNaN(hl7DateString) &amp;&amp; hl7DateString &gt; 0 &amp;&amp; hl7DateString.length == 14 ) {
		hl7Formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	} 
	else if ( hl7DateString != null &amp;&amp; !isNaN(hl7DateString) &amp;&amp; hl7DateString &gt; 0 &amp;&amp; hl7DateString.length == 12 ) {
		hl7Formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmm&quot;);
	} 
	else if ( hl7DateString != null &amp;&amp; !isNaN(hl7DateString) &amp;&amp; hl7DateString &gt; 0 &amp;&amp; hl7DateString.length == 8 ) {
		hl7Formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMdd&quot;);
	} 
	else dateString = hl7DateString;
	
	try {
		if (hl7Formatter) {
			isoDate = hl7Formatter.parse(hl7DateString);
			isoDate = isoFormatter.format(isoDate);
			dateString = new String(isoDate);
		}
	} catch (err) {
		dateString = hl7DateString;
	} finally {
		return dateString;
	}
}</code>
        </codeTemplate>
        <codeTemplate version="3.4.1">
          <id>95e528b7-1e7f-490e-86da-7c14b23ee4f3</id>
          <name>Convert ISO Date Format to HL7</name>
          <revision>1</revision>
          <lastModified>
            <time>1512397292549</time>
            <timezone>America/New_York</timezone>
          </lastModified>
          <type>FUNCTION</type>
          <contextSet>
            <delegate>
              <contextType>DESTINATION_DISPATCHER</contextType>
              <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
              <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
              <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              <contextType>SOURCE_RECEIVER</contextType>
            </delegate>
          </contextSet>
          <code>/**
	Converts ISO date format to HL7 v2 format
*/

/*
	Author: Datica Inc.
	toHL7Date: Returns an HL7-formatted date string with specified timezone offset

	Arguments
	---------
		Required
		--------
			isoDateString:		An ISO-formatted date string (ex: &quot;yyyy-MM-ddTHH:mm:ssZ&quot;

		Optional
		--------
			timezome:			A timezone identifier string corresponding to one of the java.util.TimeZone values (ex: &quot;US/Central&quot;)
*/

function toHL7Date( isoDateString, timezone ) 
{
	var hl7Date;
	var dateString;
	var isoFormatter;
	var hl7Formatter;

	// ISO Date Format: yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;
	if ( isoDateString != null &amp;&amp; isoDateString.length &lt;= 25 &amp;&amp; isoDateString.length &gt;= 22) {
		isoFormatter = new Packages.java.text.SimpleDateFormat(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ssZ&quot;);
		hl7Formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmssZ&quot;);
		if (timezone) {
			hl7Formatter.setTimeZone(Packages.java.util.TimeZone.getTimeZone(timezone));
		}
	}
	// ISO Date Format: yyyy-MM-dd HH:mm:ss
	else if ( isoDateString != null &amp;&amp; isoDateString.length == 19 ) {
		isoFormatter = new Packages.java.text.SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
		hl7Formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	}
	// ISO Date Format: yyyy-MM-dd HH:mm
	else if ( isoDateString != null &amp;&amp; isoDateString.length == 16 ) {
		isoFormatter = new Packages.java.text.SimpleDateFormat(&quot;yyyy-MM-dd HH:mm&quot;);
		hl7Formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmm&quot;);	
	} 
	// ISO Date Format: yyyy-MM-dd
	else if ( isoDateString != null &amp;&amp; isoDateString.length == 10 ) {
		isoFormatter = new Packages.java.text.SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
		hl7Formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMdd&quot;);	
	}
	// None of the above, return original date string.
	else dateString = isoDateString;

	try {
		if (isoFormatter) {
			hl7Date = isoFormatter.parse(isoDateString);
			hl7Date = hl7Formatter.format(hl7Date);
			dateString = new String(hl7Date);
		}
	} catch (err) {
		dateString = isoDateString;
	} finally {
		return dateString;
	}
}</code>
        </codeTemplate>
        <codeTemplate version="3.4.1">
          <id>4cb42e06-7c9a-4fd2-bcb5-b9f4053a9c19</id>
          <name>Get Segments After a Particular Segment</name>
          <revision>1</revision>
          <lastModified>
            <time>1512397292339</time>
            <timezone>America/New_York</timezone>
          </lastModified>
          <type>FUNCTION</type>
          <contextSet>
            <delegate>
              <contextType>DESTINATION_DISPATCHER</contextType>
              <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
              <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
              <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              <contextType>SOURCE_RECEIVER</contextType>
            </delegate>
          </contextSet>
          <code>/**
	Returns an array of segments with the specified name that come after a given segment in the message.
*/
/*
	Author: Nick Rupley
	Date Modified: 2/13/2013
	getSegmentsAfter: Returns an array of segments with the specified name that come after a given segment in the message.

	Arguments
	---------
		Required
		--------
			root:			The root HL7Message node of the message, or the parent of the segment node.
			startSeg:		The segment AFTER which to start collecting segments.
			segName:		The name (String or RegExp) of the segments you want to collect.

		Optional
		--------
			consecutiveInd:	If true, indicates that the segments are expected to come directly after startSeg. 
							If false, segments are collected until another segment with the same name as startSeg is encountered.
							Defaults to false.
			stopSegNames:	An array of segment names that, when encountered, stop the collection of segments.
*/

function getSegmentsAfter(root, startSeg, segName, consecutiveInd, stopSegNames) {
	function test(str) {
		return segName instanceof RegExp ? segName.test(str) : segName === str;
	}

	// The index to start collection is the next one up from the starting segment
	var index = startSeg.childIndex()+1;
	// The return array
	var out = [];
	// Boolean placeholder to stop iteration
	var done = false;
	// Object that will contain all of the stopSegNames strings, bound to a truthy value (1)
	var stopNames = {};
	// Indicates whether we have any stop segments
	var stopNamesInd = false;
	// If stopSegNames is defined
	if (stopSegNames !== undefined &amp;&amp; stopSegNames !== null) {
		// Set our indicator to true
		stopNamesInd = true;
		// Add each string in the array to our object
		for each (name in stopSegNames)
			stopNames[name] = 1;
	}

	// Iterate through each child in the root, starting at the segment after startSeg, and
	// ending at the final segment, or when the done flag is set to true.
	while (index &lt; root.children().length() &amp;&amp; !done) {
		// If a stop segment is encountered, stop iteration
		if (stopNamesInd &amp;&amp; root.children()[index].name().toString() in stopNames)
			done = true;
		// If a segment with the same name as startSeg is encountered, stop iteration
		else if (root.children()[index].name().toString() == startSeg.name().toString() &amp;&amp; !consecutiveInd)
			done = true;
		// If we&apos;re only collecting consecutive segments and we encounter a segment with a name other than segName, stop iteration
		else if (!test(root.children()[index].name().toString()) &amp;&amp; consecutiveInd)
			done = true;
		// If all previous tests passed, and the current segment has a name of segName, then add it to our array
		else if (test(root.children()[index].name().toString()))
			out.push(root.children()[index]);
		// Increment our index counter
		index++;
	}

	// Return the output array
	return out;
}</code>
        </codeTemplate>
      </codeTemplates>
    </codeTemplateLibrary>
  </codeTemplateLibraries>
</channel>