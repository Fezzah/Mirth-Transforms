<channel version="3.4.1">
  <id>44ade9e2-d2ec-40f0-99cd-c2518f1aef0a</id>
  <nextMetaDataId>2</nextMetaDataId>
  <name>Datica OCI - HL7 RAS to JSON Transform</name>
  <description>Transform RAS HL7 to JSON</description>
  <enabled>true</enabled>
  <lastModified>
    <time>1512398378819</time>
    <timezone>America/New_York</timezone>
  </lastModified>
  <revision>2</revision>
  <sourceConnector version="3.4.1">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.vm.VmReceiverProperties" version="3.4.1">
      <pluginProperties/>
      <sourceConnectorProperties version="3.4.1">
        <responseVariable>None</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
    </properties>
    <transformer version="3.4.1">
      <steps>
        <step>
          <sequenceNumber>0</sequenceNumber>
          <name>Create the JSON wrapper</name>
          <script>// Wrapper for the JSON object that we&apos;ll construct
var hl7JSON = {
	&quot;message_type&quot; : &quot;RAS&quot;,
	&quot;content&quot; : {}
};

// Save the wrapper in a channelMap variable for later usage
channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// Wrapper for the JSON object that we&apos;ll construct
var hl7JSON = {
	&quot;message_type&quot; : &quot;RAS&quot;,
	&quot;content&quot; : {}
};

// Save the wrapper in a channelMap variable for later usage
channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>1</sequenceNumber>
          <name>MSH (Message Header) Segment</name>
          <script>// MSH
var msh = {};

// MSH.1, fieldSeparator
if (msg[&apos;MSH&apos;][&apos;MSH.1&apos;][&apos;MSH.1.1&apos;].toString() != &quot;&quot;) {msh.fieldSeparator = msg[&apos;MSH&apos;][&apos;MSH.1&apos;][&apos;MSH.1.1&apos;]; }

// MSH.2, encodingCharacters
if (msg[&apos;MSH&apos;][&apos;MSH.2&apos;][&apos;MSH.2.1&apos;].toString() != &quot;&quot;) {msh.fieldSeparator = msg[&apos;MSH&apos;][&apos;MSH.2&apos;][&apos;MSH.2.1&apos;]; }

// MSH.3, sendingApplication
msh.sendingApplication = {};
if (msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;].toString() != &quot;&quot;) {msh.sendingApplication.namespaceId = msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.2&apos;].toString() != &quot;&quot;) {msh.sendingApplication.universalId = msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.3&apos;].toString() != &quot;&quot;) {msh.sendingApplication.universalIdType = msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.3&apos;]; }
if (Object.keys(msh.sendingApplication).length == 0) {
	delete msh.sendingApplication;
}

// MSH.4, sendingFacility
msh.sendingFacility = {};
if (msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &quot;&quot;) {msh.sendingFacility.namespaceId = msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.2&apos;].toString() != &quot;&quot;) {msh.sendingFacility.universalId = msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.3&apos;].toString() != &quot;&quot;) {msh.sendingFacility.universalIdType = msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.3&apos;]; }
if (Object.keys(msh.sendingFacility).length == 0) {
	delete msh.sendingFacility;
}

// MSH.5, receivingApplication
msh.receivingApplication = {};
if (msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;].toString() != &quot;&quot;) {msh.receivingApplication.namespaceId = msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.2&apos;].toString() != &quot;&quot;) {msh.receivingApplication.universalId = msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.3&apos;].toString() != &quot;&quot;) {msh.receivingApplication.universalIdType = msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.3&apos;]; }
if (Object.keys(msh.receivingApplication).length == 0) {
	delete msh.receivingApplication;
}

// MSH.6, receivingFacility
msh.receivingFacility = {};
if (msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;].toString() != &quot;&quot;) {msh.receivingFacility.namespaceId = msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.2&apos;].toString() != &quot;&quot;) {msh.receivingFacility.universalId = msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.3&apos;].toString() != &quot;&quot;) {msh.receivingFacility.universalIdType = msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.3&apos;]; }
if (Object.keys(msh.receivingFacility).length == 0) {
	delete msh.receivingFacility;
}

// MSH.7, dateTimeOfMessage
if (msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString() != &quot;&quot;) {msh.dateTimeOfMessage = msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;]; }

// MSH.8, security
if (msg[&apos;MSH&apos;][&apos;MSH.8&apos;][&apos;MSH.8.1&apos;].toString() != &quot;&quot;) {msh.security = msg[&apos;MSH&apos;][&apos;MSH.8&apos;][&apos;MSH.8.1&apos;]; }

// MSH.9, messageType
msh.messageType = {};
if (msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;].toString() != &quot;&quot;) {msh.messageType.messageType = msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() != &quot;&quot;) {msh.messageType.triggerEvent = msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;]; }
if (Object.keys(msh.messageType).length == 0) {
	delete msh.messageType;
}

// MSH.10, messageControlID
if (msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString() != &quot;&quot;) {msh.messageControlID = msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;]; }

// MSH.11, processingID
msh.processingID = {};
if (msg[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.1&apos;].toString() != &quot;&quot;) {msh.processingID.processingID = msg[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.2&apos;].toString() != &quot;&quot;) {msh.processingID.processingMode = msg[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.2&apos;]; }
if (Object.keys(msh.processingID).length == 0) {
	delete msh.processingID;
}

// MSH.12, versionID
if (msg[&apos;MSH&apos;][&apos;MSH.12&apos;][&apos;MSH.12.1&apos;].toString() != &quot;&quot;) {msh.versionID = msg[&apos;MSH&apos;][&apos;MSH.12&apos;][&apos;MSH.12.1&apos;]; }

// MSH.13, sequenceNumber
if (msg[&apos;MSH&apos;][&apos;MSH.13&apos;][&apos;MSH.13.1&apos;].toString() != &quot;&quot;) {msh.sequenceNumber = msg[&apos;MSH&apos;][&apos;MSH.13&apos;][&apos;MSH.13.1&apos;]; }

// MSH.14, continuationPointer
if (msg[&apos;MSH&apos;][&apos;MSH.14&apos;][&apos;MSH.14.1&apos;].toString() != &quot;&quot;) {msh.continuationPointer = msg[&apos;MSH&apos;][&apos;MSH.14&apos;][&apos;MSH.14.1&apos;]; }

// MSH.15, acceptAcknowledgmentType
if (msg[&apos;MSH&apos;][&apos;MSH.15&apos;][&apos;MSH.15.1&apos;].toString() != &quot;&quot;) {msh.acceptAcknowledgmentType = msg[&apos;MSH&apos;][&apos;MSH.15&apos;][&apos;MSH.15.1&apos;]; }

// MSH.16, applicationAcknowledgmentType
if (msg[&apos;MSH&apos;][&apos;MSH.16&apos;][&apos;MSH.16.1&apos;].toString() != &quot;&quot;) {msh.applicationAcknowledgmentType = msg[&apos;MSH&apos;][&apos;MSH.16&apos;][&apos;MSH.16.1&apos;]; }

// MSH.17, countryCode
if (msg[&apos;MSH&apos;][&apos;MSH.17&apos;][&apos;MSH.17.1&apos;].toString() != &quot;&quot;) {msh.countryCode = msg[&apos;MSH&apos;][&apos;MSH.17&apos;][&apos;MSH.17.1&apos;]; }

// MSH.18, characterSet
msh.characterSet = [];
for each (field in msg[&apos;MSH&apos;][&apos;MSH.18&apos;]) {
	if (field[&apos;MSH.18.1&apos;].toString() != &quot;&quot;) {msh.characterSet.push(field[&apos;MSH.18.1&apos;]); }
}
if (msh.characterSet.length == 0) {
	delete msh.characterSet;
}

// MSH.19, principalLanguageOfMessage
msh.principalLanguageOfMessage = {};
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.1&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.id = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.2&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.text = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.3&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.codingSystem = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.3&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.4&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.altId = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.4&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.5&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.altText = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.5&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.6&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.altCodingSystem = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.6&apos;]; }
if (Object.keys(msh.principalLanguageOfMessage).length == 0) {
	delete msh.principalLanguageOfMessage;
}

// Optional: save a copy of the completed MSH segment for reference later
//channelMap.put(&quot;msh&quot;, msh); // uncomment to save

// If it has content, add the MSH segment to the hl7JSON object
if (msh &amp;&amp; Object.keys(msh).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.MSH = msh;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// MSH
var msh = {};

// MSH.1, fieldSeparator
if (msg[&apos;MSH&apos;][&apos;MSH.1&apos;][&apos;MSH.1.1&apos;].toString() != &quot;&quot;) {msh.fieldSeparator = msg[&apos;MSH&apos;][&apos;MSH.1&apos;][&apos;MSH.1.1&apos;]; }

// MSH.2, encodingCharacters
if (msg[&apos;MSH&apos;][&apos;MSH.2&apos;][&apos;MSH.2.1&apos;].toString() != &quot;&quot;) {msh.fieldSeparator = msg[&apos;MSH&apos;][&apos;MSH.2&apos;][&apos;MSH.2.1&apos;]; }

// MSH.3, sendingApplication
msh.sendingApplication = {};
if (msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;].toString() != &quot;&quot;) {msh.sendingApplication.namespaceId = msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.2&apos;].toString() != &quot;&quot;) {msh.sendingApplication.universalId = msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.3&apos;].toString() != &quot;&quot;) {msh.sendingApplication.universalIdType = msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.3&apos;]; }
if (Object.keys(msh.sendingApplication).length == 0) {
	delete msh.sendingApplication;
}

// MSH.4, sendingFacility
msh.sendingFacility = {};
if (msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &quot;&quot;) {msh.sendingFacility.namespaceId = msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.2&apos;].toString() != &quot;&quot;) {msh.sendingFacility.universalId = msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.3&apos;].toString() != &quot;&quot;) {msh.sendingFacility.universalIdType = msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.3&apos;]; }
if (Object.keys(msh.sendingFacility).length == 0) {
	delete msh.sendingFacility;
}

// MSH.5, receivingApplication
msh.receivingApplication = {};
if (msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;].toString() != &quot;&quot;) {msh.receivingApplication.namespaceId = msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.2&apos;].toString() != &quot;&quot;) {msh.receivingApplication.universalId = msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.3&apos;].toString() != &quot;&quot;) {msh.receivingApplication.universalIdType = msg[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.3&apos;]; }
if (Object.keys(msh.receivingApplication).length == 0) {
	delete msh.receivingApplication;
}

// MSH.6, receivingFacility
msh.receivingFacility = {};
if (msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;].toString() != &quot;&quot;) {msh.receivingFacility.namespaceId = msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.2&apos;].toString() != &quot;&quot;) {msh.receivingFacility.universalId = msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.3&apos;].toString() != &quot;&quot;) {msh.receivingFacility.universalIdType = msg[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.3&apos;]; }
if (Object.keys(msh.receivingFacility).length == 0) {
	delete msh.receivingFacility;
}

// MSH.7, dateTimeOfMessage
if (msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString() != &quot;&quot;) {msh.dateTimeOfMessage = msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;]; }

// MSH.8, security
if (msg[&apos;MSH&apos;][&apos;MSH.8&apos;][&apos;MSH.8.1&apos;].toString() != &quot;&quot;) {msh.security = msg[&apos;MSH&apos;][&apos;MSH.8&apos;][&apos;MSH.8.1&apos;]; }

// MSH.9, messageType
msh.messageType = {};
if (msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;].toString() != &quot;&quot;) {msh.messageType.messageType = msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() != &quot;&quot;) {msh.messageType.triggerEvent = msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;]; }
if (Object.keys(msh.messageType).length == 0) {
	delete msh.messageType;
}

// MSH.10, messageControlID
if (msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString() != &quot;&quot;) {msh.messageControlID = msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;]; }

// MSH.11, processingID
msh.processingID = {};
if (msg[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.1&apos;].toString() != &quot;&quot;) {msh.processingID.processingID = msg[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.2&apos;].toString() != &quot;&quot;) {msh.processingID.processingMode = msg[&apos;MSH&apos;][&apos;MSH.11&apos;][&apos;MSH.11.2&apos;]; }
if (Object.keys(msh.processingID).length == 0) {
	delete msh.processingID;
}

// MSH.12, versionID
if (msg[&apos;MSH&apos;][&apos;MSH.12&apos;][&apos;MSH.12.1&apos;].toString() != &quot;&quot;) {msh.versionID = msg[&apos;MSH&apos;][&apos;MSH.12&apos;][&apos;MSH.12.1&apos;]; }

// MSH.13, sequenceNumber
if (msg[&apos;MSH&apos;][&apos;MSH.13&apos;][&apos;MSH.13.1&apos;].toString() != &quot;&quot;) {msh.sequenceNumber = msg[&apos;MSH&apos;][&apos;MSH.13&apos;][&apos;MSH.13.1&apos;]; }

// MSH.14, continuationPointer
if (msg[&apos;MSH&apos;][&apos;MSH.14&apos;][&apos;MSH.14.1&apos;].toString() != &quot;&quot;) {msh.continuationPointer = msg[&apos;MSH&apos;][&apos;MSH.14&apos;][&apos;MSH.14.1&apos;]; }

// MSH.15, acceptAcknowledgmentType
if (msg[&apos;MSH&apos;][&apos;MSH.15&apos;][&apos;MSH.15.1&apos;].toString() != &quot;&quot;) {msh.acceptAcknowledgmentType = msg[&apos;MSH&apos;][&apos;MSH.15&apos;][&apos;MSH.15.1&apos;]; }

// MSH.16, applicationAcknowledgmentType
if (msg[&apos;MSH&apos;][&apos;MSH.16&apos;][&apos;MSH.16.1&apos;].toString() != &quot;&quot;) {msh.applicationAcknowledgmentType = msg[&apos;MSH&apos;][&apos;MSH.16&apos;][&apos;MSH.16.1&apos;]; }

// MSH.17, countryCode
if (msg[&apos;MSH&apos;][&apos;MSH.17&apos;][&apos;MSH.17.1&apos;].toString() != &quot;&quot;) {msh.countryCode = msg[&apos;MSH&apos;][&apos;MSH.17&apos;][&apos;MSH.17.1&apos;]; }

// MSH.18, characterSet
msh.characterSet = [];
for each (field in msg[&apos;MSH&apos;][&apos;MSH.18&apos;]) {
	if (field[&apos;MSH.18.1&apos;].toString() != &quot;&quot;) {msh.characterSet.push(field[&apos;MSH.18.1&apos;]); }
}
if (msh.characterSet.length == 0) {
	delete msh.characterSet;
}

// MSH.19, principalLanguageOfMessage
msh.principalLanguageOfMessage = {};
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.1&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.id = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.1&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.2&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.text = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.2&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.3&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.codingSystem = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.3&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.4&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.altId = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.4&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.5&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.altText = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.5&apos;]; }
if (msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.6&apos;].toString() != &quot;&quot;) {msh.principalLanguageOfMessage.altCodingSystem = msg[&apos;MSH&apos;][&apos;MSH.19&apos;][&apos;MSH.19.6&apos;]; }
if (Object.keys(msh.principalLanguageOfMessage).length == 0) {
	delete msh.principalLanguageOfMessage;
}

// Optional: save a copy of the completed MSH segment for reference later
//channelMap.put(&quot;msh&quot;, msh); // uncomment to save

// If it has content, add the MSH segment to the hl7JSON object
if (msh &amp;&amp; Object.keys(msh).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.MSH = msh;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>2</sequenceNumber>
          <name>PID (Patient Identification), PD1 (Patient Demographic), NTE (Note), and AL1 (Allergy) Segments</name>
          <script>// PID for RAS
var pid;
if (msg[&apos;PID&apos;].length() &gt; 0) {
	pid = [];
	var index = 0;
	for each (seg in msg.PID) {
		pid[index] = {};

		// PID.1, setId
		if (seg[&apos;PID.1&apos;][&apos;PID.1.1&apos;].toString() != &quot;&quot;) { pid[index].setId = seg[&apos;PID.1&apos;][&apos;PID.1.1&apos;]; }

		// PID.2, externalId
		pid[index].externalId = {};
		if (seg[&apos;PID.2&apos;][&apos;PID.2.1&apos;].toString() != &quot;&quot;) { pid[index].externalId.id = seg[&apos;PID.2&apos;][&apos;PID.2.1&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.2&apos;].toString() != &quot;&quot;) { pid[index].externalId.identifierCheckDigit = seg[&apos;PID.2&apos;][&apos;PID.2.2&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.3&apos;].toString() != &quot;&quot;) { pid[index].externalId.codeIdentifyingCheckDigitScheme = seg[&apos;PID.2&apos;][&apos;PID.2.3&apos;]; }
		pid[index].externalId.assigningAuthority = {};
		if (seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.1&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningAuthority.namespaceId = seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.1&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.2&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningAuthority.universalId = seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.2&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.3&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningAuthority.universalIdType = seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.3&apos;]; }
		if (Object.keys(pid[index].externalId.assigningAuthority).length == 0) {
			if (seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningAuthority.namespaceId = seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;]; }
			else delete pid[index].externalId.assigningAuthority;
		}
		if (seg[&apos;PID.2&apos;][&apos;PID.2.5&apos;].toString() != &quot;&quot;) { pid[index].externalId.idTypeCode = seg[&apos;PID.2&apos;][&apos;PID.2.5&apos;]; }
		pid[index].externalId.assigningFacility = {};
		if (seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.1&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningFacility.namespaceId = seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.1&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.2&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningFacility.universalId = seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.2&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.3&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningFacility.universalIdType = seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.3&apos;]; }
		if (Object.keys(pid[index].externalId.assigningFacility).length == 0) {
			if (seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningFacility.namespaceId = seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;]; }
			else delete pid[index].externalId.assigningFacility;
		}
		if (Object.keys(pid[index].externalId).length == 0) {
			delete pid[index].externalId;
		}

		// PID.3, internalId
		pid[index].internalId = [];
		for each (field in seg[&apos;PID.3&apos;]) {
			var block = {};
			if (field[&apos;PID.3.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PID.3.1&apos;]; }
			if (field[&apos;PID.3.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PID.3.2&apos;]; }
			if (field[&apos;PID.3.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PID.3.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;PID.3.4&apos;][&apos;PID.3.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.3.4&apos;][&apos;PID.3.4.1&apos;]; }
			if (field[&apos;PID.3.4&apos;][&apos;PID.3.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PID.3.4&apos;][&apos;PID.3.4.2&apos;]; }
			if (field[&apos;PID.3.4&apos;][&apos;PID.3.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PID.3.4&apos;][&apos;PID.3.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;PID.3.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.3.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;PID.3.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PID.3.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;PID.3.6&apos;][&apos;PID.3.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.3.6&apos;][&apos;PID.3.6.1&apos;]; }
			if (field[&apos;PID.3.6&apos;][&apos;PID.3.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PID.3.6&apos;][&apos;PID.3.6.2&apos;]; }
			if (field[&apos;PID.3.6&apos;][&apos;PID.3.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PID.3.6&apos;][&apos;PID.3.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;PID.3.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.3.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				pid[index].internalId.push(block);
			}
		}
		if (pid[index].internalId.length == 0) {
			delete pid[index].internalId;
		}

		// PID.4, alternateId
		pid[index].alternateId = [];
		for each (field in seg[&apos;PID.4&apos;]) {
			var block = {};
			if (field[&apos;PID.4.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PID.4.1&apos;]; }
			if (field[&apos;PID.4.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PID.4.2&apos;]; }
			if (field[&apos;PID.4.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PID.4.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;PID.4.4&apos;][&apos;PID.4.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.4.4&apos;][&apos;PID.4.4.1&apos;]; }
			if (field[&apos;PID.4.4&apos;][&apos;PID.4.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PID.4.4&apos;][&apos;PID.4.4.2&apos;]; }
			if (field[&apos;PID.4.4&apos;][&apos;PID.4.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PID.4.4&apos;][&apos;PID.4.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;PID.4.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.4.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;PID.4.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PID.4.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;PID.4.6&apos;][&apos;PID.4.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.4.6&apos;][&apos;PID.4.6.1&apos;]; }
			if (field[&apos;PID.4.6&apos;][&apos;PID.4.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PID.4.6&apos;][&apos;PID.4.6.2&apos;]; }
			if (field[&apos;PID.4.6&apos;][&apos;PID.4.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PID.4.6&apos;][&apos;PID.4.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;PID.4.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.4.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				pid[index].alternateId.push(block);
			}
		}
		if (pid[index].alternateId.length == 0) {
			delete pid[index].alternateId;
		}

		// PID.5, patientName
		pid[index].patientName = [];
		for each (field in seg[&apos;PID.5&apos;]) {
			var block = {};
			if (field[&apos;PID.5.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PID.5.1&apos;]; }
			if (field[&apos;PID.5.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PID.5.2&apos;]; }
			if (field[&apos;PID.5.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PID.5.3&apos;]; }
			if (field[&apos;PID.5.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PID.5.4&apos;]; }
			if (field[&apos;PID.5.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PID.5.5&apos;]; }
			if (field[&apos;PID.5.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PID.5.6&apos;]; }
			if (field[&apos;PID.5.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PID.5.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].patientName.push(block);
			}	
		}
		if (pid[index].patientName.length == 0) {
			delete pid[index].patientName;
		}

		// PID.6, mothersMaidenName
		pid[index].mothersMaidenName = {};
		if (seg[&apos;PID.6&apos;][&apos;PID.6.1&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.lastName = seg[&apos;PID.6&apos;][&apos;PID.6.1&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.2&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.firstName = seg[&apos;PID.6&apos;][&apos;PID.6.2&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.3&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.middleInitOrName = seg[&apos;PID.6&apos;][&apos;PID.6.3&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.4&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.suffix = seg[&apos;PID.6&apos;][&apos;PID.6.4&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.5&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.prefix = seg[&apos;PID.6&apos;][&apos;PID.6.5&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.6&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.degree = seg[&apos;PID.6&apos;][&apos;PID.6.6&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.7&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.nameTypeCode = seg[&apos;PID.6&apos;][&apos;PID.6.7&apos;]; }
		if (Object.keys(pid[index].mothersMaidenName).length == 0) {
			delete pid[index].mothersMaidenName;
		}

		// PID.7, dateTimeBirth
		if (seg[&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() != &quot;&quot;) {pid[index].dateTimeBirth = seg[&apos;PID.7&apos;][&apos;PID.7.1&apos;]; }
		
		// PID.8, sex
		if (seg[&apos;PID.8&apos;][&apos;PID.8.1&apos;].toString() != &quot;&quot;) {pid[index].sex = seg[&apos;PID.8&apos;][&apos;PID.8.1&apos;]; }
		
		// PID.9, alias
		pid[index].alias = [];
		for each (field in seg[&apos;PID.9&apos;]) {
			var block = {};
			if (field[&apos;PID.9.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PID.9.1&apos;]; }
			if (field[&apos;PID.9.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PID.9.2&apos;]; }
			if (field[&apos;PID.9.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PID.9.3&apos;]; }
			if (field[&apos;PID.9.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PID.9.4&apos;]; }
			if (field[&apos;PID.9.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PID.9.5&apos;]; }
			if (field[&apos;PID.9.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PID.9.6&apos;]; }
			if (field[&apos;PID.9.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PID.9.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].alias.push(block);
			}	
		}
		if (pid[index].alias.length == 0) {
			delete pid[index].alias;
		}

		// PID.10, race
		if (seg[&apos;PID.10&apos;][&apos;PID.10.1&apos;].toString() != &quot;&quot;) {pid[index].race = seg[&apos;PID.10&apos;][&apos;PID.10.1&apos;]; }
		
		// PID.11, address
		pid[index].address = [];
		for each (field in seg[&apos;PID.11&apos;]) {
			var block = {};
			if (field[&apos;PID.11.1&apos;].toString() != &quot;&quot;) { block.streetAddress = field[&apos;PID.11.1&apos;]; }
			if (field[&apos;PID.11.2&apos;].toString() != &quot;&quot;) { block.otherDesignation = field[&apos;PID.11.2&apos;]; }
			if (field[&apos;PID.11.3&apos;].toString() != &quot;&quot;) { block.city = field[&apos;PID.11.3&apos;]; }
			if (field[&apos;PID.11.4&apos;].toString() != &quot;&quot;) { block.stateOrProvince = field[&apos;PID.11.4&apos;]; }
			if (field[&apos;PID.11.5&apos;].toString() != &quot;&quot;) { block.zip = field[&apos;PID.11.5&apos;]; }
			if (field[&apos;PID.11.6&apos;].toString() != &quot;&quot;) { block.country = field[&apos;PID.11.6&apos;]; }
			if (field[&apos;PID.11.7&apos;].toString() != &quot;&quot;) { block.addressType = field[&apos;PID.11.7&apos;]; }
			if (field[&apos;PID.11.8&apos;].toString() != &quot;&quot;) { block.otherGeographicDesignation = field[&apos;PID.11.8&apos;]; }
			if (field[&apos;PID.11.9&apos;].toString() != &quot;&quot;) { block.countyOrParishCode = field[&apos;PID.11.9&apos;]; }
			if (field[&apos;PID.11.10&apos;].toString() != &quot;&quot;) { block.censusTract = field[&apos;PID.11.10&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].address.push(block);
			}
		}
		if (pid[index].address.length == 0) {
			delete pid[index].address;
		}

		// PID.12, countyCode
		if (seg[&apos;PID.12&apos;][&apos;PID.12.1&apos;].toString() != &quot;&quot;) {pid[index].countyCode = seg[&apos;PID.12&apos;][&apos;PID.12.1&apos;]; }
		
		// PID.13, homePhone
		pid[index].homePhone = [];
		for each (field in seg[&apos;PID.13&apos;]) {
			var block = {};
			if (field[&apos;PID.13.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;PID.13.1&apos;]; }
			if (field[&apos;PID.13.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;PID.13.2&apos;]; }
			if (field[&apos;PID.13.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;PID.13.3&apos;]; }
			if (field[&apos;PID.13.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;PID.13.4&apos;]; }
			if (field[&apos;PID.13.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;PID.13.5&apos;]; }
			if (field[&apos;PID.13.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;PID.13.6&apos;]; }
			if (field[&apos;PID.13.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;PID.13.7&apos;]; }
			if (field[&apos;PID.13.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;PID.13.8&apos;]; }
			if (field[&apos;PID.13.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;PID.13.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].homePhone.push(block);
			}
		}
		if (pid[index].homePhone.length == 0) {
			delete pid[index].homePhone;
		}

		// PID.14, businessPhone
		pid[index].businessPhone = [];
		for each (field in seg[&apos;PID.14&apos;]) {
			var block = {};
			if (field[&apos;PID.14.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;PID.14.1&apos;]; }
			if (field[&apos;PID.14.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;PID.14.2&apos;]; }
			if (field[&apos;PID.14.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;PID.14.3&apos;]; }
			if (field[&apos;PID.14.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;PID.14.4&apos;]; }
			if (field[&apos;PID.14.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;PID.14.5&apos;]; }
			if (field[&apos;PID.14.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;PID.14.6&apos;]; }
			if (field[&apos;PID.14.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;PID.14.7&apos;]; }
			if (field[&apos;PID.14.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;PID.14.8&apos;]; }
			if (field[&apos;PID.14.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;PID.14.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].businessPhone.push(block);
			}
		}
		if (pid[index].businessPhone.length == 0) {
			delete pid[index].businessPhone;
		}

		// PID.15, primaryLanguage
		pid[index].primaryLanguage = {};
		if (seg[&apos;PID.15&apos;][&apos;PID.15.1&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.id = seg[&apos;PID.15&apos;][&apos;PID.15.1&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.2&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.text = seg[&apos;PID.15&apos;][&apos;PID.15.2&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.3&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.codingSystem = seg[&apos;PID.15&apos;][&apos;PID.15.3&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.4&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.altId = seg[&apos;PID.15&apos;][&apos;PID.15.4&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.5&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.altText = seg[&apos;PID.15&apos;][&apos;PID.15.5&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.6&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.altCodingSystem = seg[&apos;PID.15&apos;][&apos;PID.15.6&apos;]; }
		if (Object.keys(pid[index].primaryLanguage).length == 0) {
			delete pid[index].primaryLanguage;
		}

		// PID.16, maritalStatus
		if (seg[&apos;PID.16&apos;][&apos;PID.16.1&apos;].toString() != &quot;&quot;) {pid[index].maritalStatus = seg[&apos;PID.16&apos;][&apos;PID.16.1&apos;]; }
		
		// PID.17, religion
		if (seg[&apos;PID.17&apos;][&apos;PID.17.1&apos;].toString() != &quot;&quot;) {pid[index].religion = seg[&apos;PID.17&apos;][&apos;PID.17.1&apos;]; }

		// PID.18, patientAccountNumber
		pid[index].patientAccountNumber = {};
		if (seg[&apos;PID.18&apos;][&apos;PID.18.1&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.id = seg[&apos;PID.18&apos;][&apos;PID.18.1&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.2&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.identifierCheckDigit = seg[&apos;PID.18&apos;][&apos;PID.18.2&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.3&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.codeIdentifyingCheckDigitScheme = seg[&apos;PID.18&apos;][&apos;PID.18.3&apos;]; }
		pid[index].patientAccountNumber.assigningAuthority = {};
		if (seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.1&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningAuthority.namespaceId = seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.1&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.2&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningAuthority.universalId = seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.2&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.3&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningAuthority.universalIdType = seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.3&apos;]; }
		if (Object.keys(pid[index].patientAccountNumber.assigningAuthority).length == 0) {
			if (seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningAuthority.namespaceId = seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;]; }
			else delete pid[index].patientAccountNumber.assigningAuthority;
		}
		if (seg[&apos;PID.18&apos;][&apos;PID.18.5&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.idTypeCode = seg[&apos;PID.18&apos;][&apos;PID.18.5&apos;]; }
		pid[index].patientAccountNumber.assigningFacility = {};
		if (seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.1&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningFacility.namespaceId = seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.1&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.2&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningFacility.universalId = seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.2&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.3&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningFacility.universalIdType = seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.3&apos;]; }
		if (Object.keys(pid[index].patientAccountNumber.assigningFacility).length == 0) {
			if (seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningFacility.namespaceId = seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;]; }
			else delete pid[index].patientAccountNumber.assigningFacility;
		}
		if (Object.keys(pid[index].patientAccountNumber).length == 0) {
			delete pid[index].patientAccountNumber;
		}

		// PID.19, ssn
		if (seg[&apos;PID.19&apos;][&apos;PID.19.1&apos;].toString() != &quot;&quot;) {pid[index].ssn = seg[&apos;PID.19&apos;][&apos;PID.19.1&apos;]; }
		
		// PID.20, driversLicenseNumber
		pid[index].driversLicenseNumber = {};
		if (seg[&apos;PID.20&apos;][&apos;PID.20.1&apos;].toString() != &quot;&quot;) {pid[index].driversLicenseNumber.licenseNumber = seg[&apos;PID.20&apos;][&apos;PID.20.1&apos;]; }
		if (seg[&apos;PID.20&apos;][&apos;PID.20.2&apos;].toString() != &quot;&quot;) {pid[index].driversLicenseNumber.issuingStateProvinceCountry = seg[&apos;PID.20&apos;][&apos;PID.20.2&apos;]; }
		if (seg[&apos;PID.20&apos;][&apos;PID.20.3&apos;].toString() != &quot;&quot;) {pid[index].driversLicenseNumber.expirationDate = seg[&apos;PID.20&apos;][&apos;PID.20.3&apos;]; }
		if (Object.keys(pid[index].driversLicenseNumber).length == 0) {
			delete pid[index].driversLicenseNumber;
		}

		// PID.21, mothersId
		pid[index].mothersId = [];
		for each (field in seg[&apos;PID.21&apos;]) {
			var block = {};
			if (field[&apos;PID.21.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PID.21.1&apos;]; }
			if (field[&apos;PID.21.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PID.21.2&apos;]; }
			if (field[&apos;PID.21.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PID.21.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;PID.21.4&apos;][&apos;PID.21.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.21.4&apos;][&apos;PID.21.4.1&apos;]; }
			if (field[&apos;PID.21.4&apos;][&apos;PID.21.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PID.21.4&apos;][&apos;PID.21.4.2&apos;]; }
			if (field[&apos;PID.21.4&apos;][&apos;PID.21.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PID.21.4&apos;][&apos;PID.21.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;PID.21.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.21.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;PID.21.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PID.21.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;PID.21.6&apos;][&apos;PID.21.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.21.6&apos;][&apos;PID.21.6.1&apos;]; }
			if (field[&apos;PID.21.6&apos;][&apos;PID.21.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PID.21.6&apos;][&apos;PID.21.6.2&apos;]; }
			if (field[&apos;PID.21.6&apos;][&apos;PID.21.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PID.21.6&apos;][&apos;PID.21.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;PID.21.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.21.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				pid[index].mothersId.push(block);
			}
		}
		if (pid[index].mothersId.length == 0) {
			delete pid[index].mothersId;
		}

		// PID.22, ethnicGroup
		if (seg[&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString() != &quot;&quot;) {pid[index].ethnicGroup = seg[&apos;PID.22&apos;][&apos;PID.22.1&apos;]; }
		
		// PID.23, birthPlace
		if (seg[&apos;PID.23&apos;][&apos;PID.23.1&apos;].toString() != &quot;&quot;) {pid[index].birthPlace = seg[&apos;PID.23&apos;][&apos;PID.23.1&apos;]; }
		
		// PID.24, multipleBirthIndicator
		if (seg[&apos;PID.24&apos;][&apos;PID.24.1&apos;].toString() != &quot;&quot;) {pid[index].multipleBirthIndicator = seg[&apos;PID.24&apos;][&apos;PID.24.1&apos;]; }
		
		// PID.25, birthOrder
		if (seg[&apos;PID.25&apos;][&apos;PID.25.1&apos;].toString() != &quot;&quot;) {pid[index].birthOrder = seg[&apos;PID.25&apos;][&apos;PID.25.1&apos;]; }
		
		// PID.26, citizenship
		pid[index].citizenship = [];
		for each (field in seg[&apos;PID.26&apos;]) {
			if (field[&apos;PID.26.1&apos;].toString() != &quot;&quot;) {
				pid[index].citizenship.push(field[&apos;PID.26.1&apos;]);
			}
		}
		if (pid[index].citizenship.length == 0) {
			delete pid[index].citizenship;
		}
		
		// PID.27, veteranStatus
		pid[index].veteranStatus = {};
		if (seg[&apos;PID.27&apos;][&apos;PID.27.1&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.id = seg[&apos;PID.27&apos;][&apos;PID.27.1&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.2&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.text = seg[&apos;PID.27&apos;][&apos;PID.27.2&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.3&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.codingSystem = seg[&apos;PID.27&apos;][&apos;PID.27.3&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.4&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.altId = seg[&apos;PID.27&apos;][&apos;PID.27.4&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.5&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.altText = seg[&apos;PID.27&apos;][&apos;PID.27.5&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.6&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.altCodingSystem = seg[&apos;PID.27&apos;][&apos;PID.27.6&apos;]; }
		if (Object.keys(pid[index].veteranStatus).length == 0) {
			delete pid[index].veteranStatus;
		}

		// PID.28, nationality
		pid[index].nationality = {};
		if (seg[&apos;PID.28&apos;][&apos;PID.28.1&apos;].toString() != &quot;&quot;) { pid[index].nationality.id = seg[&apos;PID.28&apos;][&apos;PID.28.1&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.2&apos;].toString() != &quot;&quot;) { pid[index].nationality.text = seg[&apos;PID.28&apos;][&apos;PID.28.2&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.3&apos;].toString() != &quot;&quot;) { pid[index].nationality.codingSystem = seg[&apos;PID.28&apos;][&apos;PID.28.3&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.4&apos;].toString() != &quot;&quot;) { pid[index].nationality.altId = seg[&apos;PID.28&apos;][&apos;PID.28.4&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.5&apos;].toString() != &quot;&quot;) { pid[index].nationality.altText = seg[&apos;PID.28&apos;][&apos;PID.28.5&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.6&apos;].toString() != &quot;&quot;) { pid[index].nationality.altCodingSystem = seg[&apos;PID.28&apos;][&apos;PID.28.6&apos;]; }
		if (Object.keys(pid[index].nationality).length == 0) {
			delete pid[index].nationality;
		}

		// PID.29, deathDateTime
		if (seg[&apos;PID.29&apos;][&apos;PID.29.1&apos;].toString() != &quot;&quot;) {pid[index].deathDateTime = seg[&apos;PID.29&apos;][&apos;PID.29.1&apos;]; }
		
		// PID.30, deathIndicator
		if (seg[&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString() != &quot;&quot;) {pid[index].deathIndicator = seg[&apos;PID.30&apos;][&apos;PID.30.1&apos;]; }
		
		// PD1 (PID for RAS)
		var pd1Group = getSegmentsAfter(msg,seg,&apos;PD1&apos;,true);
		if (pd1Group.length &gt; 0) {
			pid[index].PD1 = [];
			var indexPD1 = 0;
			for each (pd1Seg in pd1Group) {
				pid[index].PD1[indexPD1] = {};

				// PD1.1, livingDependency
				pid[index].PD1[indexPD1].livingDependency = [];
				for each (field in pd1Seg[&apos;PD1.1&apos;]) {
					if (field[&apos;PD1.1.1&apos;].toString() != &quot;&quot;) {
						pid[index].PD1[indexPD1].livingDependency.push(field[&apos;PD1.1.1&apos;]);
					}
				}
				if (pid[index].PD1[indexPD1].livingDependency.length == 0) {
					delete pid[index].PD1[indexPD1].livingDependency;
				}
				
				// PD1.2, livingArrangement
				if (pd1Seg[&apos;PD1.2&apos;][&apos;PD1.2.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].livingArrangement = pd1Seg[&apos;PD1.2&apos;][&apos;PD1.2.1&apos;]; }

				// PD1.3, patientPrimaryFacility
				pid[index].PD1[indexPD1].patientPrimaryFacility = [];
				for each (field in pd1Seg[&apos;PD1.3&apos;]) {
					var block = {};
					if (field[&apos;PD1.3.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;PD1.3.1&apos;]; }
					if (field[&apos;PD1.3.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;PD1.3.2&apos;]; }
					if (field[&apos;PD1.3.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;PD1.3.3&apos;]; }
					if (field[&apos;PD1.3.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PD1.3.4&apos;]; }
					if (field[&apos;PD1.3.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PD1.3.5&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.1&apos;]; }
					if (field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.2&apos;]; }
					if (field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PD1.3.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PD1.3.6&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PD1.3.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PD1.3.7&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.1&apos;]; }
					if (field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.2&apos;]; }
					if (field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PD1.3.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PD1.3.8&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PD1[indexPD1].patientPrimaryFacility.push(block);
					}
				}
				if (pid[index].PD1[indexPD1].patientPrimaryFacility.length == 0) {
					delete pid[index].PD1[indexPD1].patientPrimaryFacility;
				}

				// PD1.4, primaryCareProvider
				pid[index].PD1[indexPD1].primaryCareProvider = [];
				for each (field in pd1Seg[&apos;PD1.4&apos;]) {
					var block = {};
					if (field[&apos;PD1.4.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PD1.4.1&apos;]; }
					if (field[&apos;PD1.4.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PD1.4.2&apos;]; }
					if (field[&apos;PD1.4.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PD1.4.3&apos;]; }
					if (field[&apos;PD1.4.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PD1.4.4&apos;]; }
					if (field[&apos;PD1.4.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PD1.4.5&apos;]; }
					if (field[&apos;PD1.4.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PD1.4.6&apos;]; }
					if (field[&apos;PD1.4.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PD1.4.7&apos;]; }
					if (field[&apos;PD1.4.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PD1.4.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.1&apos;]; }
					if (field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.2&apos;]; }
					if (field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PD1.4.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PD1.4.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PD1.4.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PD1.4.10&apos;]; }
					if (field[&apos;PD1.4.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PD1.4.11&apos;]; }
					if (field[&apos;PD1.4.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PD1.4.12&apos;]; }
					if (field[&apos;PD1.4.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PD1.4.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.1&apos;]; }
					if (field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.2&apos;]; }
					if (field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PD1.4.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PD1.4.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PD1[indexPD1].primaryCareProvider.push(block);
					}
				}
				if (pid[index].PD1[indexPD1].primaryCareProvider.length == 0) {
					delete pid[index].PD1[indexPD1].primaryCareProvider;
				}

				// PD1.5, studentIndicator
				if (pd1Seg[&apos;PD1.5&apos;][&apos;PD1.5.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].studentIndicator = pd1Seg[&apos;PD1.5&apos;][&apos;PD1.5.1&apos;]; }
				
				// PD1.6, handicap
				if (pd1Seg[&apos;PD1.6&apos;][&apos;PD1.6.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].handicap = pd1Seg[&apos;PD1.6&apos;][&apos;PD1.6.1&apos;]; }
				
				// PD1.7, livingWillCode
				if (pd1Seg[&apos;PD1.7&apos;][&apos;PD1.7.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].livingWillCode = pd1Seg[&apos;PD1.7&apos;][&apos;PD1.7.1&apos;]; }
				
				// PD1.8, organDonorCode
				if (pd1Seg[&apos;PD1.8&apos;][&apos;PD1.8.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].organDonorCode = pd1Seg[&apos;PD1.8&apos;][&apos;PD1.8.1&apos;]; }
				
				// PD1.9, separateBill
				if (pd1Seg[&apos;PD1.9&apos;][&apos;PD1.9.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].separateBill = pd1Seg[&apos;PD1.9&apos;][&apos;PD1.9.1&apos;]; }
				
				// PD1.10, duplicatePatient
				pid[index].PD1[indexPD1].duplicatePatient = [];
				for each (field in pd1Seg[&apos;PD1.10&apos;]) {
					var block = {};
					if (field[&apos;PD1.10.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PD1.10.1&apos;]; }
					if (field[&apos;PD1.10.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PD1.10.2&apos;]; }
					if (field[&apos;PD1.10.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PD1.10.3&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.1&apos;]; }
					if (field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.2&apos;]; }
					if (field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PD1.10.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PD1.10.4&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PD1.10.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PD1.10.5&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.1&apos;]; }
					if (field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.2&apos;]; }
					if (field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PD1.10.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PD1.10.6&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PD1[indexPD1].duplicatePatient.push(block);
					}
				}
				if (pid[index].PD1[indexPD1].duplicatePatient.length == 0) {
					delete pid[index].PD1[indexPD1].duplicatePatient;
				}

				// PD1.11, publicityIndicator
				pid[index].PD1[indexPD1].publicityIndicator = {};
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.id = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.1&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.2&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.text = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.2&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.3&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.codingSystem = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.3&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.4&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.altId = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.4&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.5&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.altText = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.5&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.6&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.altCodingSystem = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.6&apos;]; }
				if (Object.keys(pid[index].PD1[indexPD1].publicityIndicator).length == 0) {
					delete pid[index].PD1[indexPD1].publicityIndicator;
				}
				
				// PD1.12, protectionIndicator
				if (pd1Seg[&apos;PD1.12&apos;][&apos;PD1.12.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].protectionIndicator = pd1Seg[&apos;PD1.12&apos;][&apos;PD1.12.1&apos;]; }

				// clean up PD1 and increment index
				if (Object.keys(pid[index].PD1[indexPD1]).length == 0) {
					delete pid[index].PD1[indexPD1];
				} else {
					indexPD1++;
				}
			}
		}

		// NTE (PID for RAS)
		var nteGroup = getSegmentsAfter(msg,seg,&apos;NTE&apos;,true);
		if (nteGroup.length &gt; 0) {
			pid[index].NTE = [];
			var indexNTE = 0;
			for each (nteSeg in nteGroup) {
				pid[index].NTE[indexNTE] = {};

				// NTE.1, setId
				if (nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { pid[index].NTE[indexNTE].setId = nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }

				// NTE.2, sourceOfComment
				if (nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { pid[index].NTE[indexNTE].sourceOfComment = nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }

				// NTE.3, comment
				pid[index].NTE[indexNTE].comment = [];
				for each (field in nteSeg[&apos;NTE.3&apos;]) {
					var block = {};
					if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
						pid[index].NTE[indexNTE].comment.push(field[&apos;NTE.3.1&apos;]);
					}
				}
				if (pid[index].NTE[indexNTE].comment.length == 0) {
					delete pid[index].NTE[indexNTE].comment;
				}

				// clean up NTE and increment index
				if (Object.keys(pid[index].NTE[indexNTE]).length == 0) {
					delete pid[index].NTE[indexNTE];
				} else {
					indexNTE++;
				}
			}
		}

		// AL1 (PID for RAS)
		var al1Group = getSegmentsAfter(msg,seg,&apos;AL1&apos;,false);
		if (al1Group.length &gt; 0) {
			pid[index].AL1 = [];
			var indexAL1 = 0;
			for each (al1Seg in msg.AL1) {
				pid[index].AL1[indexAL1] = {};
				
				// AL1.1, setId
				if (al1Seg[&apos;AL1.1&apos;][&apos;AL1.1.1&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].setId = al1Seg[&apos;AL1.1&apos;][&apos;AL1.1.1&apos;]; }
		
				// AL1.2, allergyType
				if (al1Seg[&apos;AL1.2&apos;][&apos;AL1.2.1&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergyType = al1Seg[&apos;AL1.2&apos;][&apos;AL1.2.1&apos;]; }
				
				// AL1.3, allergyCodeMnemonicDescription
				pid[index].AL1[indexAL1].allergyCodeMnemonicDescription = {};
				if (al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.1&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergyCodeMnemonicDescription.id = al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.1&apos;]; }
				if (al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.2&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergyCodeMnemonicDescription.text = al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.2&apos;]; }
				if (al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.3&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergyCodeMnemonicDescription.codingSystem = al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.3&apos;]; }
				if (al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.4&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergyCodeMnemonicDescription.altId = al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.4&apos;]; }
				if (al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.5&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergyCodeMnemonicDescription.altText = al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.5&apos;]; }
				if (al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.6&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergyCodeMnemonicDescription.altCodingSystem = al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.6&apos;]; }
				if (Object.keys(pid[index].AL1[indexAL1].allergyCodeMnemonicDescription).length == 0) {
					delete pid[index].AL1[indexAL1].allergyCodeMnemonicDescription;
				}
		
				// AL1.4, allergySeverity
				if (al1Seg[&apos;AL1.4&apos;][&apos;AL1.4.1&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergySeverity = al1Seg[&apos;AL1.4&apos;][&apos;AL1.4.1&apos;]; }
				
				// AL1.5, allergyReaction
				if (al1Seg[&apos;AL1.5&apos;][&apos;AL1.5.1&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergyReaction = al1Seg[&apos;AL1.5&apos;][&apos;AL1.5.1&apos;]; }
				
				// AL1.6, identificationDate
				if (al1Seg[&apos;AL1.6&apos;][&apos;AL1.6.1&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].identificationDate = al1Seg[&apos;AL1.6&apos;][&apos;AL1.6.1&apos;]; }
		
				// clean up AL1 and increment index
				if (pid[index].AL1.length == 0) {
					delete pid[index].AL1;
				} else {
					indexAL1++;
				}
			}
		}

		// clean up PID and increment index
		if (Object.keys(pid[index]).length == 0) {
			delete pid[index];
		} else {
			index++;
		}
	}
}

// Optional: save a copy of the completed PID segment for reference later
//channelMap.put(&quot;pid&quot;, pid); // uncomment to save

// If it has content, add the PID segment to the hl7JSON object
if (pid &amp;&amp; Object.keys(pid).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.PID = pid;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// PID for RAS
var pid;
if (msg[&apos;PID&apos;].length() &gt; 0) {
	pid = [];
	var index = 0;
	for each (seg in msg.PID) {
		pid[index] = {};

		// PID.1, setId
		if (seg[&apos;PID.1&apos;][&apos;PID.1.1&apos;].toString() != &quot;&quot;) { pid[index].setId = seg[&apos;PID.1&apos;][&apos;PID.1.1&apos;]; }

		// PID.2, externalId
		pid[index].externalId = {};
		if (seg[&apos;PID.2&apos;][&apos;PID.2.1&apos;].toString() != &quot;&quot;) { pid[index].externalId.id = seg[&apos;PID.2&apos;][&apos;PID.2.1&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.2&apos;].toString() != &quot;&quot;) { pid[index].externalId.identifierCheckDigit = seg[&apos;PID.2&apos;][&apos;PID.2.2&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.3&apos;].toString() != &quot;&quot;) { pid[index].externalId.codeIdentifyingCheckDigitScheme = seg[&apos;PID.2&apos;][&apos;PID.2.3&apos;]; }
		pid[index].externalId.assigningAuthority = {};
		if (seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.1&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningAuthority.namespaceId = seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.1&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.2&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningAuthority.universalId = seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.2&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.3&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningAuthority.universalIdType = seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;][&apos;PID.2.4.3&apos;]; }
		if (Object.keys(pid[index].externalId.assigningAuthority).length == 0) {
			if (seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningAuthority.namespaceId = seg[&apos;PID.2&apos;][&apos;PID.2.4&apos;]; }
			else delete pid[index].externalId.assigningAuthority;
		}
		if (seg[&apos;PID.2&apos;][&apos;PID.2.5&apos;].toString() != &quot;&quot;) { pid[index].externalId.idTypeCode = seg[&apos;PID.2&apos;][&apos;PID.2.5&apos;]; }
		pid[index].externalId.assigningFacility = {};
		if (seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.1&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningFacility.namespaceId = seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.1&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.2&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningFacility.universalId = seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.2&apos;]; }
		if (seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.3&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningFacility.universalIdType = seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;][&apos;PID.2.6.3&apos;]; }
		if (Object.keys(pid[index].externalId.assigningFacility).length == 0) {
			if (seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;].toString() != &quot;&quot;) { pid[index].externalId.assigningFacility.namespaceId = seg[&apos;PID.2&apos;][&apos;PID.2.6&apos;]; }
			else delete pid[index].externalId.assigningFacility;
		}
		if (Object.keys(pid[index].externalId).length == 0) {
			delete pid[index].externalId;
		}

		// PID.3, internalId
		pid[index].internalId = [];
		for each (field in seg[&apos;PID.3&apos;]) {
			var block = {};
			if (field[&apos;PID.3.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PID.3.1&apos;]; }
			if (field[&apos;PID.3.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PID.3.2&apos;]; }
			if (field[&apos;PID.3.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PID.3.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;PID.3.4&apos;][&apos;PID.3.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.3.4&apos;][&apos;PID.3.4.1&apos;]; }
			if (field[&apos;PID.3.4&apos;][&apos;PID.3.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PID.3.4&apos;][&apos;PID.3.4.2&apos;]; }
			if (field[&apos;PID.3.4&apos;][&apos;PID.3.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PID.3.4&apos;][&apos;PID.3.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;PID.3.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.3.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;PID.3.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PID.3.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;PID.3.6&apos;][&apos;PID.3.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.3.6&apos;][&apos;PID.3.6.1&apos;]; }
			if (field[&apos;PID.3.6&apos;][&apos;PID.3.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PID.3.6&apos;][&apos;PID.3.6.2&apos;]; }
			if (field[&apos;PID.3.6&apos;][&apos;PID.3.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PID.3.6&apos;][&apos;PID.3.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;PID.3.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.3.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				pid[index].internalId.push(block);
			}
		}
		if (pid[index].internalId.length == 0) {
			delete pid[index].internalId;
		}

		// PID.4, alternateId
		pid[index].alternateId = [];
		for each (field in seg[&apos;PID.4&apos;]) {
			var block = {};
			if (field[&apos;PID.4.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PID.4.1&apos;]; }
			if (field[&apos;PID.4.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PID.4.2&apos;]; }
			if (field[&apos;PID.4.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PID.4.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;PID.4.4&apos;][&apos;PID.4.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.4.4&apos;][&apos;PID.4.4.1&apos;]; }
			if (field[&apos;PID.4.4&apos;][&apos;PID.4.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PID.4.4&apos;][&apos;PID.4.4.2&apos;]; }
			if (field[&apos;PID.4.4&apos;][&apos;PID.4.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PID.4.4&apos;][&apos;PID.4.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;PID.4.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.4.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;PID.4.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PID.4.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;PID.4.6&apos;][&apos;PID.4.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.4.6&apos;][&apos;PID.4.6.1&apos;]; }
			if (field[&apos;PID.4.6&apos;][&apos;PID.4.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PID.4.6&apos;][&apos;PID.4.6.2&apos;]; }
			if (field[&apos;PID.4.6&apos;][&apos;PID.4.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PID.4.6&apos;][&apos;PID.4.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;PID.4.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.4.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				pid[index].alternateId.push(block);
			}
		}
		if (pid[index].alternateId.length == 0) {
			delete pid[index].alternateId;
		}

		// PID.5, patientName
		pid[index].patientName = [];
		for each (field in seg[&apos;PID.5&apos;]) {
			var block = {};
			if (field[&apos;PID.5.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PID.5.1&apos;]; }
			if (field[&apos;PID.5.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PID.5.2&apos;]; }
			if (field[&apos;PID.5.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PID.5.3&apos;]; }
			if (field[&apos;PID.5.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PID.5.4&apos;]; }
			if (field[&apos;PID.5.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PID.5.5&apos;]; }
			if (field[&apos;PID.5.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PID.5.6&apos;]; }
			if (field[&apos;PID.5.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PID.5.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].patientName.push(block);
			}	
		}
		if (pid[index].patientName.length == 0) {
			delete pid[index].patientName;
		}

		// PID.6, mothersMaidenName
		pid[index].mothersMaidenName = {};
		if (seg[&apos;PID.6&apos;][&apos;PID.6.1&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.lastName = seg[&apos;PID.6&apos;][&apos;PID.6.1&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.2&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.firstName = seg[&apos;PID.6&apos;][&apos;PID.6.2&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.3&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.middleInitOrName = seg[&apos;PID.6&apos;][&apos;PID.6.3&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.4&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.suffix = seg[&apos;PID.6&apos;][&apos;PID.6.4&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.5&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.prefix = seg[&apos;PID.6&apos;][&apos;PID.6.5&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.6&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.degree = seg[&apos;PID.6&apos;][&apos;PID.6.6&apos;]; }
		if (seg[&apos;PID.6&apos;][&apos;PID.6.7&apos;].toString() != &quot;&quot;) { pid[index].mothersMaidenName.nameTypeCode = seg[&apos;PID.6&apos;][&apos;PID.6.7&apos;]; }
		if (Object.keys(pid[index].mothersMaidenName).length == 0) {
			delete pid[index].mothersMaidenName;
		}

		// PID.7, dateTimeBirth
		if (seg[&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() != &quot;&quot;) {pid[index].dateTimeBirth = seg[&apos;PID.7&apos;][&apos;PID.7.1&apos;]; }
		
		// PID.8, sex
		if (seg[&apos;PID.8&apos;][&apos;PID.8.1&apos;].toString() != &quot;&quot;) {pid[index].sex = seg[&apos;PID.8&apos;][&apos;PID.8.1&apos;]; }
		
		// PID.9, alias
		pid[index].alias = [];
		for each (field in seg[&apos;PID.9&apos;]) {
			var block = {};
			if (field[&apos;PID.9.1&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PID.9.1&apos;]; }
			if (field[&apos;PID.9.2&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PID.9.2&apos;]; }
			if (field[&apos;PID.9.3&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PID.9.3&apos;]; }
			if (field[&apos;PID.9.4&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PID.9.4&apos;]; }
			if (field[&apos;PID.9.5&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PID.9.5&apos;]; }
			if (field[&apos;PID.9.6&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PID.9.6&apos;]; }
			if (field[&apos;PID.9.7&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PID.9.7&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].alias.push(block);
			}	
		}
		if (pid[index].alias.length == 0) {
			delete pid[index].alias;
		}

		// PID.10, race
		if (seg[&apos;PID.10&apos;][&apos;PID.10.1&apos;].toString() != &quot;&quot;) {pid[index].race = seg[&apos;PID.10&apos;][&apos;PID.10.1&apos;]; }
		
		// PID.11, address
		pid[index].address = [];
		for each (field in seg[&apos;PID.11&apos;]) {
			var block = {};
			if (field[&apos;PID.11.1&apos;].toString() != &quot;&quot;) { block.streetAddress = field[&apos;PID.11.1&apos;]; }
			if (field[&apos;PID.11.2&apos;].toString() != &quot;&quot;) { block.otherDesignation = field[&apos;PID.11.2&apos;]; }
			if (field[&apos;PID.11.3&apos;].toString() != &quot;&quot;) { block.city = field[&apos;PID.11.3&apos;]; }
			if (field[&apos;PID.11.4&apos;].toString() != &quot;&quot;) { block.stateOrProvince = field[&apos;PID.11.4&apos;]; }
			if (field[&apos;PID.11.5&apos;].toString() != &quot;&quot;) { block.zip = field[&apos;PID.11.5&apos;]; }
			if (field[&apos;PID.11.6&apos;].toString() != &quot;&quot;) { block.country = field[&apos;PID.11.6&apos;]; }
			if (field[&apos;PID.11.7&apos;].toString() != &quot;&quot;) { block.addressType = field[&apos;PID.11.7&apos;]; }
			if (field[&apos;PID.11.8&apos;].toString() != &quot;&quot;) { block.otherGeographicDesignation = field[&apos;PID.11.8&apos;]; }
			if (field[&apos;PID.11.9&apos;].toString() != &quot;&quot;) { block.countyOrParishCode = field[&apos;PID.11.9&apos;]; }
			if (field[&apos;PID.11.10&apos;].toString() != &quot;&quot;) { block.censusTract = field[&apos;PID.11.10&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].address.push(block);
			}
		}
		if (pid[index].address.length == 0) {
			delete pid[index].address;
		}

		// PID.12, countyCode
		if (seg[&apos;PID.12&apos;][&apos;PID.12.1&apos;].toString() != &quot;&quot;) {pid[index].countyCode = seg[&apos;PID.12&apos;][&apos;PID.12.1&apos;]; }
		
		// PID.13, homePhone
		pid[index].homePhone = [];
		for each (field in seg[&apos;PID.13&apos;]) {
			var block = {};
			if (field[&apos;PID.13.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;PID.13.1&apos;]; }
			if (field[&apos;PID.13.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;PID.13.2&apos;]; }
			if (field[&apos;PID.13.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;PID.13.3&apos;]; }
			if (field[&apos;PID.13.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;PID.13.4&apos;]; }
			if (field[&apos;PID.13.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;PID.13.5&apos;]; }
			if (field[&apos;PID.13.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;PID.13.6&apos;]; }
			if (field[&apos;PID.13.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;PID.13.7&apos;]; }
			if (field[&apos;PID.13.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;PID.13.8&apos;]; }
			if (field[&apos;PID.13.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;PID.13.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].homePhone.push(block);
			}
		}
		if (pid[index].homePhone.length == 0) {
			delete pid[index].homePhone;
		}

		// PID.14, businessPhone
		pid[index].businessPhone = [];
		for each (field in seg[&apos;PID.14&apos;]) {
			var block = {};
			if (field[&apos;PID.14.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;PID.14.1&apos;]; }
			if (field[&apos;PID.14.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;PID.14.2&apos;]; }
			if (field[&apos;PID.14.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;PID.14.3&apos;]; }
			if (field[&apos;PID.14.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;PID.14.4&apos;]; }
			if (field[&apos;PID.14.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;PID.14.5&apos;]; }
			if (field[&apos;PID.14.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;PID.14.6&apos;]; }
			if (field[&apos;PID.14.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;PID.14.7&apos;]; }
			if (field[&apos;PID.14.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;PID.14.8&apos;]; }
			if (field[&apos;PID.14.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;PID.14.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				pid[index].businessPhone.push(block);
			}
		}
		if (pid[index].businessPhone.length == 0) {
			delete pid[index].businessPhone;
		}

		// PID.15, primaryLanguage
		pid[index].primaryLanguage = {};
		if (seg[&apos;PID.15&apos;][&apos;PID.15.1&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.id = seg[&apos;PID.15&apos;][&apos;PID.15.1&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.2&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.text = seg[&apos;PID.15&apos;][&apos;PID.15.2&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.3&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.codingSystem = seg[&apos;PID.15&apos;][&apos;PID.15.3&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.4&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.altId = seg[&apos;PID.15&apos;][&apos;PID.15.4&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.5&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.altText = seg[&apos;PID.15&apos;][&apos;PID.15.5&apos;]; }
		if (seg[&apos;PID.15&apos;][&apos;PID.15.6&apos;].toString() != &quot;&quot;) { pid[index].primaryLanguage.altCodingSystem = seg[&apos;PID.15&apos;][&apos;PID.15.6&apos;]; }
		if (Object.keys(pid[index].primaryLanguage).length == 0) {
			delete pid[index].primaryLanguage;
		}

		// PID.16, maritalStatus
		if (seg[&apos;PID.16&apos;][&apos;PID.16.1&apos;].toString() != &quot;&quot;) {pid[index].maritalStatus = seg[&apos;PID.16&apos;][&apos;PID.16.1&apos;]; }
		
		// PID.17, religion
		if (seg[&apos;PID.17&apos;][&apos;PID.17.1&apos;].toString() != &quot;&quot;) {pid[index].religion = seg[&apos;PID.17&apos;][&apos;PID.17.1&apos;]; }

		// PID.18, patientAccountNumber
		pid[index].patientAccountNumber = {};
		if (seg[&apos;PID.18&apos;][&apos;PID.18.1&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.id = seg[&apos;PID.18&apos;][&apos;PID.18.1&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.2&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.identifierCheckDigit = seg[&apos;PID.18&apos;][&apos;PID.18.2&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.3&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.codeIdentifyingCheckDigitScheme = seg[&apos;PID.18&apos;][&apos;PID.18.3&apos;]; }
		pid[index].patientAccountNumber.assigningAuthority = {};
		if (seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.1&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningAuthority.namespaceId = seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.1&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.2&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningAuthority.universalId = seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.2&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.3&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningAuthority.universalIdType = seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;][&apos;PID.18.4.3&apos;]; }
		if (Object.keys(pid[index].patientAccountNumber.assigningAuthority).length == 0) {
			if (seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningAuthority.namespaceId = seg[&apos;PID.18&apos;][&apos;PID.18.4&apos;]; }
			else delete pid[index].patientAccountNumber.assigningAuthority;
		}
		if (seg[&apos;PID.18&apos;][&apos;PID.18.5&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.idTypeCode = seg[&apos;PID.18&apos;][&apos;PID.18.5&apos;]; }
		pid[index].patientAccountNumber.assigningFacility = {};
		if (seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.1&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningFacility.namespaceId = seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.1&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.2&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningFacility.universalId = seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.2&apos;]; }
		if (seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.3&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningFacility.universalIdType = seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;][&apos;PID.18.6.3&apos;]; }
		if (Object.keys(pid[index].patientAccountNumber.assigningFacility).length == 0) {
			if (seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;].toString() != &quot;&quot;) { pid[index].patientAccountNumber.assigningFacility.namespaceId = seg[&apos;PID.18&apos;][&apos;PID.18.6&apos;]; }
			else delete pid[index].patientAccountNumber.assigningFacility;
		}
		if (Object.keys(pid[index].patientAccountNumber).length == 0) {
			delete pid[index].patientAccountNumber;
		}

		// PID.19, ssn
		if (seg[&apos;PID.19&apos;][&apos;PID.19.1&apos;].toString() != &quot;&quot;) {pid[index].ssn = seg[&apos;PID.19&apos;][&apos;PID.19.1&apos;]; }
		
		// PID.20, driversLicenseNumber
		pid[index].driversLicenseNumber = {};
		if (seg[&apos;PID.20&apos;][&apos;PID.20.1&apos;].toString() != &quot;&quot;) {pid[index].driversLicenseNumber.licenseNumber = seg[&apos;PID.20&apos;][&apos;PID.20.1&apos;]; }
		if (seg[&apos;PID.20&apos;][&apos;PID.20.2&apos;].toString() != &quot;&quot;) {pid[index].driversLicenseNumber.issuingStateProvinceCountry = seg[&apos;PID.20&apos;][&apos;PID.20.2&apos;]; }
		if (seg[&apos;PID.20&apos;][&apos;PID.20.3&apos;].toString() != &quot;&quot;) {pid[index].driversLicenseNumber.expirationDate = seg[&apos;PID.20&apos;][&apos;PID.20.3&apos;]; }
		if (Object.keys(pid[index].driversLicenseNumber).length == 0) {
			delete pid[index].driversLicenseNumber;
		}

		// PID.21, mothersId
		pid[index].mothersId = [];
		for each (field in seg[&apos;PID.21&apos;]) {
			var block = {};
			if (field[&apos;PID.21.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PID.21.1&apos;]; }
			if (field[&apos;PID.21.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PID.21.2&apos;]; }
			if (field[&apos;PID.21.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PID.21.3&apos;]; }
			block.assigningAuthority = {};
			if (field[&apos;PID.21.4&apos;][&apos;PID.21.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.21.4&apos;][&apos;PID.21.4.1&apos;]; }
			if (field[&apos;PID.21.4&apos;][&apos;PID.21.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PID.21.4&apos;][&apos;PID.21.4.2&apos;]; }
			if (field[&apos;PID.21.4&apos;][&apos;PID.21.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PID.21.4&apos;][&apos;PID.21.4.3&apos;]; }
			if (Object.keys(block.assigningAuthority).length == 0) {
				if (field[&apos;PID.21.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.21.4&apos;]; }
				else delete block.assigningAuthority;
			}
			if (field[&apos;PID.21.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PID.21.5&apos;]; }
			block.assigningFacility = {};
			if (field[&apos;PID.21.6&apos;][&apos;PID.21.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PID.21.6&apos;][&apos;PID.21.6.1&apos;]; }
			if (field[&apos;PID.21.6&apos;][&apos;PID.21.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PID.21.6&apos;][&apos;PID.21.6.2&apos;]; }
			if (field[&apos;PID.21.6&apos;][&apos;PID.21.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PID.21.6&apos;][&apos;PID.21.6.3&apos;]; }
			if (Object.keys(block.assigningFacility).length == 0) {
				if (field[&apos;PID.21.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PID.21.6&apos;]; }
				else delete block.assigningFacility;
			}
			if (Object.keys(block).length &gt; 0) {
				pid[index].mothersId.push(block);
			}
		}
		if (pid[index].mothersId.length == 0) {
			delete pid[index].mothersId;
		}

		// PID.22, ethnicGroup
		if (seg[&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString() != &quot;&quot;) {pid[index].ethnicGroup = seg[&apos;PID.22&apos;][&apos;PID.22.1&apos;]; }
		
		// PID.23, birthPlace
		if (seg[&apos;PID.23&apos;][&apos;PID.23.1&apos;].toString() != &quot;&quot;) {pid[index].birthPlace = seg[&apos;PID.23&apos;][&apos;PID.23.1&apos;]; }
		
		// PID.24, multipleBirthIndicator
		if (seg[&apos;PID.24&apos;][&apos;PID.24.1&apos;].toString() != &quot;&quot;) {pid[index].multipleBirthIndicator = seg[&apos;PID.24&apos;][&apos;PID.24.1&apos;]; }
		
		// PID.25, birthOrder
		if (seg[&apos;PID.25&apos;][&apos;PID.25.1&apos;].toString() != &quot;&quot;) {pid[index].birthOrder = seg[&apos;PID.25&apos;][&apos;PID.25.1&apos;]; }
		
		// PID.26, citizenship
		pid[index].citizenship = [];
		for each (field in seg[&apos;PID.26&apos;]) {
			if (field[&apos;PID.26.1&apos;].toString() != &quot;&quot;) {
				pid[index].citizenship.push(field[&apos;PID.26.1&apos;]);
			}
		}
		if (pid[index].citizenship.length == 0) {
			delete pid[index].citizenship;
		}
		
		// PID.27, veteranStatus
		pid[index].veteranStatus = {};
		if (seg[&apos;PID.27&apos;][&apos;PID.27.1&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.id = seg[&apos;PID.27&apos;][&apos;PID.27.1&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.2&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.text = seg[&apos;PID.27&apos;][&apos;PID.27.2&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.3&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.codingSystem = seg[&apos;PID.27&apos;][&apos;PID.27.3&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.4&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.altId = seg[&apos;PID.27&apos;][&apos;PID.27.4&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.5&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.altText = seg[&apos;PID.27&apos;][&apos;PID.27.5&apos;]; }
		if (seg[&apos;PID.27&apos;][&apos;PID.27.6&apos;].toString() != &quot;&quot;) { pid[index].veteranStatus.altCodingSystem = seg[&apos;PID.27&apos;][&apos;PID.27.6&apos;]; }
		if (Object.keys(pid[index].veteranStatus).length == 0) {
			delete pid[index].veteranStatus;
		}

		// PID.28, nationality
		pid[index].nationality = {};
		if (seg[&apos;PID.28&apos;][&apos;PID.28.1&apos;].toString() != &quot;&quot;) { pid[index].nationality.id = seg[&apos;PID.28&apos;][&apos;PID.28.1&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.2&apos;].toString() != &quot;&quot;) { pid[index].nationality.text = seg[&apos;PID.28&apos;][&apos;PID.28.2&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.3&apos;].toString() != &quot;&quot;) { pid[index].nationality.codingSystem = seg[&apos;PID.28&apos;][&apos;PID.28.3&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.4&apos;].toString() != &quot;&quot;) { pid[index].nationality.altId = seg[&apos;PID.28&apos;][&apos;PID.28.4&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.5&apos;].toString() != &quot;&quot;) { pid[index].nationality.altText = seg[&apos;PID.28&apos;][&apos;PID.28.5&apos;]; }
		if (seg[&apos;PID.28&apos;][&apos;PID.28.6&apos;].toString() != &quot;&quot;) { pid[index].nationality.altCodingSystem = seg[&apos;PID.28&apos;][&apos;PID.28.6&apos;]; }
		if (Object.keys(pid[index].nationality).length == 0) {
			delete pid[index].nationality;
		}

		// PID.29, deathDateTime
		if (seg[&apos;PID.29&apos;][&apos;PID.29.1&apos;].toString() != &quot;&quot;) {pid[index].deathDateTime = seg[&apos;PID.29&apos;][&apos;PID.29.1&apos;]; }
		
		// PID.30, deathIndicator
		if (seg[&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString() != &quot;&quot;) {pid[index].deathIndicator = seg[&apos;PID.30&apos;][&apos;PID.30.1&apos;]; }
		
		// PD1 (PID for RAS)
		var pd1Group = getSegmentsAfter(msg,seg,&apos;PD1&apos;,true);
		if (pd1Group.length &gt; 0) {
			pid[index].PD1 = [];
			var indexPD1 = 0;
			for each (pd1Seg in pd1Group) {
				pid[index].PD1[indexPD1] = {};

				// PD1.1, livingDependency
				pid[index].PD1[indexPD1].livingDependency = [];
				for each (field in pd1Seg[&apos;PD1.1&apos;]) {
					if (field[&apos;PD1.1.1&apos;].toString() != &quot;&quot;) {
						pid[index].PD1[indexPD1].livingDependency.push(field[&apos;PD1.1.1&apos;]);
					}
				}
				if (pid[index].PD1[indexPD1].livingDependency.length == 0) {
					delete pid[index].PD1[indexPD1].livingDependency;
				}
				
				// PD1.2, livingArrangement
				if (pd1Seg[&apos;PD1.2&apos;][&apos;PD1.2.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].livingArrangement = pd1Seg[&apos;PD1.2&apos;][&apos;PD1.2.1&apos;]; }

				// PD1.3, patientPrimaryFacility
				pid[index].PD1[indexPD1].patientPrimaryFacility = [];
				for each (field in pd1Seg[&apos;PD1.3&apos;]) {
					var block = {};
					if (field[&apos;PD1.3.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;PD1.3.1&apos;]; }
					if (field[&apos;PD1.3.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;PD1.3.2&apos;]; }
					if (field[&apos;PD1.3.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;PD1.3.3&apos;]; }
					if (field[&apos;PD1.3.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PD1.3.4&apos;]; }
					if (field[&apos;PD1.3.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PD1.3.5&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.1&apos;]; }
					if (field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.2&apos;]; }
					if (field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PD1.3.6&apos;][&apos;PD1.3.6.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PD1.3.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PD1.3.6&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PD1.3.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PD1.3.7&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.1&apos;]; }
					if (field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.2&apos;]; }
					if (field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PD1.3.8&apos;][&apos;PD1.3.8.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PD1.3.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PD1.3.8&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PD1[indexPD1].patientPrimaryFacility.push(block);
					}
				}
				if (pid[index].PD1[indexPD1].patientPrimaryFacility.length == 0) {
					delete pid[index].PD1[indexPD1].patientPrimaryFacility;
				}

				// PD1.4, primaryCareProvider
				pid[index].PD1[indexPD1].primaryCareProvider = [];
				for each (field in pd1Seg[&apos;PD1.4&apos;]) {
					var block = {};
					if (field[&apos;PD1.4.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PD1.4.1&apos;]; }
					if (field[&apos;PD1.4.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PD1.4.2&apos;]; }
					if (field[&apos;PD1.4.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PD1.4.3&apos;]; }
					if (field[&apos;PD1.4.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PD1.4.4&apos;]; }
					if (field[&apos;PD1.4.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PD1.4.5&apos;]; }
					if (field[&apos;PD1.4.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PD1.4.6&apos;]; }
					if (field[&apos;PD1.4.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PD1.4.7&apos;]; }
					if (field[&apos;PD1.4.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PD1.4.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.1&apos;]; }
					if (field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.2&apos;]; }
					if (field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PD1.4.9&apos;][&apos;PD1.4.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PD1.4.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PD1.4.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PD1.4.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PD1.4.10&apos;]; }
					if (field[&apos;PD1.4.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PD1.4.11&apos;]; }
					if (field[&apos;PD1.4.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PD1.4.12&apos;]; }
					if (field[&apos;PD1.4.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PD1.4.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.1&apos;]; }
					if (field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.2&apos;]; }
					if (field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PD1.4.14&apos;][&apos;PD1.4.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PD1.4.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PD1.4.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PD1[indexPD1].primaryCareProvider.push(block);
					}
				}
				if (pid[index].PD1[indexPD1].primaryCareProvider.length == 0) {
					delete pid[index].PD1[indexPD1].primaryCareProvider;
				}

				// PD1.5, studentIndicator
				if (pd1Seg[&apos;PD1.5&apos;][&apos;PD1.5.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].studentIndicator = pd1Seg[&apos;PD1.5&apos;][&apos;PD1.5.1&apos;]; }
				
				// PD1.6, handicap
				if (pd1Seg[&apos;PD1.6&apos;][&apos;PD1.6.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].handicap = pd1Seg[&apos;PD1.6&apos;][&apos;PD1.6.1&apos;]; }
				
				// PD1.7, livingWillCode
				if (pd1Seg[&apos;PD1.7&apos;][&apos;PD1.7.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].livingWillCode = pd1Seg[&apos;PD1.7&apos;][&apos;PD1.7.1&apos;]; }
				
				// PD1.8, organDonorCode
				if (pd1Seg[&apos;PD1.8&apos;][&apos;PD1.8.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].organDonorCode = pd1Seg[&apos;PD1.8&apos;][&apos;PD1.8.1&apos;]; }
				
				// PD1.9, separateBill
				if (pd1Seg[&apos;PD1.9&apos;][&apos;PD1.9.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].separateBill = pd1Seg[&apos;PD1.9&apos;][&apos;PD1.9.1&apos;]; }
				
				// PD1.10, duplicatePatient
				pid[index].PD1[indexPD1].duplicatePatient = [];
				for each (field in pd1Seg[&apos;PD1.10&apos;]) {
					var block = {};
					if (field[&apos;PD1.10.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PD1.10.1&apos;]; }
					if (field[&apos;PD1.10.2&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PD1.10.2&apos;]; }
					if (field[&apos;PD1.10.3&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PD1.10.3&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.1&apos;]; }
					if (field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.2&apos;]; }
					if (field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PD1.10.4&apos;][&apos;PD1.10.4.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PD1.10.4&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PD1.10.4&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PD1.10.5&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PD1.10.5&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.1&apos;]; }
					if (field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.2&apos;]; }
					if (field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PD1.10.6&apos;][&apos;PD1.10.6.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PD1.10.6&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PD1.10.6&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PD1[indexPD1].duplicatePatient.push(block);
					}
				}
				if (pid[index].PD1[indexPD1].duplicatePatient.length == 0) {
					delete pid[index].PD1[indexPD1].duplicatePatient;
				}

				// PD1.11, publicityIndicator
				pid[index].PD1[indexPD1].publicityIndicator = {};
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.id = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.1&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.2&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.text = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.2&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.3&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.codingSystem = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.3&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.4&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.altId = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.4&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.5&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.altText = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.5&apos;]; }
				if (pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.6&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].publicityIndicator.altCodingSystem = pd1Seg[&apos;PD1.11&apos;][&apos;PD1.11.6&apos;]; }
				if (Object.keys(pid[index].PD1[indexPD1].publicityIndicator).length == 0) {
					delete pid[index].PD1[indexPD1].publicityIndicator;
				}
				
				// PD1.12, protectionIndicator
				if (pd1Seg[&apos;PD1.12&apos;][&apos;PD1.12.1&apos;].toString() != &quot;&quot;) { pid[index].PD1[indexPD1].protectionIndicator = pd1Seg[&apos;PD1.12&apos;][&apos;PD1.12.1&apos;]; }

				// clean up PD1 and increment index
				if (Object.keys(pid[index].PD1[indexPD1]).length == 0) {
					delete pid[index].PD1[indexPD1];
				} else {
					indexPD1++;
				}
			}
		}

		// NTE (PID for RAS)
		var nteGroup = getSegmentsAfter(msg,seg,&apos;NTE&apos;,true);
		if (nteGroup.length &gt; 0) {
			pid[index].NTE = [];
			var indexNTE = 0;
			for each (nteSeg in nteGroup) {
				pid[index].NTE[indexNTE] = {};

				// NTE.1, setId
				if (nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { pid[index].NTE[indexNTE].setId = nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }

				// NTE.2, sourceOfComment
				if (nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { pid[index].NTE[indexNTE].sourceOfComment = nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }

				// NTE.3, comment
				pid[index].NTE[indexNTE].comment = [];
				for each (field in nteSeg[&apos;NTE.3&apos;]) {
					var block = {};
					if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
						pid[index].NTE[indexNTE].comment.push(field[&apos;NTE.3.1&apos;]);
					}
				}
				if (pid[index].NTE[indexNTE].comment.length == 0) {
					delete pid[index].NTE[indexNTE].comment;
				}

				// clean up NTE and increment index
				if (Object.keys(pid[index].NTE[indexNTE]).length == 0) {
					delete pid[index].NTE[indexNTE];
				} else {
					indexNTE++;
				}
			}
		}

		// AL1 (PID for RAS)
		var al1Group = getSegmentsAfter(msg,seg,&apos;AL1&apos;,false);
		if (al1Group.length &gt; 0) {
			pid[index].AL1 = [];
			var indexAL1 = 0;
			for each (al1Seg in msg.AL1) {
				pid[index].AL1[indexAL1] = {};
				
				// AL1.1, setId
				if (al1Seg[&apos;AL1.1&apos;][&apos;AL1.1.1&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].setId = al1Seg[&apos;AL1.1&apos;][&apos;AL1.1.1&apos;]; }
		
				// AL1.2, allergyType
				if (al1Seg[&apos;AL1.2&apos;][&apos;AL1.2.1&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergyType = al1Seg[&apos;AL1.2&apos;][&apos;AL1.2.1&apos;]; }
				
				// AL1.3, allergyCodeMnemonicDescription
				pid[index].AL1[indexAL1].allergyCodeMnemonicDescription = {};
				if (al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.1&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergyCodeMnemonicDescription.id = al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.1&apos;]; }
				if (al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.2&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergyCodeMnemonicDescription.text = al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.2&apos;]; }
				if (al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.3&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergyCodeMnemonicDescription.codingSystem = al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.3&apos;]; }
				if (al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.4&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergyCodeMnemonicDescription.altId = al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.4&apos;]; }
				if (al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.5&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergyCodeMnemonicDescription.altText = al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.5&apos;]; }
				if (al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.6&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergyCodeMnemonicDescription.altCodingSystem = al1Seg[&apos;AL1.3&apos;][&apos;AL1.3.6&apos;]; }
				if (Object.keys(pid[index].AL1[indexAL1].allergyCodeMnemonicDescription).length == 0) {
					delete pid[index].AL1[indexAL1].allergyCodeMnemonicDescription;
				}
		
				// AL1.4, allergySeverity
				if (al1Seg[&apos;AL1.4&apos;][&apos;AL1.4.1&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergySeverity = al1Seg[&apos;AL1.4&apos;][&apos;AL1.4.1&apos;]; }
				
				// AL1.5, allergyReaction
				if (al1Seg[&apos;AL1.5&apos;][&apos;AL1.5.1&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].allergyReaction = al1Seg[&apos;AL1.5&apos;][&apos;AL1.5.1&apos;]; }
				
				// AL1.6, identificationDate
				if (al1Seg[&apos;AL1.6&apos;][&apos;AL1.6.1&apos;].toString() != &quot;&quot;) { pid[index].AL1[indexAL1].identificationDate = al1Seg[&apos;AL1.6&apos;][&apos;AL1.6.1&apos;]; }
		
				// clean up AL1 and increment index
				if (pid[index].AL1.length == 0) {
					delete pid[index].AL1;
				} else {
					indexAL1++;
				}
			}
		}

		// clean up PID and increment index
		if (Object.keys(pid[index]).length == 0) {
			delete pid[index];
		} else {
			index++;
		}
	}
}

// Optional: save a copy of the completed PID segment for reference later
//channelMap.put(&quot;pid&quot;, pid); // uncomment to save

// If it has content, add the PID segment to the hl7JSON object
if (pid &amp;&amp; Object.keys(pid).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.PID = pid;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>3</sequenceNumber>
          <name>--PV1 (Patient Visit) Segment - REQUIRES PID MAPPING STEP ABOVE</name>
          <script>// Pull out the PID JSON to embed the PV1 segments in
var pid = JSON.parse($(&apos;hl7JSON&apos;)).content.PID;

// PID iteration, in order to grab related PV1&apos;s
if (msg[&apos;PID&apos;].length() &gt; 0) {

	// PID is a required to have a PV1, but if the PID was blank and was removed from the JSON, just create a new one to add the PV1 into
	if (!pid) {
		pid = [{}];
	}
	
	var index = 0;
	for each (seg in msg.PID) {

		// PV1 (PID)
		var pv1Group = getSegmentsAfter(msg,seg,&apos;PV1&apos;,false);
		if (pv1Group.length &gt; 0 &amp;&amp; pid) {
			pid[index].PV1 = [];
			var indexPV1 = 0;
			for each (pv1Seg in pv1Group) {
				pid[index].PV1[indexPV1] = {};
		
				// PV1.1, setId
				if (pv1Seg[&apos;PV1.1&apos;][&apos;PV1.1.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].setId = pv1Seg[&apos;PV1.1&apos;][&apos;PV1.1.1&apos;]; }
		
				// PV1.2, patientClass
				if (pv1Seg[&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].patientClass = pv1Seg[&apos;PV1.2&apos;][&apos;PV1.2.1&apos;]; }
		
				// PV1.3, assignedPatientLocation
				pid[index].PV1[indexPV1].assignedPatientLocation = {};
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.pointOfCare = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.1&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.room = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.2&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.bed = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.3&apos;]; }
				pid[index].PV1[indexPV1].assignedPatientLocation.facility = {};
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.facility.universalId =  pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.facility.universalIdType =  pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].assignedPatientLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;]; }
					else delete pid[index].PV1[indexPV1].assignedPatientLocation.facility;
				}
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.locationStatus = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.5&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.personLocationType = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.6&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.building = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.7&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.floor = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.8&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.locationDescription = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].assignedPatientLocation).length == 0) {
					delete pid[index].PV1[indexPV1].assignedPatientLocation;
				}
		
				// PV1.4, admissionType
				if (pv1Seg[&apos;PV1.4&apos;][&apos;PV1.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].admissionType = pv1Seg[&apos;PV1.4&apos;][&apos;PV1.4.1&apos;]; }
		
				// PV1.5, preadmitNumber
				pid[index].PV1[indexPV1].preadmitNumber = {};
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.id = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.1&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.identifierCheckDigit = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.2&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.codeIdentifyingCheckDigitScheme = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.3&apos;]; }
				pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority = {};
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority.universalId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority.universalIdType = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority).length == 0) {
					if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;]; }
					else delete pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority;
				}
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.idTypeCode = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.5&apos;]; }
				pid[index].PV1[indexPV1].preadmitNumber.assigningFacility = {};
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningFacility.namespaceId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.1&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningFacility.universalId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.2&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningFacility.universalIdType = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].preadmitNumber.assigningFacility).length == 0) {
					if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningFacility.namespaceId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;]; }
					else delete pid[index].PV1[indexPV1].preadmitNumber.assigningFacility;
				}
				if (Object.keys(pid[index].PV1[indexPV1].preadmitNumber).length == 0) {
					delete pid[index].PV1[indexPV1].preadmitNumber;
				}
		
				// PV1.6, priorPatientLocation
				pid[index].PV1[indexPV1].priorPatientLocation = {};
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.pointOfCare = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.1&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.room = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.2&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.bed = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.3&apos;]; }
				pid[index].PV1[indexPV1].priorPatientLocation.facility = {};
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.facility.universalId =  pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.facility.universalIdType =  pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].priorPatientLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;]; }
					else delete pid[index].PV1[indexPV1].priorPatientLocation.facility;
				}
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.locationStatus = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.5&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.personLocationType = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.6&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.building = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.7&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.floor = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.8&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.locationDescription = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].priorPatientLocation).length == 0) {
					delete pid[index].PV1[indexPV1].priorPatientLocation;
				}
		
				// PV1.7, attendingDoctor
				pid[index].PV1[indexPV1].attendingDoctor = [];
				for each (field in pv1Seg[&apos;PV1.7&apos;]) {
					var block = {};
					if (field[&apos;PV1.7.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PV1.7.1&apos;]; }
					if (field[&apos;PV1.7.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PV1.7.2&apos;]; }
					if (field[&apos;PV1.7.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PV1.7.3&apos;]; }
					if (field[&apos;PV1.7.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PV1.7.4&apos;]; }
					if (field[&apos;PV1.7.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PV1.7.5&apos;]; }
					if (field[&apos;PV1.7.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PV1.7.6&apos;]; }
					if (field[&apos;PV1.7.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PV1.7.7&apos;]; }
					if (field[&apos;PV1.7.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PV1.7.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.1&apos;]; }
					if (field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.2&apos;]; }
					if (field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PV1.7.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.7.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PV1.7.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PV1.7.10&apos;]; }
					if (field[&apos;PV1.7.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV1.7.11&apos;]; }
					if (field[&apos;PV1.7.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV1.7.12&apos;]; }
					if (field[&apos;PV1.7.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PV1.7.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.1&apos;]; }
					if (field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.2&apos;]; }
					if (field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PV1.7.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.7.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PV1[indexPV1].attendingDoctor.push(block);
					}
				}
				if (pid[index].PV1[indexPV1].attendingDoctor.length == 0) {
					delete pid[index].PV1[indexPV1].attendingDoctor;
				}
		
				// PV1.8, referringDoctor
				pid[index].PV1[indexPV1].referringDoctor = [];
				for each (field in pv1Seg[&apos;PV1.8&apos;]) {
					var block = {};
					if (field[&apos;PV1.8.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PV1.8.1&apos;]; }
					if (field[&apos;PV1.8.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PV1.8.2&apos;]; }
					if (field[&apos;PV1.8.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PV1.8.3&apos;]; }
					if (field[&apos;PV1.8.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PV1.8.4&apos;]; }
					if (field[&apos;PV1.8.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PV1.8.5&apos;]; }
					if (field[&apos;PV1.8.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PV1.8.6&apos;]; }
					if (field[&apos;PV1.8.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PV1.8.7&apos;]; }
					if (field[&apos;PV1.8.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PV1.8.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.1&apos;]; }
					if (field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.2&apos;]; }
					if (field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PV1.8.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.8.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PV1.8.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PV1.8.10&apos;]; }
					if (field[&apos;PV1.8.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV1.8.11&apos;]; }
					if (field[&apos;PV1.8.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV1.8.12&apos;]; }
					if (field[&apos;PV1.8.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PV1.8.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.1&apos;]; }
					if (field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.2&apos;]; }
					if (field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PV1.8.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.8.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PV1[indexPV1].referringDoctor.push(block);
					}
				}
				if (pid[index].PV1[indexPV1].referringDoctor.length == 0) {
					delete pid[index].PV1[indexPV1].referringDoctor;
				}
				
				// PV1.9, consultingDoctor
				pid[index].PV1[indexPV1].consultingDoctor = [];
				for each (field in pv1Seg[&apos;PV1.9&apos;]) {
					var block = {};
					if (field[&apos;PV1.9.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PV1.9.1&apos;]; }
					if (field[&apos;PV1.9.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PV1.9.2&apos;]; }
					if (field[&apos;PV1.9.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PV1.9.3&apos;]; }
					if (field[&apos;PV1.9.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PV1.9.4&apos;]; }
					if (field[&apos;PV1.9.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PV1.9.5&apos;]; }
					if (field[&apos;PV1.9.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PV1.9.6&apos;]; }
					if (field[&apos;PV1.9.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PV1.9.7&apos;]; }
					if (field[&apos;PV1.9.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PV1.9.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.1&apos;]; }
					if (field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.2&apos;]; }
					if (field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PV1.9.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.9.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PV1.9.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PV1.9.10&apos;]; }
					if (field[&apos;PV1.9.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV1.9.11&apos;]; }
					if (field[&apos;PV1.9.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV1.9.12&apos;]; }
					if (field[&apos;PV1.9.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PV1.9.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.1&apos;]; }
					if (field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.2&apos;]; }
					if (field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PV1.9.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.9.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PV1[indexPV1].consultingDoctor.push(block);
					}
				}
				if (pid[index].PV1[indexPV1].consultingDoctor.length == 0) {
					delete pid[index].PV1[indexPV1].consultingDoctor;
				}
				
				// PV1.10, hospitalService
				if (pv1Seg[&apos;PV1.10&apos;][&apos;PV1.10.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].hospitalService = pv1Seg[&apos;PV1.10&apos;][&apos;PV1.10.1&apos;]; }
		
				// PV1.11, temporaryLocation
				pid[index].PV1[indexPV1].temporaryLocation = {};
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.pointOfCare = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.1&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.room = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.2&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.bed = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.3&apos;]; }
				pid[index].PV1[indexPV1].temporaryLocation.facility = {};
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.facility.universalId =  pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.facility.universalIdType =  pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].temporaryLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;]; }
					else delete pid[index].PV1[indexPV1].temporaryLocation.facility;
				}
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.locationStatus = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.5&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.personLocationType = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.6&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.building = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.7&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.floor = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.8&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.locationDescription = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].temporaryLocation).length == 0) {
					delete pid[index].PV1[indexPV1].temporaryLocation;
				}
		
				// PV1.12, preadmitTestIndicator
				if (pv1Seg[&apos;PV1.12&apos;][&apos;PV1.12.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitTestIndicator = pv1Seg[&apos;PV1.12&apos;][&apos;PV1.12.1&apos;]; }
		
				// PV1.13, readmissionIndicator
				if (pv1Seg[&apos;PV1.13&apos;][&apos;PV1.13.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].readmissionIndicator = pv1Seg[&apos;PV1.13&apos;][&apos;PV1.13.1&apos;]; }
		
				// PV1.14, admitSource
				if (pv1Seg[&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].admitSource = pv1Seg[&apos;PV1.14&apos;][&apos;PV1.14.1&apos;]; }
		
				// PV1.15, ambulatoryStatus
				pid[index].PV1[indexPV1].ambulatoryStatus = [];
				for each (field in pv1Seg[&apos;PV1.15&apos;]) {
					if (field[&apos;PV1.15.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].ambulatoryStatus.push(field[&apos;PV1.15.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].ambulatoryStatus.length == 0){
					delete pid[index].PV1[indexPV1].ambulatoryStatus;
				}
		
				// PV1.16, vipIndicator
				if (pv1Seg[&apos;PV1.16&apos;][&apos;PV1.16.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].vipIndicator = pv1Seg[&apos;PV1.16&apos;][&apos;PV1.16.1&apos;]; }
		
				// PV1.17, admittingDoctor
				pid[index].PV1[indexPV1].admittingDoctor = [];
				for each (field in pv1Seg[&apos;PV1.17&apos;]) {
					var block = {};
					if (field[&apos;PV1.17.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PV1.17.1&apos;]; }
					if (field[&apos;PV1.17.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PV1.17.2&apos;]; }
					if (field[&apos;PV1.17.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PV1.17.3&apos;]; }
					if (field[&apos;PV1.17.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PV1.17.4&apos;]; }
					if (field[&apos;PV1.17.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PV1.17.5&apos;]; }
					if (field[&apos;PV1.17.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PV1.17.6&apos;]; }
					if (field[&apos;PV1.17.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PV1.17.7&apos;]; }
					if (field[&apos;PV1.17.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PV1.17.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.1&apos;]; }
					if (field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.2&apos;]; }
					if (field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PV1.17.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.17.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PV1.17.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PV1.17.10&apos;]; }
					if (field[&apos;PV1.17.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV1.17.11&apos;]; }
					if (field[&apos;PV1.17.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV1.17.12&apos;]; }
					if (field[&apos;PV1.17.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PV1.17.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.1&apos;]; }
					if (field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.2&apos;]; }
					if (field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PV1.17.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.17.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PV1[indexPV1].admittingDoctor.push(block);
					}
				}
				if (pid[index].PV1[indexPV1].admittingDoctor.length == 0) {
					delete pid[index].PV1[indexPV1].admittingDoctor;
				}
				
				// PV1.18, patientType
				if (pv1Seg[&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].patientType = pv1Seg[&apos;PV1.18&apos;][&apos;PV1.18.1&apos;]; }
		
				// PV1.19, visitNumber
				pid[index].PV1[indexPV1].visitNumber = {};
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.id = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.1&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.identifierCheckDigit = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.2&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.codeIdentifyingCheckDigitScheme = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.3&apos;]; }
				pid[index].PV1[indexPV1].visitNumber.assigningAuthority = {};
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningAuthority.universalId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningAuthority.universalIdType = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].visitNumber.assigningAuthority).length == 0) {
					if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;]; }
					else delete pid[index].PV1[indexPV1].visitNumber.assigningAuthority;
				}
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.idTypeCode = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.5&apos;]; }
				pid[index].PV1[indexPV1].visitNumber.assigningFacility = {};
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningFacility.namespaceId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.1&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningFacility.universalId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.2&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningFacility.universalIdType = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].visitNumber.assigningFacility).length == 0) {
					if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningFacility.namespaceId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;]; }
					else delete pid[index].PV1[indexPV1].visitNumber.assigningFacility;
				}
				if (Object.keys(pid[index].PV1[indexPV1].visitNumber).length == 0) {
					delete pid[index].PV1[indexPV1].visitNumber;
				}
				
				// PV1.20, financialClass
				pid[index].PV1[indexPV1].financialClass = {};
				if (pv1Seg[&apos;PV1.20&apos;][&apos;PV1.20.1&apos;].toString() != &quot;&quot;) {pid[index].PV1[indexPV1].financialClass.financialClass = pv1Seg[&apos;PV1.20&apos;][&apos;PV1.20.1&apos;]; }
				if (pv1Seg[&apos;PV1.20&apos;][&apos;PV1.20.2&apos;].toString() != &quot;&quot;) {pid[index].PV1[indexPV1].financialClass.effectiveDate = pv1Seg[&apos;PV1.20&apos;][&apos;PV1.20.2&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].financialClass).length == 0) {
					delete pid[index].PV1[indexPV1].financialClass;
				}
		
				// PV1.21, chargePriceIndicator
				if (pv1Seg[&apos;PV1.21&apos;][&apos;PV1.21.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].chargePriceIndicator = pv1Seg[&apos;PV1.21&apos;][&apos;PV1.21.1&apos;]; }
		
				// PV1.22, courtesyCode
				if (pv1Seg[&apos;PV1.22&apos;][&apos;PV1.22.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].courtesyCode = pv1Seg[&apos;PV1.22&apos;][&apos;PV1.22.1&apos;]; }
		
				// PV1.23, creditRating
				if (pv1Seg[&apos;PV1.23&apos;][&apos;PV1.23.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].creditRating = pv1Seg[&apos;PV1.23&apos;][&apos;PV1.23.1&apos;]; }
		
				// PV1.24, contractCode
				pid[index].PV1[indexPV1].contractCode = [];
				for each (field in pv1Seg[&apos;PV1.24&apos;]) {
					if (field[&apos;PV1.24.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].contractCode.push(field[&apos;PV1.24.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].contractCode.length == 0) {
					delete pid[index].PV1[indexPV1].contractCode;
				}
		
				// PV1.25, contractEffectiveDate
				pid[index].PV1[indexPV1].contractEffectiveDate = [];
				for each (field in pv1Seg[&apos;PV1.25&apos;]) {
					if (field[&apos;PV1.25.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].contractEffectiveDate.push(field[&apos;PV1.25.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].contractEffectiveDate.length == 0) {
					delete pid[index].PV1[indexPV1].contractEffectiveDate;
				}
		
				// PV1.26, contractAmount
				pid[index].PV1[indexPV1].contractAmount = [];
				for each (field in pv1Seg[&apos;PV1.26&apos;]) {
					if (field[&apos;PV1.26.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].contractAmount.push(field[&apos;PV1.26.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].contractAmount.length == 0) {
					delete pid[index].PV1[indexPV1].contractAmount;
				}
		
				// PV1.27, contractPeriod
				pid[index].PV1[indexPV1].contractPeriod = [];
				for each (field in pv1Seg[&apos;PV1.27&apos;]) {
					if (field[&apos;PV1.27.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].contractPeriod.push(field[&apos;PV1.27.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].contractPeriod.length == 0) {
					delete pid[index].PV1[indexPV1].contractPeriod;
				}
		
				// PV1.28, interestCode
				if (pv1Seg[&apos;PV1.28&apos;][&apos;PV1.28.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].interestCode = pv1Seg[&apos;PV1.28&apos;][&apos;PV1.28.1&apos;]; }
		
				// PV1.29, transferToBadDebtCode
				if (pv1Seg[&apos;PV1.29&apos;][&apos;PV1.29.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].transferToBadDebtCode = pv1Seg[&apos;PV1.29&apos;][&apos;PV1.29.1&apos;]; }
		
				// PV1.30, transferToBadDebtDate
				if (pv1Seg[&apos;PV1.30&apos;][&apos;PV1.30.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].transferToBadDebtDate = pv1Seg[&apos;PV1.30&apos;][&apos;PV1.30.1&apos;]; }
		
				// PV1.31, badDebtAgencyCode
				if (pv1Seg[&apos;PV1.31&apos;][&apos;PV1.31.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].badDebtAgencyCode = pv1Seg[&apos;PV1.31&apos;][&apos;PV1.31.1&apos;]; }
		
				// PV1.32, badDebtTransferAmount
				if (pv1Seg[&apos;PV1.32&apos;][&apos;PV1.32.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].badDebtTransferAmount = pv1Seg[&apos;PV1.32&apos;][&apos;PV1.32.1&apos;]; }
		
				// PV1.33, badDebtRecoveryAmount
				if (pv1Seg[&apos;PV1.33&apos;][&apos;PV1.33.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].badDebtRecoveryAmount = pv1Seg[&apos;PV1.33&apos;][&apos;PV1.33.1&apos;]; }
		
				// PV1.34, deleteAccountIndicator
				if (pv1Seg[&apos;PV1.34&apos;][&apos;PV1.34.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].deleteAccountIndicator = pv1Seg[&apos;PV1.34&apos;][&apos;PV1.34.1&apos;]; }
		
				// PV1.35, deleteAccountDate
				if (pv1Seg[&apos;PV1.35&apos;][&apos;PV1.35.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].deleteAccountDate = pv1Seg[&apos;PV1.35&apos;][&apos;PV1.35.1&apos;]; }
		
				// PV1.36, dischargeDisposition
				if (pv1Seg[&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dischargeDisposition = pv1Seg[&apos;PV1.36&apos;][&apos;PV1.36.1&apos;]; }
		
				// PV1.37, dischargedtoLocation
				pid[index].PV1[indexPV1].dischargedtoLocation = {};
				if (pv1Seg[&apos;PV1.37&apos;][&apos;PV1.37.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dischargedtoLocation.dischargeLocation = pv1Seg[&apos;PV1.37&apos;][&apos;PV1.37.1&apos;]; }
				if (pv1Seg[&apos;PV1.37&apos;][&apos;PV1.37.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dischargedtoLocation.effectiveDate = pv1Seg[&apos;PV1.37&apos;][&apos;PV1.37.2&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].dischargedtoLocation).length == 0) {
					delete pid[index].PV1[indexPV1].dischargedtoLocation;
				}
		
				// PV1.38, dietType
				if (pv1Seg[&apos;PV1.38&apos;][&apos;PV1.38.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dietType = pv1Seg[&apos;PV1.38&apos;][&apos;PV1.38.1&apos;]; }
		
				// PV1.39, servicingFacility
				if (pv1Seg[&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].servicingFacility = pv1Seg[&apos;PV1.39&apos;][&apos;PV1.39.1&apos;]; }
		
				// PV1.40, bedStatus
				if (pv1Seg[&apos;PV1.40&apos;][&apos;PV1.40.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].bedStatus = pv1Seg[&apos;PV1.40&apos;][&apos;PV1.40.1&apos;]; }
		
				// PV1.41, accountStatus
				if (pv1Seg[&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].accountStatus = pv1Seg[&apos;PV1.41&apos;][&apos;PV1.41.1&apos;]; }
		
				// PV1.42, pendingLocation
				pid[index].PV1[indexPV1].pendingLocation = {};
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.pointOfCare = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.1&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.room = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.2&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.bed = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.3&apos;]; }
				pid[index].PV1[indexPV1].pendingLocation.facility = {};
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.facility.universalId =  pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.facility.universalIdType =  pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].pendingLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;]; }
					else delete pid[index].PV1[indexPV1].pendingLocation.facility;
				}
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.locationStatus = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.5&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.personLocationType = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.6&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.building = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.7&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.floor = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.8&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.locationDescription = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].pendingLocation).length == 0) {
					delete pid[index].PV1[indexPV1].pendingLocation;
				}
		
				// PV1.43, priorTemporaryLocation
				pid[index].PV1[indexPV1].priorTemporaryLocation = {};
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.pointOfCare = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.1&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.room = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.2&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.bed = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.3&apos;]; }
				pid[index].PV1[indexPV1].priorTemporaryLocation.facility = {};
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.facility.universalId =  pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.facility.universalIdType =  pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].priorTemporaryLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;]; }
					else delete pid[index].PV1[indexPV1].priorTemporaryLocation.facility;
				}
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.locationStatus = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.5&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.personLocationType = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.6&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.building = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.7&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.floor = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.8&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.locationDescription = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].priorTemporaryLocation).length == 0) {
					delete pid[index].PV1[indexPV1].priorTemporaryLocation;
				}
		
				// PV1.44, admitDateTime
				if (pv1Seg[&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].admitDateTime = pv1Seg[&apos;PV1.44&apos;][&apos;PV1.44.1&apos;]; }
		
				// PV1.45, dischargeDateTime
				if (pv1Seg[&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dischargeDateTime = pv1Seg[&apos;PV1.45&apos;][&apos;PV1.45.1&apos;]; }
		
				// PV1.46, currentPatientBalance
				if (pv1Seg[&apos;PV1.46&apos;][&apos;PV1.46.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].currentPatientBalance = pv1Seg[&apos;PV1.46&apos;][&apos;PV1.46.1&apos;]; }
		
				// PV1.47, totalCharges
				if (pv1Seg[&apos;PV1.47&apos;][&apos;PV1.47.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].totalCharges = pv1Seg[&apos;PV1.47&apos;][&apos;PV1.47.1&apos;]; }
		
				// PV1.48, totalAdjustments
				if (pv1Seg[&apos;PV1.48&apos;][&apos;PV1.48.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].totalAdjustments = pv1Seg[&apos;PV1.48&apos;][&apos;PV1.48.1&apos;]; }
		
				// PV1.49, totalPayments
				if (pv1Seg[&apos;PV1.49&apos;][&apos;PV1.49.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].totalPayments = pv1Seg[&apos;PV1.49&apos;][&apos;PV1.49.1&apos;]; }
		
				// PV1.50, alternateVisitID
				pid[index].PV1[indexPV1].alternateVisitID = {};
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.id = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.1&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.identifierCheckDigit = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.2&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.codeIdentifyingCheckDigitScheme = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.3&apos;]; }
				pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority = {};
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority.universalId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority.universalIdType = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority).length == 0) {
					if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;]; }
					else delete pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority;
				}
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.idTypeCode = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.5&apos;]; }
				pid[index].PV1[indexPV1].alternateVisitID.assigningFacility = {};
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningFacility.namespaceId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.1&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningFacility.universalId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.2&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningFacility.universalIdType = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].alternateVisitID.assigningFacility).length == 0) {
					if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningFacility.namespaceId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;]; }
					else delete pid[index].PV1[indexPV1].alternateVisitID.assigningFacility;
				}
				if (Object.keys(pid[index].PV1[indexPV1].alternateVisitID).length == 0) {
					delete pid[index].PV1[indexPV1].alternateVisitID;
				}
		
				// PV1.51, visitIndicator
				if (pv1Seg[&apos;PV1.51&apos;][&apos;PV1.51.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitIndicator = pv1Seg[&apos;PV1.51&apos;][&apos;PV1.51.1&apos;]; }
		
				// PV1.52, otherHealthcareProvider
				pid[index].PV1[indexPV1].otherHealthcareProvider = {};
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.1&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.lastName = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.2&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.firstName = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.3&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.middleInitOrName = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.4&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.suffix = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.5&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.prefix = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.6&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.degree = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.7&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.sourceTable = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.8&apos;]; }
				pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority = {};
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.1&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority.universalId = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.2&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority.universalIdType = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority).length == 0) {
					if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;]; }
					else delete pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority;
				}
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.10&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.nameTypeCode = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.10&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.11&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.identifierCheckDigit = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.11&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.12&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.codeIdentifyingCheckDigitScheme = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.12&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.13&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.identifierTypeCode = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.13&apos;]; }
				pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility = {};
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.1&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility.universalId = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.2&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility.universalIdType = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility).length == 0) {
					if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;]; }
					else delete pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility;
				}
				if (Object.keys(pid[index].PV1[indexPV1].otherHealthcareProvider).length == 0) {
					delete pid[index].PV1[indexPV1].otherHealthcareProvider;
				}
		
				// clean up PV1 and increment indexPV1
				if (Object.keys(pid[index].PV1[indexPV1]).length == 0) {
					delete pid[index].PV1[indexPV1];
				} else {
					indexPV1++;
				}
			}

			// Clean up the PV1 object if it&apos;s empty
			if (pid[index].PV1[0] == null){
				delete pid[index].PV1;
			}
		}

		// Increment the PID index
		index++;
	}
}

// Optional: save a copy of the completed PID segment for reference later
//channelMap.put(&quot;pid&quot;, pid); // uncomment to save

// If it has content, add the PID segment to the hl7JSON object
if (pid &amp;&amp; Object.keys(pid).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.PID = pid;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// Pull out the PID JSON to embed the PV1 segments in
var pid = JSON.parse($(&apos;hl7JSON&apos;)).content.PID;

// PID iteration, in order to grab related PV1&apos;s
if (msg[&apos;PID&apos;].length() &gt; 0) {

	// PID is a required to have a PV1, but if the PID was blank and was removed from the JSON, just create a new one to add the PV1 into
	if (!pid) {
		pid = [{}];
	}
	
	var index = 0;
	for each (seg in msg.PID) {

		// PV1 (PID)
		var pv1Group = getSegmentsAfter(msg,seg,&apos;PV1&apos;,false);
		if (pv1Group.length &gt; 0 &amp;&amp; pid) {
			pid[index].PV1 = [];
			var indexPV1 = 0;
			for each (pv1Seg in pv1Group) {
				pid[index].PV1[indexPV1] = {};
		
				// PV1.1, setId
				if (pv1Seg[&apos;PV1.1&apos;][&apos;PV1.1.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].setId = pv1Seg[&apos;PV1.1&apos;][&apos;PV1.1.1&apos;]; }
		
				// PV1.2, patientClass
				if (pv1Seg[&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].patientClass = pv1Seg[&apos;PV1.2&apos;][&apos;PV1.2.1&apos;]; }
		
				// PV1.3, assignedPatientLocation
				pid[index].PV1[indexPV1].assignedPatientLocation = {};
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.pointOfCare = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.1&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.room = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.2&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.bed = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.3&apos;]; }
				pid[index].PV1[indexPV1].assignedPatientLocation.facility = {};
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.facility.universalId =  pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.facility.universalIdType =  pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;][&apos;PV1.3.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].assignedPatientLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.4&apos;]; }
					else delete pid[index].PV1[indexPV1].assignedPatientLocation.facility;
				}
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.locationStatus = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.5&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.personLocationType = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.6&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.building = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.7&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.floor = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.8&apos;]; }
				if (pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].assignedPatientLocation.locationDescription = pv1Seg[&apos;PV1.3&apos;][&apos;PV1.3.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].assignedPatientLocation).length == 0) {
					delete pid[index].PV1[indexPV1].assignedPatientLocation;
				}
		
				// PV1.4, admissionType
				if (pv1Seg[&apos;PV1.4&apos;][&apos;PV1.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].admissionType = pv1Seg[&apos;PV1.4&apos;][&apos;PV1.4.1&apos;]; }
		
				// PV1.5, preadmitNumber
				pid[index].PV1[indexPV1].preadmitNumber = {};
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.id = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.1&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.identifierCheckDigit = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.2&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.codeIdentifyingCheckDigitScheme = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.3&apos;]; }
				pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority = {};
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority.universalId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority.universalIdType = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;][&apos;PV1.5.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority).length == 0) {
					if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.4&apos;]; }
					else delete pid[index].PV1[indexPV1].preadmitNumber.assigningAuthority;
				}
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.idTypeCode = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.5&apos;]; }
				pid[index].PV1[indexPV1].preadmitNumber.assigningFacility = {};
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningFacility.namespaceId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.1&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningFacility.universalId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.2&apos;]; }
				if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningFacility.universalIdType = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;][&apos;PV1.5.6.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].preadmitNumber.assigningFacility).length == 0) {
					if (pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitNumber.assigningFacility.namespaceId = pv1Seg[&apos;PV1.5&apos;][&apos;PV1.5.6&apos;]; }
					else delete pid[index].PV1[indexPV1].preadmitNumber.assigningFacility;
				}
				if (Object.keys(pid[index].PV1[indexPV1].preadmitNumber).length == 0) {
					delete pid[index].PV1[indexPV1].preadmitNumber;
				}
		
				// PV1.6, priorPatientLocation
				pid[index].PV1[indexPV1].priorPatientLocation = {};
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.pointOfCare = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.1&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.room = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.2&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.bed = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.3&apos;]; }
				pid[index].PV1[indexPV1].priorPatientLocation.facility = {};
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.facility.universalId =  pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.facility.universalIdType =  pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;][&apos;PV1.6.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].priorPatientLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.4&apos;]; }
					else delete pid[index].PV1[indexPV1].priorPatientLocation.facility;
				}
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.locationStatus = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.5&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.personLocationType = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.6&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.building = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.7&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.floor = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.8&apos;]; }
				if (pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorPatientLocation.locationDescription = pv1Seg[&apos;PV1.6&apos;][&apos;PV1.6.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].priorPatientLocation).length == 0) {
					delete pid[index].PV1[indexPV1].priorPatientLocation;
				}
		
				// PV1.7, attendingDoctor
				pid[index].PV1[indexPV1].attendingDoctor = [];
				for each (field in pv1Seg[&apos;PV1.7&apos;]) {
					var block = {};
					if (field[&apos;PV1.7.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PV1.7.1&apos;]; }
					if (field[&apos;PV1.7.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PV1.7.2&apos;]; }
					if (field[&apos;PV1.7.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PV1.7.3&apos;]; }
					if (field[&apos;PV1.7.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PV1.7.4&apos;]; }
					if (field[&apos;PV1.7.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PV1.7.5&apos;]; }
					if (field[&apos;PV1.7.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PV1.7.6&apos;]; }
					if (field[&apos;PV1.7.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PV1.7.7&apos;]; }
					if (field[&apos;PV1.7.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PV1.7.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.1&apos;]; }
					if (field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.2&apos;]; }
					if (field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV1.7.9&apos;][&apos;PV1.7.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PV1.7.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.7.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PV1.7.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PV1.7.10&apos;]; }
					if (field[&apos;PV1.7.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV1.7.11&apos;]; }
					if (field[&apos;PV1.7.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV1.7.12&apos;]; }
					if (field[&apos;PV1.7.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PV1.7.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.1&apos;]; }
					if (field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.2&apos;]; }
					if (field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV1.7.14&apos;][&apos;PV1.7.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PV1.7.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.7.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PV1[indexPV1].attendingDoctor.push(block);
					}
				}
				if (pid[index].PV1[indexPV1].attendingDoctor.length == 0) {
					delete pid[index].PV1[indexPV1].attendingDoctor;
				}
		
				// PV1.8, referringDoctor
				pid[index].PV1[indexPV1].referringDoctor = [];
				for each (field in pv1Seg[&apos;PV1.8&apos;]) {
					var block = {};
					if (field[&apos;PV1.8.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PV1.8.1&apos;]; }
					if (field[&apos;PV1.8.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PV1.8.2&apos;]; }
					if (field[&apos;PV1.8.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PV1.8.3&apos;]; }
					if (field[&apos;PV1.8.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PV1.8.4&apos;]; }
					if (field[&apos;PV1.8.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PV1.8.5&apos;]; }
					if (field[&apos;PV1.8.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PV1.8.6&apos;]; }
					if (field[&apos;PV1.8.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PV1.8.7&apos;]; }
					if (field[&apos;PV1.8.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PV1.8.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.1&apos;]; }
					if (field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.2&apos;]; }
					if (field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV1.8.9&apos;][&apos;PV1.8.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PV1.8.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.8.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PV1.8.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PV1.8.10&apos;]; }
					if (field[&apos;PV1.8.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV1.8.11&apos;]; }
					if (field[&apos;PV1.8.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV1.8.12&apos;]; }
					if (field[&apos;PV1.8.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PV1.8.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.1&apos;]; }
					if (field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.2&apos;]; }
					if (field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV1.8.14&apos;][&apos;PV1.8.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PV1.8.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.8.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PV1[indexPV1].referringDoctor.push(block);
					}
				}
				if (pid[index].PV1[indexPV1].referringDoctor.length == 0) {
					delete pid[index].PV1[indexPV1].referringDoctor;
				}
				
				// PV1.9, consultingDoctor
				pid[index].PV1[indexPV1].consultingDoctor = [];
				for each (field in pv1Seg[&apos;PV1.9&apos;]) {
					var block = {};
					if (field[&apos;PV1.9.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PV1.9.1&apos;]; }
					if (field[&apos;PV1.9.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PV1.9.2&apos;]; }
					if (field[&apos;PV1.9.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PV1.9.3&apos;]; }
					if (field[&apos;PV1.9.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PV1.9.4&apos;]; }
					if (field[&apos;PV1.9.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PV1.9.5&apos;]; }
					if (field[&apos;PV1.9.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PV1.9.6&apos;]; }
					if (field[&apos;PV1.9.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PV1.9.7&apos;]; }
					if (field[&apos;PV1.9.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PV1.9.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.1&apos;]; }
					if (field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.2&apos;]; }
					if (field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV1.9.9&apos;][&apos;PV1.9.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PV1.9.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.9.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PV1.9.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PV1.9.10&apos;]; }
					if (field[&apos;PV1.9.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV1.9.11&apos;]; }
					if (field[&apos;PV1.9.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV1.9.12&apos;]; }
					if (field[&apos;PV1.9.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PV1.9.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.1&apos;]; }
					if (field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.2&apos;]; }
					if (field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV1.9.14&apos;][&apos;PV1.9.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PV1.9.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.9.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PV1[indexPV1].consultingDoctor.push(block);
					}
				}
				if (pid[index].PV1[indexPV1].consultingDoctor.length == 0) {
					delete pid[index].PV1[indexPV1].consultingDoctor;
				}
				
				// PV1.10, hospitalService
				if (pv1Seg[&apos;PV1.10&apos;][&apos;PV1.10.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].hospitalService = pv1Seg[&apos;PV1.10&apos;][&apos;PV1.10.1&apos;]; }
		
				// PV1.11, temporaryLocation
				pid[index].PV1[indexPV1].temporaryLocation = {};
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.pointOfCare = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.1&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.room = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.2&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.bed = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.3&apos;]; }
				pid[index].PV1[indexPV1].temporaryLocation.facility = {};
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.facility.universalId =  pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.facility.universalIdType =  pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;][&apos;PV1.11.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].temporaryLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.4&apos;]; }
					else delete pid[index].PV1[indexPV1].temporaryLocation.facility;
				}
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.locationStatus = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.5&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.personLocationType = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.6&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.building = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.7&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.floor = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.8&apos;]; }
				if (pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].temporaryLocation.locationDescription = pv1Seg[&apos;PV1.11&apos;][&apos;PV1.11.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].temporaryLocation).length == 0) {
					delete pid[index].PV1[indexPV1].temporaryLocation;
				}
		
				// PV1.12, preadmitTestIndicator
				if (pv1Seg[&apos;PV1.12&apos;][&apos;PV1.12.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].preadmitTestIndicator = pv1Seg[&apos;PV1.12&apos;][&apos;PV1.12.1&apos;]; }
		
				// PV1.13, readmissionIndicator
				if (pv1Seg[&apos;PV1.13&apos;][&apos;PV1.13.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].readmissionIndicator = pv1Seg[&apos;PV1.13&apos;][&apos;PV1.13.1&apos;]; }
		
				// PV1.14, admitSource
				if (pv1Seg[&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].admitSource = pv1Seg[&apos;PV1.14&apos;][&apos;PV1.14.1&apos;]; }
		
				// PV1.15, ambulatoryStatus
				pid[index].PV1[indexPV1].ambulatoryStatus = [];
				for each (field in pv1Seg[&apos;PV1.15&apos;]) {
					if (field[&apos;PV1.15.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].ambulatoryStatus.push(field[&apos;PV1.15.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].ambulatoryStatus.length == 0){
					delete pid[index].PV1[indexPV1].ambulatoryStatus;
				}
		
				// PV1.16, vipIndicator
				if (pv1Seg[&apos;PV1.16&apos;][&apos;PV1.16.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].vipIndicator = pv1Seg[&apos;PV1.16&apos;][&apos;PV1.16.1&apos;]; }
		
				// PV1.17, admittingDoctor
				pid[index].PV1[indexPV1].admittingDoctor = [];
				for each (field in pv1Seg[&apos;PV1.17&apos;]) {
					var block = {};
					if (field[&apos;PV1.17.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;PV1.17.1&apos;]; }
					if (field[&apos;PV1.17.2&apos;].toString() != &quot;&quot;) { block.lastName = field[&apos;PV1.17.2&apos;]; }
					if (field[&apos;PV1.17.3&apos;].toString() != &quot;&quot;) { block.firstName = field[&apos;PV1.17.3&apos;]; }
					if (field[&apos;PV1.17.4&apos;].toString() != &quot;&quot;) { block.middleInitOrName = field[&apos;PV1.17.4&apos;]; }
					if (field[&apos;PV1.17.5&apos;].toString() != &quot;&quot;) { block.suffix = field[&apos;PV1.17.5&apos;]; }
					if (field[&apos;PV1.17.6&apos;].toString() != &quot;&quot;) { block.prefix = field[&apos;PV1.17.6&apos;]; }
					if (field[&apos;PV1.17.7&apos;].toString() != &quot;&quot;) { block.degree = field[&apos;PV1.17.7&apos;]; }
					if (field[&apos;PV1.17.8&apos;].toString() != &quot;&quot;) { block.sourceTable = field[&apos;PV1.17.8&apos;]; }
					block.assigningAuthority = {};
					if (field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.1&apos;]; }
					if (field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.2&apos;]; }
					if (field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV1.17.9&apos;][&apos;PV1.17.9.3&apos;]; }
					if (Object.keys(block.assigningAuthority).length == 0) {
						if (field[&apos;PV1.17.9&apos;].toString() != &quot;&quot;) { block.assigningAuthority.id = field[&apos;PV1.17.9&apos;]; }
						else delete block.assigningAuthority;
					}
					if (field[&apos;PV1.17.10&apos;].toString() != &quot;&quot;) { block.nameTypeCode = field[&apos;PV1.17.10&apos;]; }
					if (field[&apos;PV1.17.11&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV1.17.11&apos;]; }
					if (field[&apos;PV1.17.12&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV1.17.12&apos;]; }
					if (field[&apos;PV1.17.13&apos;].toString() != &quot;&quot;) { block.identifierTypeCode = field[&apos;PV1.17.13&apos;]; }
					block.assigningFacility = {};
					if (field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.1&apos;]; }
					if (field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.2&apos;]; }
					if (field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV1.17.14&apos;][&apos;PV1.17.14.3&apos;]; }
					if (Object.keys(block.assigningFacility).length == 0) {
						if (field[&apos;PV1.17.14&apos;].toString() != &quot;&quot;) { block.assigningFacility.id = field[&apos;PV1.17.14&apos;]; }
						else delete block.assigningFacility;
					}
					if (Object.keys(block).length &gt; 0) {
						pid[index].PV1[indexPV1].admittingDoctor.push(block);
					}
				}
				if (pid[index].PV1[indexPV1].admittingDoctor.length == 0) {
					delete pid[index].PV1[indexPV1].admittingDoctor;
				}
				
				// PV1.18, patientType
				if (pv1Seg[&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].patientType = pv1Seg[&apos;PV1.18&apos;][&apos;PV1.18.1&apos;]; }
		
				// PV1.19, visitNumber
				pid[index].PV1[indexPV1].visitNumber = {};
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.id = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.1&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.identifierCheckDigit = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.2&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.codeIdentifyingCheckDigitScheme = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.3&apos;]; }
				pid[index].PV1[indexPV1].visitNumber.assigningAuthority = {};
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningAuthority.universalId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningAuthority.universalIdType = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;][&apos;PV1.19.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].visitNumber.assigningAuthority).length == 0) {
					if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.4&apos;]; }
					else delete pid[index].PV1[indexPV1].visitNumber.assigningAuthority;
				}
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.idTypeCode = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.5&apos;]; }
				pid[index].PV1[indexPV1].visitNumber.assigningFacility = {};
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningFacility.namespaceId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.1&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningFacility.universalId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.2&apos;]; }
				if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningFacility.universalIdType = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;][&apos;PV1.19.6.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].visitNumber.assigningFacility).length == 0) {
					if (pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitNumber.assigningFacility.namespaceId = pv1Seg[&apos;PV1.19&apos;][&apos;PV1.19.6&apos;]; }
					else delete pid[index].PV1[indexPV1].visitNumber.assigningFacility;
				}
				if (Object.keys(pid[index].PV1[indexPV1].visitNumber).length == 0) {
					delete pid[index].PV1[indexPV1].visitNumber;
				}
				
				// PV1.20, financialClass
				pid[index].PV1[indexPV1].financialClass = {};
				if (pv1Seg[&apos;PV1.20&apos;][&apos;PV1.20.1&apos;].toString() != &quot;&quot;) {pid[index].PV1[indexPV1].financialClass.financialClass = pv1Seg[&apos;PV1.20&apos;][&apos;PV1.20.1&apos;]; }
				if (pv1Seg[&apos;PV1.20&apos;][&apos;PV1.20.2&apos;].toString() != &quot;&quot;) {pid[index].PV1[indexPV1].financialClass.effectiveDate = pv1Seg[&apos;PV1.20&apos;][&apos;PV1.20.2&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].financialClass).length == 0) {
					delete pid[index].PV1[indexPV1].financialClass;
				}
		
				// PV1.21, chargePriceIndicator
				if (pv1Seg[&apos;PV1.21&apos;][&apos;PV1.21.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].chargePriceIndicator = pv1Seg[&apos;PV1.21&apos;][&apos;PV1.21.1&apos;]; }
		
				// PV1.22, courtesyCode
				if (pv1Seg[&apos;PV1.22&apos;][&apos;PV1.22.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].courtesyCode = pv1Seg[&apos;PV1.22&apos;][&apos;PV1.22.1&apos;]; }
		
				// PV1.23, creditRating
				if (pv1Seg[&apos;PV1.23&apos;][&apos;PV1.23.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].creditRating = pv1Seg[&apos;PV1.23&apos;][&apos;PV1.23.1&apos;]; }
		
				// PV1.24, contractCode
				pid[index].PV1[indexPV1].contractCode = [];
				for each (field in pv1Seg[&apos;PV1.24&apos;]) {
					if (field[&apos;PV1.24.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].contractCode.push(field[&apos;PV1.24.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].contractCode.length == 0) {
					delete pid[index].PV1[indexPV1].contractCode;
				}
		
				// PV1.25, contractEffectiveDate
				pid[index].PV1[indexPV1].contractEffectiveDate = [];
				for each (field in pv1Seg[&apos;PV1.25&apos;]) {
					if (field[&apos;PV1.25.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].contractEffectiveDate.push(field[&apos;PV1.25.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].contractEffectiveDate.length == 0) {
					delete pid[index].PV1[indexPV1].contractEffectiveDate;
				}
		
				// PV1.26, contractAmount
				pid[index].PV1[indexPV1].contractAmount = [];
				for each (field in pv1Seg[&apos;PV1.26&apos;]) {
					if (field[&apos;PV1.26.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].contractAmount.push(field[&apos;PV1.26.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].contractAmount.length == 0) {
					delete pid[index].PV1[indexPV1].contractAmount;
				}
		
				// PV1.27, contractPeriod
				pid[index].PV1[indexPV1].contractPeriod = [];
				for each (field in pv1Seg[&apos;PV1.27&apos;]) {
					if (field[&apos;PV1.27.1&apos;].toString() != &quot;&quot;) {
						pid[index].PV1[indexPV1].contractPeriod.push(field[&apos;PV1.27.1&apos;]);
					}
				}
				if (pid[index].PV1[indexPV1].contractPeriod.length == 0) {
					delete pid[index].PV1[indexPV1].contractPeriod;
				}
		
				// PV1.28, interestCode
				if (pv1Seg[&apos;PV1.28&apos;][&apos;PV1.28.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].interestCode = pv1Seg[&apos;PV1.28&apos;][&apos;PV1.28.1&apos;]; }
		
				// PV1.29, transferToBadDebtCode
				if (pv1Seg[&apos;PV1.29&apos;][&apos;PV1.29.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].transferToBadDebtCode = pv1Seg[&apos;PV1.29&apos;][&apos;PV1.29.1&apos;]; }
		
				// PV1.30, transferToBadDebtDate
				if (pv1Seg[&apos;PV1.30&apos;][&apos;PV1.30.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].transferToBadDebtDate = pv1Seg[&apos;PV1.30&apos;][&apos;PV1.30.1&apos;]; }
		
				// PV1.31, badDebtAgencyCode
				if (pv1Seg[&apos;PV1.31&apos;][&apos;PV1.31.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].badDebtAgencyCode = pv1Seg[&apos;PV1.31&apos;][&apos;PV1.31.1&apos;]; }
		
				// PV1.32, badDebtTransferAmount
				if (pv1Seg[&apos;PV1.32&apos;][&apos;PV1.32.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].badDebtTransferAmount = pv1Seg[&apos;PV1.32&apos;][&apos;PV1.32.1&apos;]; }
		
				// PV1.33, badDebtRecoveryAmount
				if (pv1Seg[&apos;PV1.33&apos;][&apos;PV1.33.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].badDebtRecoveryAmount = pv1Seg[&apos;PV1.33&apos;][&apos;PV1.33.1&apos;]; }
		
				// PV1.34, deleteAccountIndicator
				if (pv1Seg[&apos;PV1.34&apos;][&apos;PV1.34.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].deleteAccountIndicator = pv1Seg[&apos;PV1.34&apos;][&apos;PV1.34.1&apos;]; }
		
				// PV1.35, deleteAccountDate
				if (pv1Seg[&apos;PV1.35&apos;][&apos;PV1.35.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].deleteAccountDate = pv1Seg[&apos;PV1.35&apos;][&apos;PV1.35.1&apos;]; }
		
				// PV1.36, dischargeDisposition
				if (pv1Seg[&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dischargeDisposition = pv1Seg[&apos;PV1.36&apos;][&apos;PV1.36.1&apos;]; }
		
				// PV1.37, dischargedtoLocation
				pid[index].PV1[indexPV1].dischargedtoLocation = {};
				if (pv1Seg[&apos;PV1.37&apos;][&apos;PV1.37.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dischargedtoLocation.dischargeLocation = pv1Seg[&apos;PV1.37&apos;][&apos;PV1.37.1&apos;]; }
				if (pv1Seg[&apos;PV1.37&apos;][&apos;PV1.37.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dischargedtoLocation.effectiveDate = pv1Seg[&apos;PV1.37&apos;][&apos;PV1.37.2&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].dischargedtoLocation).length == 0) {
					delete pid[index].PV1[indexPV1].dischargedtoLocation;
				}
		
				// PV1.38, dietType
				if (pv1Seg[&apos;PV1.38&apos;][&apos;PV1.38.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dietType = pv1Seg[&apos;PV1.38&apos;][&apos;PV1.38.1&apos;]; }
		
				// PV1.39, servicingFacility
				if (pv1Seg[&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].servicingFacility = pv1Seg[&apos;PV1.39&apos;][&apos;PV1.39.1&apos;]; }
		
				// PV1.40, bedStatus
				if (pv1Seg[&apos;PV1.40&apos;][&apos;PV1.40.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].bedStatus = pv1Seg[&apos;PV1.40&apos;][&apos;PV1.40.1&apos;]; }
		
				// PV1.41, accountStatus
				if (pv1Seg[&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].accountStatus = pv1Seg[&apos;PV1.41&apos;][&apos;PV1.41.1&apos;]; }
		
				// PV1.42, pendingLocation
				pid[index].PV1[indexPV1].pendingLocation = {};
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.pointOfCare = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.1&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.room = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.2&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.bed = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.3&apos;]; }
				pid[index].PV1[indexPV1].pendingLocation.facility = {};
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.facility.universalId =  pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.facility.universalIdType =  pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;][&apos;PV1.42.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].pendingLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.4&apos;]; }
					else delete pid[index].PV1[indexPV1].pendingLocation.facility;
				}
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.locationStatus = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.5&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.personLocationType = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.6&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.building = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.7&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.floor = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.8&apos;]; }
				if (pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].pendingLocation.locationDescription = pv1Seg[&apos;PV1.42&apos;][&apos;PV1.42.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].pendingLocation).length == 0) {
					delete pid[index].PV1[indexPV1].pendingLocation;
				}
		
				// PV1.43, priorTemporaryLocation
				pid[index].PV1[indexPV1].priorTemporaryLocation = {};
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.pointOfCare = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.1&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.room = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.2&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.bed = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.3&apos;]; }
				pid[index].PV1[indexPV1].priorTemporaryLocation.facility = {};
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.facility.nameSpaceId =  pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.facility.universalId =  pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.facility.universalIdType =  pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;][&apos;PV1.43.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].priorTemporaryLocation.facility).length == 0) {
					if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.facility.nameSpaceId = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.4&apos;]; }
					else delete pid[index].PV1[indexPV1].priorTemporaryLocation.facility;
				}
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.locationStatus = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.5&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.personLocationType = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.6&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.building = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.7&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.floor = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.8&apos;]; }
				if (pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].priorTemporaryLocation.locationDescription = pv1Seg[&apos;PV1.43&apos;][&apos;PV1.43.9&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].priorTemporaryLocation).length == 0) {
					delete pid[index].PV1[indexPV1].priorTemporaryLocation;
				}
		
				// PV1.44, admitDateTime
				if (pv1Seg[&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].admitDateTime = pv1Seg[&apos;PV1.44&apos;][&apos;PV1.44.1&apos;]; }
		
				// PV1.45, dischargeDateTime
				if (pv1Seg[&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].dischargeDateTime = pv1Seg[&apos;PV1.45&apos;][&apos;PV1.45.1&apos;]; }
		
				// PV1.46, currentPatientBalance
				if (pv1Seg[&apos;PV1.46&apos;][&apos;PV1.46.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].currentPatientBalance = pv1Seg[&apos;PV1.46&apos;][&apos;PV1.46.1&apos;]; }
		
				// PV1.47, totalCharges
				if (pv1Seg[&apos;PV1.47&apos;][&apos;PV1.47.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].totalCharges = pv1Seg[&apos;PV1.47&apos;][&apos;PV1.47.1&apos;]; }
		
				// PV1.48, totalAdjustments
				if (pv1Seg[&apos;PV1.48&apos;][&apos;PV1.48.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].totalAdjustments = pv1Seg[&apos;PV1.48&apos;][&apos;PV1.48.1&apos;]; }
		
				// PV1.49, totalPayments
				if (pv1Seg[&apos;PV1.49&apos;][&apos;PV1.49.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].totalPayments = pv1Seg[&apos;PV1.49&apos;][&apos;PV1.49.1&apos;]; }
		
				// PV1.50, alternateVisitID
				pid[index].PV1[indexPV1].alternateVisitID = {};
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.id = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.1&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.identifierCheckDigit = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.2&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.codeIdentifyingCheckDigitScheme = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.3&apos;]; }
				pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority = {};
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.1&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority.universalId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.2&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority.universalIdType = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;][&apos;PV1.50.4.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority).length == 0) {
					if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority.namespaceId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.4&apos;]; }
					else delete pid[index].PV1[indexPV1].alternateVisitID.assigningAuthority;
				}
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.idTypeCode = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.5&apos;]; }
				pid[index].PV1[indexPV1].alternateVisitID.assigningFacility = {};
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningFacility.namespaceId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.1&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningFacility.universalId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.2&apos;]; }
				if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningFacility.universalIdType = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;][&apos;PV1.50.6.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].alternateVisitID.assigningFacility).length == 0) {
					if (pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].alternateVisitID.assigningFacility.namespaceId = pv1Seg[&apos;PV1.50&apos;][&apos;PV1.50.6&apos;]; }
					else delete pid[index].PV1[indexPV1].alternateVisitID.assigningFacility;
				}
				if (Object.keys(pid[index].PV1[indexPV1].alternateVisitID).length == 0) {
					delete pid[index].PV1[indexPV1].alternateVisitID;
				}
		
				// PV1.51, visitIndicator
				if (pv1Seg[&apos;PV1.51&apos;][&apos;PV1.51.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].visitIndicator = pv1Seg[&apos;PV1.51&apos;][&apos;PV1.51.1&apos;]; }
		
				// PV1.52, otherHealthcareProvider
				pid[index].PV1[indexPV1].otherHealthcareProvider = {};
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.1&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.lastName = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.2&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.firstName = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.3&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.middleInitOrName = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.4&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.suffix = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.5&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.prefix = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.6&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.degree = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.7&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.sourceTable = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.8&apos;]; }
				pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority = {};
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.1&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority.universalId = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.2&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority.universalIdType = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;][&apos;PV1.52.9.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority).length == 0) {
					if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.9&apos;]; }
					else delete pid[index].PV1[indexPV1].otherHealthcareProvider.assigningAuthority;
				}
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.10&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.nameTypeCode = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.10&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.11&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.identifierCheckDigit = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.11&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.12&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.codeIdentifyingCheckDigitScheme = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.12&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.13&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.identifierTypeCode = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.13&apos;]; }
				pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility = {};
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.1&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility.universalId = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.2&apos;]; }
				if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility.universalIdType = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;][&apos;PV1.52.14.3&apos;]; }
				if (Object.keys(pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility).length == 0) {
					if (pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility.id = pv1Seg[&apos;PV1.52&apos;][&apos;PV1.52.14&apos;]; }
					else delete pid[index].PV1[indexPV1].otherHealthcareProvider.assigningFacility;
				}
				if (Object.keys(pid[index].PV1[indexPV1].otherHealthcareProvider).length == 0) {
					delete pid[index].PV1[indexPV1].otherHealthcareProvider;
				}
		
				// clean up PV1 and increment indexPV1
				if (Object.keys(pid[index].PV1[indexPV1]).length == 0) {
					delete pid[index].PV1[indexPV1];
				} else {
					indexPV1++;
				}
			}

			// Clean up the PV1 object if it&apos;s empty
			if (pid[index].PV1[0] == null){
				delete pid[index].PV1;
			}
		}

		// Increment the PID index
		index++;
	}
}

// Optional: save a copy of the completed PID segment for reference later
//channelMap.put(&quot;pid&quot;, pid); // uncomment to save

// If it has content, add the PID segment to the hl7JSON object
if (pid &amp;&amp; Object.keys(pid).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.PID = pid;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>4</sequenceNumber>
          <name>----PV2 (Additional Patient Visit Info) Segment - REQUIRES PV1 MAPPING STEP ABOVE</name>
          <script>// Pull out the PID JSON to embed the PV1 segments in
var pid = JSON.parse($(&apos;hl7JSON&apos;)).content.PID;

// PID iteration, in order to grab related PV1&apos;s
if (msg[&apos;PID&apos;].length() &gt; 0) {

	// PID is required to have a PV1, but if the PID was blank and was removed from the JSON, just create a new one to add the PV1 into
	if (!pid) {
		pid = [{}];
	}

	
	var index = 0;
	for each (seg in msg.PID) {

		// PV1 (PID)
		var pv1Group = getSegmentsAfter(msg,seg,&apos;PV1&apos;,false);
		if (pv1Group.length &gt; 0 &amp;&amp; pid) {
			var indexPV1 = 0;

			// PV1 is required for PV2, so create it if it&apos;s not already present in the PID object
			if (!pid[index].PV1) {
				pid[index].PV1 = [{}];
			}
				
			for each (pv1Seg in pv1Group) {

				// PV2 (PV1) [PID]
				var pv2Group = getSegmentsAfter(msg,pv1Seg,&apos;PV2&apos;,true);
				if (pv2Group.length &gt; 0 &amp;&amp; pid[index].PV1) {
					pid[index].PV1[indexPV1].PV2 = [];
					var indexPV2 = 0;
					for each (pv2Seg in pv2Group) {
						pid[index].PV1[indexPV1].PV2[indexPV2] = {};
		
						// PV2.1, priorPendingLocation
						pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation = {};
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.pointOfCare = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.1&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.room = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.2&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.bed = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.3&apos;]; }
						pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility = {};
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility.nameSpaceId =  pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.1&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility.universalId =  pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.2&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility.universalIdType =  pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.3&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility).length == 0) {
							if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility.nameSpaceId = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;]; }
							else delete pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility;
						}
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.locationStatus = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.5&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.personLocationType = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.6&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.building = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.7&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.floor = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.8&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.locationDescription = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.9&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation;
						}
		
						// PV2.2, accommodationCode
						pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode = {};
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.id = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.1&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.text = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.2&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.codingSystem = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.3&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.altId = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.4&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.altText = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.5&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.altCodingSystem = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.6&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode;
						}
		
						// PV2.3, admitReason
						pid[index].PV1[indexPV1].PV2[indexPV2].admitReason = {};
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.id = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.1&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.text = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.2&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.codingSystem = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.3&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.altId = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.4&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.altText = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.5&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.altCodingSystem = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.6&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].admitReason).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].admitReason;
						}
		
						// PV2.4, transferReason
						pid[index].PV1[indexPV1].PV2[indexPV2].transferReason = {};
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.id = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.1&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.text = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.2&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.codingSystem = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.3&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.altId = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.4&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.altText = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.5&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.altCodingSystem = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.6&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].transferReason).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].transferReason;
						}
		
						// PV2.5, patientValuables
						pid[index].PV1[indexPV1].PV2[indexPV2].patientValuables = [];
						for each (field in pv2Seg[&apos;PV2.5&apos;]) {
							if (field[&apos;PV2.5.1&apos;].toString() != &quot;&quot;) {
								pid[index].PV1[indexPV1].PV2[indexPV2].patientValuables.push(field[&apos;PV2.5.1&apos;]);
							}
						}
						if (pid[index].PV1[indexPV1].PV2[indexPV2].patientValuables.length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].patientValuables;
						}
		
						// PV2.6, patientValuablesLocation
						if (pv2Seg[&apos;PV2.6&apos;][&apos;PV2.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].patientValuablesLocation = pv2Seg[&apos;PV2.6&apos;][&apos;PV2.6.1&apos;]; }
		
						// PV2.7, visitUserCode
						if (pv2Seg[&apos;PV2.7&apos;][&apos;PV2.7.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitUserCode = pv2Seg[&apos;PV2.7&apos;][&apos;PV2.7.1&apos;]; }
						
						// PV2.8, expectedAdmitDateTime
						if (pv2Seg[&apos;PV2.8&apos;][&apos;PV2.8.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedAdmitDateTime = pv2Seg[&apos;PV2.8&apos;][&apos;PV2.8.1&apos;]; }
						
						// PV2.9, expectedDischargeDateTime
						if (pv2Seg[&apos;PV2.9&apos;][&apos;PV2.9.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedDischargeDateTime = pv2Seg[&apos;PV2.9&apos;][&apos;PV2.9.1&apos;]; }
						
						// PV2.10, estimatedLengthInpatientStay
						if (pv2Seg[&apos;PV2.10&apos;][&apos;PV2.10.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].estimatedLengthInpatientStay = pv2Seg[&apos;PV2.10&apos;][&apos;PV2.10.1&apos;]; }
						
						// PV2.11, actualLengthInpatientStay
						if (pv2Seg[&apos;PV2.11&apos;][&apos;PV2.11.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].actualLengthInpatientStay = pv2Seg[&apos;PV2.11&apos;][&apos;PV2.11.1&apos;]; }
						
						// PV2.12, visitDescription
						if (pv2Seg[&apos;PV2.12&apos;][&apos;PV2.12.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitDescription = pv2Seg[&apos;PV2.12&apos;][&apos;PV2.12.1&apos;]; }
						
						// PV2.13, referralSourceCode
						pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode = {};
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.1&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.lastName = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.2&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.firstName = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.3&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.middleInitOrName = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.4&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.suffix = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.5&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.prefix = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.6&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.degree = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.7&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.sourceTable = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.8&apos;]; }
						pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority = {};
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.1&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority.universalId = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.2&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority.universalIdType = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.3&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority).length == 0) {
							if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;]; }
							else delete pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority;
						}
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.10&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.nameTypeCode = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.10&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.11&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.identifierCheckDigit = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.11&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.12&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.codeIdentifyingCheckDigitScheme = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.12&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.13&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.identifierTypeCode = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.13&apos;]; }
						pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility = {};
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.1&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility.universalId = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.2&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility.universalIdType = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.3&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility).length == 0) {
							if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;]; }
							else delete pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility;
						}
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode;
						}
		
						// PV2.14, previousServiceDate
						if (pv2Seg[&apos;PV2.14&apos;][&apos;PV2.14.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].previousServiceDate = pv2Seg[&apos;PV2.14&apos;][&apos;PV2.14.1&apos;]; }
						
						// PV2.15, employmentIllnessRelatedIndicator
						if (pv2Seg[&apos;PV2.15&apos;][&apos;PV2.15.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].employmentIllnessRelatedIndicator = pv2Seg[&apos;PV2.15&apos;][&apos;PV2.15.1&apos;]; }
						
						// PV2.16, purgeStatusCode
						if (pv2Seg[&apos;PV2.16&apos;][&apos;PV2.16.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].purgeStatusCode = pv2Seg[&apos;PV2.16&apos;][&apos;PV2.16.1&apos;]; }
						
						// PV2.17, purgeStatusDate
						if (pv2Seg[&apos;PV2.17&apos;][&apos;PV2.17.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].purgeStatusDate = pv2Seg[&apos;PV2.17&apos;][&apos;PV2.17.1&apos;]; }
						
						// PV2.18, specialProgramCode
						if (pv2Seg[&apos;PV2.18&apos;][&apos;PV2.18.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].specialProgramCode = pv2Seg[&apos;PV2.18&apos;][&apos;PV2.18.1&apos;]; }
						
						// PV2.19, retentionIndicator
						if (pv2Seg[&apos;PV2.19&apos;][&apos;PV2.19.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].retentionIndicator = pv2Seg[&apos;PV2.19&apos;][&apos;PV2.19.1&apos;]; }
						
						// PV2.20, expectedNumInsurancePlans
						if (pv2Seg[&apos;PV2.20&apos;][&apos;PV2.20.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedNumInsurancePlans = pv2Seg[&apos;PV2.20&apos;][&apos;PV2.20.1&apos;]; }
						
						// PV2.21, visitPublicityCode
						if (pv2Seg[&apos;PV2.21&apos;][&apos;PV2.21.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitPublicityCode = pv2Seg[&apos;PV2.21&apos;][&apos;PV2.21.1&apos;]; }
						
						// PV2.22, visitProtectionIndicator
						if (pv2Seg[&apos;PV2.22&apos;][&apos;PV2.22.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitProtectionIndicator = pv2Seg[&apos;PV2.22&apos;][&apos;PV2.22.1&apos;]; }
						
						// PV2.23, clinicOrganizationName
						pid[index].PV1[indexPV1].PV2[indexPV2].clinicOrganizationName = [];
						for each (field in pv2Seg[&apos;PV2.23&apos;]) {
							var block = {};
							if (field[&apos;PV2.23.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;PV2.23.1&apos;]; }
							if (field[&apos;PV2.23.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;PV2.23.2&apos;]; }
							if (field[&apos;PV2.23.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;PV2.23.3&apos;]; }
							if (field[&apos;PV2.23.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV2.23.4&apos;]; }
							if (field[&apos;PV2.23.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV2.23.5&apos;]; }
							block.assigningAuthority = {};
							if (field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.1&apos;]; }
							if (field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.2&apos;]; }
							if (field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.3&apos;]; }
							if (Object.keys(block.assigningAuthority).length == 0) {
								if (field[&apos;PV2.23.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PV2.23.6&apos;]; }
								else delete block.assigningAuthority;
							}
							if (field[&apos;PV2.23.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PV2.23.7&apos;]; }
							block.assigningFacility = {};
							if (field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.1&apos;]; }
							if (field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.2&apos;]; }
							if (field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.3&apos;]; }
							if (Object.keys(block.assigningFacility).length == 0) {
								if (field[&apos;PV2.23.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PV2.23.8&apos;]; }
								else delete block.assigningFacility;
							}
							if (Object.keys(block).length &gt; 0) {
								pid[index].PV1[indexPV1].PV2[indexPV2].clinicOrganizationName.push(block);
							}
						}
						if (pid[index].PV1[indexPV1].PV2[indexPV2].clinicOrganizationName.length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].clinicOrganizationName;
						}
		
						// PV2.24, patientStatusCode
						if (pv2Seg[&apos;PV2.24&apos;][&apos;PV2.24.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].patientStatusCode = pv2Seg[&apos;PV2.24&apos;][&apos;PV2.24.1&apos;]; }
						
						// PV2.25, visitPriorityCode
						if (pv2Seg[&apos;PV2.25&apos;][&apos;PV2.25.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitPriorityCode = pv2Seg[&apos;PV2.25&apos;][&apos;PV2.25.1&apos;]; }
						
						// PV2.26, previousTreatmentDate
						if (pv2Seg[&apos;PV2.26&apos;][&apos;PV2.26.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].previousTreatmentDate = pv2Seg[&apos;PV2.26&apos;][&apos;PV2.26.1&apos;]; }
						
						// PV2.27, expectedDischargeDisposition
						if (pv2Seg[&apos;PV2.27&apos;][&apos;PV2.27.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedDischargeDisposition = pv2Seg[&apos;PV2.27&apos;][&apos;PV2.27.1&apos;]; }
						
						// PV2.28, signatureOnFileDate
						if (pv2Seg[&apos;PV2.28&apos;][&apos;PV2.28.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].signatureOnFileDate = pv2Seg[&apos;PV2.28&apos;][&apos;PV2.28.1&apos;]; }
						
						// PV2.29, firstSimilarIllnessDate
						if (pv2Seg[&apos;PV2.29&apos;][&apos;PV2.29.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].firstSimilarIllnessDate = pv2Seg[&apos;PV2.29&apos;][&apos;PV2.29.1&apos;]; }
						
						// PV2.30, patientChargeAdjustmentCode
						if (pv2Seg[&apos;PV2.30&apos;][&apos;PV2.30.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].patientChargeAdjustmentCode = pv2Seg[&apos;PV2.30&apos;][&apos;PV2.30.1&apos;]; }
						
						// PV2.31, recurringServiceCode
						if (pv2Seg[&apos;PV2.31&apos;][&apos;PV2.31.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].recurringServiceCode = pv2Seg[&apos;PV2.31&apos;][&apos;PV2.31.1&apos;]; }
						
						// PV2.32, billingMediaCode
						if (pv2Seg[&apos;PV2.32&apos;][&apos;PV2.32.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].billingMediaCode = pv2Seg[&apos;PV2.32&apos;][&apos;PV2.32.1&apos;]; }
						
						// PV2.33, expectedSurgeryDateTime
						if (pv2Seg[&apos;PV2.33&apos;][&apos;PV2.33.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedSurgeryDateTime = pv2Seg[&apos;PV2.33&apos;][&apos;PV2.33.1&apos;]; }
						
						// PV2.34, militaryPartnershipCode
						if (pv2Seg[&apos;PV2.34&apos;][&apos;PV2.34.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].militaryPartnershipCode = pv2Seg[&apos;PV2.34&apos;][&apos;PV2.34.1&apos;]; }
						
						// PV2.35, militaryNonAvailabilityCode
						if (pv2Seg[&apos;PV2.35&apos;][&apos;PV2.35.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].militaryNonAvailabilityCode = pv2Seg[&apos;PV2.35&apos;][&apos;PV2.35.1&apos;]; }
						
						// PV2.36, newbornBabyIndicator
						if (pv2Seg[&apos;PV2.36&apos;][&apos;PV2.36.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].newbornBabyIndicator = pv2Seg[&apos;PV2.36&apos;][&apos;PV2.36.1&apos;]; }
						
						// PV2.37, babyDetainedIndicator
						if (pv2Seg[&apos;PV2.37&apos;][&apos;PV2.37.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].babyDetainedIndicator = pv2Seg[&apos;PV2.37&apos;][&apos;PV2.37.1&apos;]; }
						
						// clean up PV2 and increment index
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2]).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2];
						} else {
							indexPV2++;
						}
					}
		
					// Clean up the PV2 object if it&apos;s empty
					if (pid[index].PV1[indexPV1].PV2[0] == null){
						delete pid[index].PV1[indexPV1].PV2;
					}
				}
			}

			// Increment the PV1 index
			indexPV1++;
		}

		// Increment the PID index
		index++;
	}
}

// Optional: save a copy of the completed PID segment for reference later
//channelMap.put(&quot;pid&quot;, pid); // uncomment to save

// Re-add the PID segment to the hl7JSON object
if (pid &amp;&amp; Object.keys(pid).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.PID = pid;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// Pull out the PID JSON to embed the PV1 segments in
var pid = JSON.parse($(&apos;hl7JSON&apos;)).content.PID;

// PID iteration, in order to grab related PV1&apos;s
if (msg[&apos;PID&apos;].length() &gt; 0) {

	// PID is required to have a PV1, but if the PID was blank and was removed from the JSON, just create a new one to add the PV1 into
	if (!pid) {
		pid = [{}];
	}

	
	var index = 0;
	for each (seg in msg.PID) {

		// PV1 (PID)
		var pv1Group = getSegmentsAfter(msg,seg,&apos;PV1&apos;,false);
		if (pv1Group.length &gt; 0 &amp;&amp; pid) {
			var indexPV1 = 0;

			// PV1 is required for PV2, so create it if it&apos;s not already present in the PID object
			if (!pid[index].PV1) {
				pid[index].PV1 = [{}];
			}
				
			for each (pv1Seg in pv1Group) {

				// PV2 (PV1) [PID]
				var pv2Group = getSegmentsAfter(msg,pv1Seg,&apos;PV2&apos;,true);
				if (pv2Group.length &gt; 0 &amp;&amp; pid[index].PV1) {
					pid[index].PV1[indexPV1].PV2 = [];
					var indexPV2 = 0;
					for each (pv2Seg in pv2Group) {
						pid[index].PV1[indexPV1].PV2[indexPV2] = {};
		
						// PV2.1, priorPendingLocation
						pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation = {};
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.pointOfCare = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.1&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.room = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.2&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.bed = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.3&apos;]; }
						pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility = {};
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility.nameSpaceId =  pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.1&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility.universalId =  pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.2&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility.universalIdType =  pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;][&apos;PV2.1.4.3&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility).length == 0) {
							if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility.nameSpaceId = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.4&apos;]; }
							else delete pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.facility;
						}
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.locationStatus = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.5&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.personLocationType = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.6&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.building = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.7&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.floor = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.8&apos;]; }
						if (pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation.locationDescription = pv2Seg[&apos;PV2.1&apos;][&apos;PV2.1.9&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].priorPendingLocation;
						}
		
						// PV2.2, accommodationCode
						pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode = {};
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.id = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.1&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.text = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.2&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.codingSystem = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.3&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.altId = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.4&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.altText = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.5&apos;]; }
						if (pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode.altCodingSystem = pv2Seg[&apos;PV2.2&apos;][&apos;PV2.2.6&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].accommodationCode;
						}
		
						// PV2.3, admitReason
						pid[index].PV1[indexPV1].PV2[indexPV2].admitReason = {};
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.id = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.1&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.text = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.2&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.codingSystem = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.3&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.altId = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.4&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.altText = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.5&apos;]; }
						if (pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].admitReason.altCodingSystem = pv2Seg[&apos;PV2.3&apos;][&apos;PV2.3.6&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].admitReason).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].admitReason;
						}
		
						// PV2.4, transferReason
						pid[index].PV1[indexPV1].PV2[indexPV2].transferReason = {};
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.id = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.1&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.text = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.2&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.codingSystem = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.3&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.altId = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.4&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.altText = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.5&apos;]; }
						if (pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].transferReason.altCodingSystem = pv2Seg[&apos;PV2.4&apos;][&apos;PV2.4.6&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].transferReason).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].transferReason;
						}
		
						// PV2.5, patientValuables
						pid[index].PV1[indexPV1].PV2[indexPV2].patientValuables = [];
						for each (field in pv2Seg[&apos;PV2.5&apos;]) {
							if (field[&apos;PV2.5.1&apos;].toString() != &quot;&quot;) {
								pid[index].PV1[indexPV1].PV2[indexPV2].patientValuables.push(field[&apos;PV2.5.1&apos;]);
							}
						}
						if (pid[index].PV1[indexPV1].PV2[indexPV2].patientValuables.length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].patientValuables;
						}
		
						// PV2.6, patientValuablesLocation
						if (pv2Seg[&apos;PV2.6&apos;][&apos;PV2.6.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].patientValuablesLocation = pv2Seg[&apos;PV2.6&apos;][&apos;PV2.6.1&apos;]; }
		
						// PV2.7, visitUserCode
						if (pv2Seg[&apos;PV2.7&apos;][&apos;PV2.7.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitUserCode = pv2Seg[&apos;PV2.7&apos;][&apos;PV2.7.1&apos;]; }
						
						// PV2.8, expectedAdmitDateTime
						if (pv2Seg[&apos;PV2.8&apos;][&apos;PV2.8.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedAdmitDateTime = pv2Seg[&apos;PV2.8&apos;][&apos;PV2.8.1&apos;]; }
						
						// PV2.9, expectedDischargeDateTime
						if (pv2Seg[&apos;PV2.9&apos;][&apos;PV2.9.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedDischargeDateTime = pv2Seg[&apos;PV2.9&apos;][&apos;PV2.9.1&apos;]; }
						
						// PV2.10, estimatedLengthInpatientStay
						if (pv2Seg[&apos;PV2.10&apos;][&apos;PV2.10.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].estimatedLengthInpatientStay = pv2Seg[&apos;PV2.10&apos;][&apos;PV2.10.1&apos;]; }
						
						// PV2.11, actualLengthInpatientStay
						if (pv2Seg[&apos;PV2.11&apos;][&apos;PV2.11.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].actualLengthInpatientStay = pv2Seg[&apos;PV2.11&apos;][&apos;PV2.11.1&apos;]; }
						
						// PV2.12, visitDescription
						if (pv2Seg[&apos;PV2.12&apos;][&apos;PV2.12.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitDescription = pv2Seg[&apos;PV2.12&apos;][&apos;PV2.12.1&apos;]; }
						
						// PV2.13, referralSourceCode
						pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode = {};
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.1&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.lastName = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.2&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.firstName = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.3&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.4&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.middleInitOrName = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.4&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.5&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.suffix = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.5&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.6&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.prefix = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.6&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.7&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.degree = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.7&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.8&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.sourceTable = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.8&apos;]; }
						pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority = {};
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.1&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority.universalId = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.2&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority.universalIdType = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;][&apos;PV2.13.9.3&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority).length == 0) {
							if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.9&apos;]; }
							else delete pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningAuthority;
						}
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.10&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.nameTypeCode = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.10&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.11&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.identifierCheckDigit = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.11&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.12&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.codeIdentifyingCheckDigitScheme = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.12&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.13&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.identifierTypeCode = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.13&apos;]; }
						pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility = {};
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.1&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.2&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility.universalId = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.2&apos;]; }
						if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.3&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility.universalIdType = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;][&apos;PV2.13.14.3&apos;]; }
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility).length == 0) {
							if (pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility.id = pv2Seg[&apos;PV2.13&apos;][&apos;PV2.13.14&apos;]; }
							else delete pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode.assigningFacility;
						}
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].referralSourceCode;
						}
		
						// PV2.14, previousServiceDate
						if (pv2Seg[&apos;PV2.14&apos;][&apos;PV2.14.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].previousServiceDate = pv2Seg[&apos;PV2.14&apos;][&apos;PV2.14.1&apos;]; }
						
						// PV2.15, employmentIllnessRelatedIndicator
						if (pv2Seg[&apos;PV2.15&apos;][&apos;PV2.15.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].employmentIllnessRelatedIndicator = pv2Seg[&apos;PV2.15&apos;][&apos;PV2.15.1&apos;]; }
						
						// PV2.16, purgeStatusCode
						if (pv2Seg[&apos;PV2.16&apos;][&apos;PV2.16.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].purgeStatusCode = pv2Seg[&apos;PV2.16&apos;][&apos;PV2.16.1&apos;]; }
						
						// PV2.17, purgeStatusDate
						if (pv2Seg[&apos;PV2.17&apos;][&apos;PV2.17.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].purgeStatusDate = pv2Seg[&apos;PV2.17&apos;][&apos;PV2.17.1&apos;]; }
						
						// PV2.18, specialProgramCode
						if (pv2Seg[&apos;PV2.18&apos;][&apos;PV2.18.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].specialProgramCode = pv2Seg[&apos;PV2.18&apos;][&apos;PV2.18.1&apos;]; }
						
						// PV2.19, retentionIndicator
						if (pv2Seg[&apos;PV2.19&apos;][&apos;PV2.19.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].retentionIndicator = pv2Seg[&apos;PV2.19&apos;][&apos;PV2.19.1&apos;]; }
						
						// PV2.20, expectedNumInsurancePlans
						if (pv2Seg[&apos;PV2.20&apos;][&apos;PV2.20.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedNumInsurancePlans = pv2Seg[&apos;PV2.20&apos;][&apos;PV2.20.1&apos;]; }
						
						// PV2.21, visitPublicityCode
						if (pv2Seg[&apos;PV2.21&apos;][&apos;PV2.21.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitPublicityCode = pv2Seg[&apos;PV2.21&apos;][&apos;PV2.21.1&apos;]; }
						
						// PV2.22, visitProtectionIndicator
						if (pv2Seg[&apos;PV2.22&apos;][&apos;PV2.22.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitProtectionIndicator = pv2Seg[&apos;PV2.22&apos;][&apos;PV2.22.1&apos;]; }
						
						// PV2.23, clinicOrganizationName
						pid[index].PV1[indexPV1].PV2[indexPV2].clinicOrganizationName = [];
						for each (field in pv2Seg[&apos;PV2.23&apos;]) {
							var block = {};
							if (field[&apos;PV2.23.1&apos;].toString() != &quot;&quot;) { block.organizationName = field[&apos;PV2.23.1&apos;]; }
							if (field[&apos;PV2.23.2&apos;].toString() != &quot;&quot;) { block.organizationNameTypeCode = field[&apos;PV2.23.2&apos;]; }
							if (field[&apos;PV2.23.3&apos;].toString() != &quot;&quot;) { block.idNumber = field[&apos;PV2.23.3&apos;]; }
							if (field[&apos;PV2.23.4&apos;].toString() != &quot;&quot;) { block.identifierCheckDigit = field[&apos;PV2.23.4&apos;]; }
							if (field[&apos;PV2.23.5&apos;].toString() != &quot;&quot;) { block.codeIdentifyingCheckDigitScheme = field[&apos;PV2.23.5&apos;]; }
							block.assigningAuthority = {};
							if (field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.1&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.1&apos;]; }
							if (field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.2&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalId = field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.2&apos;]; }
							if (field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.3&apos;].toString() != &quot;&quot;) { block.assigningAuthority.universalIdType = field[&apos;PV2.23.6&apos;][&apos;PV2.23.6.3&apos;]; }
							if (Object.keys(block.assigningAuthority).length == 0) {
								if (field[&apos;PV2.23.6&apos;].toString() != &quot;&quot;) { block.assigningAuthority.namespaceId = field[&apos;PV2.23.6&apos;]; }
								else delete block.assigningAuthority;
							}
							if (field[&apos;PV2.23.7&apos;].toString() != &quot;&quot;) { block.idTypeCode = field[&apos;PV2.23.7&apos;]; }
							block.assigningFacility = {};
							if (field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.1&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.1&apos;]; }
							if (field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.2&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalId = field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.2&apos;]; }
							if (field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.3&apos;].toString() != &quot;&quot;) { block.assigningFacility.universalIdType = field[&apos;PV2.23.8&apos;][&apos;PV2.23.8.3&apos;]; }
							if (Object.keys(block.assigningFacility).length == 0) {
								if (field[&apos;PV2.23.8&apos;].toString() != &quot;&quot;) { block.assigningFacility.namespaceId = field[&apos;PV2.23.8&apos;]; }
								else delete block.assigningFacility;
							}
							if (Object.keys(block).length &gt; 0) {
								pid[index].PV1[indexPV1].PV2[indexPV2].clinicOrganizationName.push(block);
							}
						}
						if (pid[index].PV1[indexPV1].PV2[indexPV2].clinicOrganizationName.length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2].clinicOrganizationName;
						}
		
						// PV2.24, patientStatusCode
						if (pv2Seg[&apos;PV2.24&apos;][&apos;PV2.24.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].patientStatusCode = pv2Seg[&apos;PV2.24&apos;][&apos;PV2.24.1&apos;]; }
						
						// PV2.25, visitPriorityCode
						if (pv2Seg[&apos;PV2.25&apos;][&apos;PV2.25.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].visitPriorityCode = pv2Seg[&apos;PV2.25&apos;][&apos;PV2.25.1&apos;]; }
						
						// PV2.26, previousTreatmentDate
						if (pv2Seg[&apos;PV2.26&apos;][&apos;PV2.26.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].previousTreatmentDate = pv2Seg[&apos;PV2.26&apos;][&apos;PV2.26.1&apos;]; }
						
						// PV2.27, expectedDischargeDisposition
						if (pv2Seg[&apos;PV2.27&apos;][&apos;PV2.27.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedDischargeDisposition = pv2Seg[&apos;PV2.27&apos;][&apos;PV2.27.1&apos;]; }
						
						// PV2.28, signatureOnFileDate
						if (pv2Seg[&apos;PV2.28&apos;][&apos;PV2.28.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].signatureOnFileDate = pv2Seg[&apos;PV2.28&apos;][&apos;PV2.28.1&apos;]; }
						
						// PV2.29, firstSimilarIllnessDate
						if (pv2Seg[&apos;PV2.29&apos;][&apos;PV2.29.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].firstSimilarIllnessDate = pv2Seg[&apos;PV2.29&apos;][&apos;PV2.29.1&apos;]; }
						
						// PV2.30, patientChargeAdjustmentCode
						if (pv2Seg[&apos;PV2.30&apos;][&apos;PV2.30.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].patientChargeAdjustmentCode = pv2Seg[&apos;PV2.30&apos;][&apos;PV2.30.1&apos;]; }
						
						// PV2.31, recurringServiceCode
						if (pv2Seg[&apos;PV2.31&apos;][&apos;PV2.31.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].recurringServiceCode = pv2Seg[&apos;PV2.31&apos;][&apos;PV2.31.1&apos;]; }
						
						// PV2.32, billingMediaCode
						if (pv2Seg[&apos;PV2.32&apos;][&apos;PV2.32.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].billingMediaCode = pv2Seg[&apos;PV2.32&apos;][&apos;PV2.32.1&apos;]; }
						
						// PV2.33, expectedSurgeryDateTime
						if (pv2Seg[&apos;PV2.33&apos;][&apos;PV2.33.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].expectedSurgeryDateTime = pv2Seg[&apos;PV2.33&apos;][&apos;PV2.33.1&apos;]; }
						
						// PV2.34, militaryPartnershipCode
						if (pv2Seg[&apos;PV2.34&apos;][&apos;PV2.34.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].militaryPartnershipCode = pv2Seg[&apos;PV2.34&apos;][&apos;PV2.34.1&apos;]; }
						
						// PV2.35, militaryNonAvailabilityCode
						if (pv2Seg[&apos;PV2.35&apos;][&apos;PV2.35.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].militaryNonAvailabilityCode = pv2Seg[&apos;PV2.35&apos;][&apos;PV2.35.1&apos;]; }
						
						// PV2.36, newbornBabyIndicator
						if (pv2Seg[&apos;PV2.36&apos;][&apos;PV2.36.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].newbornBabyIndicator = pv2Seg[&apos;PV2.36&apos;][&apos;PV2.36.1&apos;]; }
						
						// PV2.37, babyDetainedIndicator
						if (pv2Seg[&apos;PV2.37&apos;][&apos;PV2.37.1&apos;].toString() != &quot;&quot;) { pid[index].PV1[indexPV1].PV2[indexPV2].babyDetainedIndicator = pv2Seg[&apos;PV2.37&apos;][&apos;PV2.37.1&apos;]; }
						
						// clean up PV2 and increment index
						if (Object.keys(pid[index].PV1[indexPV1].PV2[indexPV2]).length == 0) {
							delete pid[index].PV1[indexPV1].PV2[indexPV2];
						} else {
							indexPV2++;
						}
					}
		
					// Clean up the PV2 object if it&apos;s empty
					if (pid[index].PV1[indexPV1].PV2[0] == null){
						delete pid[index].PV1[indexPV1].PV2;
					}
				}
			}

			// Increment the PV1 index
			indexPV1++;
		}

		// Increment the PID index
		index++;
	}
}

// Optional: save a copy of the completed PID segment for reference later
//channelMap.put(&quot;pid&quot;, pid); // uncomment to save

// Re-add the PID segment to the hl7JSON object
if (pid &amp;&amp; Object.keys(pid).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.PID = pid;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>5</sequenceNumber>
          <name>ORC (Common Order) Segment</name>
          <script>// ORC
var orc;
if (msg[&apos;ORC&apos;].length() &gt; 0) {
	orc = [];
	var index = 0;
	for each (seg in msg.ORC) {
		orc[index] = {};

		// ORC.1, orderControl
		if (seg[&apos;ORC.1&apos;][&apos;ORC.1.1&apos;].toString() != &quot;&quot;) { orc[index].orderControl = seg[&apos;ORC.1&apos;][&apos;ORC.1.1&apos;]; }

		// ORC.2, placerOrderNumber
		orc[index].placerOrderNumber = {};
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;].toString() != &quot;&quot;) { orc[index].placerOrderNumber.id = seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;].toString() != &quot;&quot;) { orc[index].placerOrderNumber.namespaceId = seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;].toString() != &quot;&quot;) { orc[index].placerOrderNumber.universalId = seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;].toString() != &quot;&quot;) { orc[index].placerOrderNumber.universalIdType = seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;]; }
		if (Object.keys(orc[index].placerOrderNumber).length == 0) {
			delete orc[index].placerOrderNumber;
		}

		// ORC.3, fillerOrderNumber
		orc[index].fillerOrderNumber = {};
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;].toString() != &quot;&quot;) { orc[index].fillerOrderNumber.id = seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;].toString() != &quot;&quot;) { orc[index].fillerOrderNumber.namespaceId = seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;].toString() != &quot;&quot;) { orc[index].fillerOrderNumber.universalId = seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;].toString() != &quot;&quot;) { orc[index].fillerOrderNumber.universalIdType = seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;]; }
		if (Object.keys(orc[index].fillerOrderNumber).length == 0) {
			delete orc[index].fillerOrderNumber;
		}

		// ORC.4, placerGroupNumber
		orc[index].placerGroupNumber = {};
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;].toString() != &quot;&quot;) { orc[index].placerGroupNumber.id = seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;].toString() != &quot;&quot;) { orc[index].placerGroupNumber.namespaceId = seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;].toString() != &quot;&quot;) { orc[index].placerGroupNumber.universalId = seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;].toString() != &quot;&quot;) { orc[index].placerGroupNumber.universalIdType = seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;]; }
		if (Object.keys(orc[index].placerGroupNumber).length == 0) {
			delete orc[index].placerGroupNumber;
		}

		// ORC.5, orderStatus
		if (seg[&apos;ORC.5&apos;][&apos;ORC.5.1&apos;].toString() != &quot;&quot;) { orc[index].orderStatus = seg[&apos;ORC.5&apos;][&apos;ORC.5.1&apos;]; }

		// ORC.6, responseFlag
		if (seg[&apos;ORC.6&apos;][&apos;ORC.6.1&apos;].toString() != &quot;&quot;) { orc[index].responseFlag = seg[&apos;ORC.6&apos;][&apos;ORC.6.1&apos;]; }

		// ORC.7, timingQuantity
		orc[index].timingQuantity = {};
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.1&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.quantity = seg[&apos;ORC.7&apos;][&apos;ORC.7.1&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.2&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.interval = seg[&apos;ORC.7&apos;][&apos;ORC.7.2&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.3&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.duration = seg[&apos;ORC.7&apos;][&apos;ORC.7.3&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.4&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.startDateTime = seg[&apos;ORC.7&apos;][&apos;ORC.7.4&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.5&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.endDateTime = seg[&apos;ORC.7&apos;][&apos;ORC.7.5&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.6&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.priority = seg[&apos;ORC.7&apos;][&apos;ORC.7.6&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.7&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.condition = seg[&apos;ORC.7&apos;][&apos;ORC.7.7&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.8&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.text = seg[&apos;ORC.7&apos;][&apos;ORC.7.8&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.9&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.conjunction = seg[&apos;ORC.7&apos;][&apos;ORC.7.9&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.10&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.orderSequencing = seg[&apos;ORC.7&apos;][&apos;ORC.7.10&apos;]; }
		if (Object.keys(orc[index].timingQuantity).length == 0) {
			delete orc[index].timingQuantity;
		}

		// ORC.8, parentOrder
		orc[index].parentOrder = {};
		orc[index].parentOrder.parentsPlacerOrderNumber = {};
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.1&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.id = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.1&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.2&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.namespaceId = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.2&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.3&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.universalId = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.3&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.4&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.universalIdType = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.4&apos;]; }
		if (Object.keys(orc[index].parentOrder.parentsPlacerOrderNumber).length == 0) {
			if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.id = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;]; }
			else delete orc[index].parentOrder.parentsPlacerOrderNumber;
		}
		orc[index].parentOrder.parentsFillerOrderNumber = {};
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.1&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.id = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.1&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.2&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.namespaceId = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.2&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.3&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.universalId = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.3&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.4&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.universalIdType = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.4&apos;]; }
		if (Object.keys(orc[index].parentOrder.parentsFillerOrderNumber).length == 0) {
			if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.id = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;]; }
			else delete orc[index].parentOrder.parentsFillerOrderNumber;
		}
		if (Object.keys(orc[index].parentOrder).length == 0) {
			delete orc[index].parentOrder;
		}

		// ORC.9, transactionDateTime
		if (seg[&apos;ORC.9&apos;][&apos;ORC.9.1&apos;].toString() != &quot;&quot;) { orc[index].transactionDateTime = seg[&apos;ORC.9&apos;][&apos;ORC.9.1&apos;]; }

		// ORC.10, enteredBy
		orc[index].enteredBy = {};
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.1&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.1&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.2&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.lastName = seg[&apos;ORC.10&apos;][&apos;ORC.10.2&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.3&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.firstName = seg[&apos;ORC.10&apos;][&apos;ORC.10.3&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.4&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.middleInitOrName = seg[&apos;ORC.10&apos;][&apos;ORC.10.4&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.5&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.suffix = seg[&apos;ORC.10&apos;][&apos;ORC.10.5&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.6&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.prefix = seg[&apos;ORC.10&apos;][&apos;ORC.10.6&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.7&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.degree = seg[&apos;ORC.10&apos;][&apos;ORC.10.7&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.8&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.sourceTable = seg[&apos;ORC.10&apos;][&apos;ORC.10.8&apos;]; }
		orc[index].enteredBy.assigningAuthority = {};
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.1&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningAuthority.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.1&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.2&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningAuthority.universalId = seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.2&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.3&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningAuthority.universalIdType = seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.3&apos;]; }
		if (Object.keys(orc[index].enteredBy.assigningAuthority).length == 0) {
			if (seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningAuthority.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;]; }
			else delete orc[index].enteredBy.assigningAuthority;
		}
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.10&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.nameTypeCode = seg[&apos;ORC.10&apos;][&apos;ORC.10.10&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.11&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.identifierCheckDigit = seg[&apos;ORC.10&apos;][&apos;ORC.10.11&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.12&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.codeIdentifyingCheckDigitScheme = seg[&apos;ORC.10&apos;][&apos;ORC.10.12&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.13&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.identifierTypeCode = seg[&apos;ORC.10&apos;][&apos;ORC.10.13&apos;]; }
		orc[index].enteredBy.assigningFacility = {};
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.1&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningFacility.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.1&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.2&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningFacility.universalId = seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.2&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.3&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningFacility.universalIdType = seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.3&apos;]; }
		if (Object.keys(orc[index].enteredBy.assigningFacility).length == 0) {
			if (seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningFacility.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;]; }
			else delete orc[index].enteredBy.assigningFacility;
		}
		if (Object.keys(orc[index].enteredBy).length == 0) {
			delete orc[index].enteredBy;
		}

		// ORC.11, verifiedBy
		orc[index].verifiedBy = {};
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.1&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.1&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.2&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.lastName = seg[&apos;ORC.11&apos;][&apos;ORC.11.2&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.3&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.firstName = seg[&apos;ORC.11&apos;][&apos;ORC.11.3&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.4&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.middleInitOrName = seg[&apos;ORC.11&apos;][&apos;ORC.11.4&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.5&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.suffix = seg[&apos;ORC.11&apos;][&apos;ORC.11.5&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.6&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.prefix = seg[&apos;ORC.11&apos;][&apos;ORC.11.6&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.7&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.degree = seg[&apos;ORC.11&apos;][&apos;ORC.11.7&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.8&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.sourceTable = seg[&apos;ORC.11&apos;][&apos;ORC.11.8&apos;]; }
		orc[index].verifiedBy.assigningAuthority = {};
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.1&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningAuthority.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.1&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.2&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningAuthority.universalId = seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.2&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.3&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningAuthority.universalIdType = seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.3&apos;]; }
		if (Object.keys(orc[index].verifiedBy.assigningAuthority).length == 0) {
			if (seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningAuthority.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;]; }
			else delete orc[index].verifiedBy.assigningAuthority;
		}
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.10&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.nameTypeCode = seg[&apos;ORC.11&apos;][&apos;ORC.11.10&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.11&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.identifierCheckDigit = seg[&apos;ORC.11&apos;][&apos;ORC.11.11&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.12&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.codeIdentifyingCheckDigitScheme = seg[&apos;ORC.11&apos;][&apos;ORC.11.12&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.13&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.identifierTypeCode = seg[&apos;ORC.11&apos;][&apos;ORC.11.13&apos;]; }
		orc[index].verifiedBy.assigningFacility = {};
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.1&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningFacility.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.1&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.2&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningFacility.universalId = seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.2&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.3&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningFacility.universalIdType = seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.3&apos;]; }
		if (Object.keys(orc[index].verifiedBy.assigningFacility).length == 0) {
			if (seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningFacility.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;]; }
			else delete orc[index].verifiedBy.assigningFacility;
		}
		if (Object.keys(orc[index].verifiedBy).length == 0) {
			delete orc[index].verifiedBy;
		}

		// ORC.12, orderingProvider
		orc[index].orderingProvider = {};
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.1&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.1&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.2&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.lastName = seg[&apos;ORC.12&apos;][&apos;ORC.12.2&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.3&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.firstName = seg[&apos;ORC.12&apos;][&apos;ORC.12.3&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.4&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.middleInitOrName = seg[&apos;ORC.12&apos;][&apos;ORC.12.4&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.5&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.suffix = seg[&apos;ORC.12&apos;][&apos;ORC.12.5&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.6&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.prefix = seg[&apos;ORC.12&apos;][&apos;ORC.12.6&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.7&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.degree = seg[&apos;ORC.12&apos;][&apos;ORC.12.7&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.8&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.sourceTable = seg[&apos;ORC.12&apos;][&apos;ORC.12.8&apos;]; }
		orc[index].orderingProvider.assigningAuthority = {};
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.1&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningAuthority.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.1&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.2&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningAuthority.universalId = seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.2&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.3&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningAuthority.universalIdType = seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.3&apos;]; }
		if (Object.keys(orc[index].orderingProvider.assigningAuthority).length == 0) {
			if (seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningAuthority.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;]; }
			else delete orc[index].orderingProvider.assigningAuthority;
		}
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.10&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.nameTypeCode = seg[&apos;ORC.12&apos;][&apos;ORC.12.10&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.11&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.identifierCheckDigit = seg[&apos;ORC.12&apos;][&apos;ORC.12.11&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.12&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.codeIdentifyingCheckDigitScheme = seg[&apos;ORC.12&apos;][&apos;ORC.12.12&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.13&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.identifierTypeCode = seg[&apos;ORC.12&apos;][&apos;ORC.12.13&apos;]; }
		orc[index].orderingProvider.assigningFacility = {};
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.1&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningFacility.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.1&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.2&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningFacility.universalId = seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.2&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.3&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningFacility.universalIdType = seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.3&apos;]; }
		if (Object.keys(orc[index].orderingProvider.assigningFacility).length == 0) {
			if (seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningFacility.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;]; }
			else delete orc[index].orderingProvider.assigningFacility;
		}
		if (Object.keys(orc[index].orderingProvider).length == 0) {
			delete orc[index].orderingProvider;
		}

		// ORC.13, enterersLocation
		orc[index].enterersLocation = {};
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.1&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.pointOfCare = seg[&apos;ORC.13&apos;][&apos;ORC.13.1&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.2&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.room = seg[&apos;ORC.13&apos;][&apos;ORC.13.2&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.3&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.bed = seg[&apos;ORC.13&apos;][&apos;ORC.13.3&apos;]; }
		orc[index].enterersLocation.facility = {};
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.1&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.facility.nameSpaceId =  seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.1&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.2&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.facility.universalId =  seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.2&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.3&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.facility.universalIdType =  seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.3&apos;]; }
		if (Object.keys(orc[index].enterersLocation.facility).length == 0) {
			if (seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.facility.nameSpaceId = seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;]; }
			else delete orc[index].enterersLocation.facility;
		}
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.5&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.locationStatus = seg[&apos;ORC.13&apos;][&apos;ORC.13.5&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.6&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.personLocationType = seg[&apos;ORC.13&apos;][&apos;ORC.13.6&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.7&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.building = seg[&apos;ORC.13&apos;][&apos;ORC.13.7&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.8&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.floor = seg[&apos;ORC.13&apos;][&apos;ORC.13.8&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.9&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.locationDescription = seg[&apos;ORC.13&apos;][&apos;ORC.13.9&apos;]; }
		if (Object.keys(orc[index].enterersLocation).length == 0) {
			delete orc[index].enterersLocation;
		}

		// ORC.14, callBackPhoneNumber
		orc[index].callBackPhoneNumber = [];
		for each (field in seg[&apos;ORC.14&apos;]) {
			var block = {};
			if (field[&apos;ORC.14.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;ORC.14.1&apos;]; }
			if (field[&apos;ORC.14.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;ORC.14.2&apos;]; }
			if (field[&apos;ORC.14.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;ORC.14.3&apos;]; }
			if (field[&apos;ORC.14.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;ORC.14.4&apos;]; }
			if (field[&apos;ORC.14.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;ORC.14.5&apos;]; }
			if (field[&apos;ORC.14.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;ORC.14.6&apos;]; }
			if (field[&apos;ORC.14.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;ORC.14.7&apos;]; }
			if (field[&apos;ORC.14.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;ORC.14.8&apos;]; }
			if (field[&apos;ORC.14.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;ORC.14.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				orc[index].callBackPhoneNumber.push(block);
			}
		}
		if (orc[index].callBackPhoneNumber.length == 0) {
			delete orc[index].callBackPhoneNumber;
		}

		// ORC.15, orderEffectiveDateTime
		if (seg[&apos;ORC.15&apos;][&apos;ORC.15.1&apos;].toString() != &quot;&quot;) { orc[index].orderEffectiveDateTime = seg[&apos;ORC.15&apos;][&apos;ORC.15.1&apos;]; }

		// ORC.16, orderControlCodeReason
		orc[index].orderControlCodeReason = {};
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.1&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.id = seg[&apos;ORC.16&apos;][&apos;ORC.16.1&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.2&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.text = seg[&apos;ORC.16&apos;][&apos;ORC.16.2&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.3&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.codingSystem = seg[&apos;ORC.16&apos;][&apos;ORC.16.3&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.4&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.altId = seg[&apos;ORC.16&apos;][&apos;ORC.16.4&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.5&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.altText = seg[&apos;ORC.16&apos;][&apos;ORC.16.5&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.6&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.altCodingSystem = seg[&apos;ORC.16&apos;][&apos;ORC.16.6&apos;]; }
		if (Object.keys(orc[index].orderControlCodeReason).length == 0) {
			delete orc[index].orderControlCodeReason;
		}

		// ORC.17, enteringOrganization
		orc[index].enteringOrganization = {};
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.1&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.id = seg[&apos;ORC.17&apos;][&apos;ORC.17.1&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.2&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.text = seg[&apos;ORC.17&apos;][&apos;ORC.17.2&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.3&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.codingSystem = seg[&apos;ORC.17&apos;][&apos;ORC.17.3&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.4&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.altId = seg[&apos;ORC.17&apos;][&apos;ORC.17.4&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.5&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.altText = seg[&apos;ORC.17&apos;][&apos;ORC.17.5&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.6&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.altCodingSystem = seg[&apos;ORC.17&apos;][&apos;ORC.17.6&apos;]; }
		if (Object.keys(orc[index].enteringOrganization).length == 0) {
			delete orc[index].enteringOrganization;
		}

		// ORC.18, enteringDevice
		orc[index].enteringDevice = {};
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.1&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.id = seg[&apos;ORC.18&apos;][&apos;ORC.18.1&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.2&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.text = seg[&apos;ORC.18&apos;][&apos;ORC.18.2&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.3&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.codingSystem = seg[&apos;ORC.18&apos;][&apos;ORC.18.3&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.4&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.altId = seg[&apos;ORC.18&apos;][&apos;ORC.18.4&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.5&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.altText = seg[&apos;ORC.18&apos;][&apos;ORC.18.5&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.6&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.altCodingSystem = seg[&apos;ORC.18&apos;][&apos;ORC.18.6&apos;]; }
		if (Object.keys(orc[index].enteringDevice).length == 0) {
			delete orc[index].enteringDevice;
		}

		// ORC.19, actionBy
		orc[index].actionBy = {};
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.1&apos;].toString() != &quot;&quot;) { orc[index].actionBy.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.1&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.2&apos;].toString() != &quot;&quot;) { orc[index].actionBy.lastName = seg[&apos;ORC.19&apos;][&apos;ORC.19.2&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.3&apos;].toString() != &quot;&quot;) { orc[index].actionBy.firstName = seg[&apos;ORC.19&apos;][&apos;ORC.19.3&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.4&apos;].toString() != &quot;&quot;) { orc[index].actionBy.middleInitOrName = seg[&apos;ORC.19&apos;][&apos;ORC.19.4&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.5&apos;].toString() != &quot;&quot;) { orc[index].actionBy.suffix = seg[&apos;ORC.19&apos;][&apos;ORC.19.5&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.6&apos;].toString() != &quot;&quot;) { orc[index].actionBy.prefix = seg[&apos;ORC.19&apos;][&apos;ORC.19.6&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.7&apos;].toString() != &quot;&quot;) { orc[index].actionBy.degree = seg[&apos;ORC.19&apos;][&apos;ORC.19.7&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.8&apos;].toString() != &quot;&quot;) { orc[index].actionBy.sourceTable = seg[&apos;ORC.19&apos;][&apos;ORC.19.8&apos;]; }
		orc[index].actionBy.assigningAuthority = {};
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.1&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningAuthority.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.1&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.2&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningAuthority.universalId = seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.2&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.3&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningAuthority.universalIdType = seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.3&apos;]; }
		if (Object.keys(orc[index].actionBy.assigningAuthority).length == 0) {
			if (seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningAuthority.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;]; }
			else delete orc[index].actionBy.assigningAuthority;
		}
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.10&apos;].toString() != &quot;&quot;) { orc[index].actionBy.nameTypeCode = seg[&apos;ORC.19&apos;][&apos;ORC.19.10&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.11&apos;].toString() != &quot;&quot;) { orc[index].actionBy.identifierCheckDigit = seg[&apos;ORC.19&apos;][&apos;ORC.19.11&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.12&apos;].toString() != &quot;&quot;) { orc[index].actionBy.codeIdentifyingCheckDigitScheme = seg[&apos;ORC.19&apos;][&apos;ORC.19.12&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.13&apos;].toString() != &quot;&quot;) { orc[index].actionBy.identifierTypeCode = seg[&apos;ORC.19&apos;][&apos;ORC.19.13&apos;]; }
		orc[index].actionBy.assigningFacility = {};
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.1&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningFacility.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.1&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.2&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningFacility.universalId = seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.2&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.3&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningFacility.universalIdType = seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.3&apos;]; }
		if (Object.keys(orc[index].actionBy.assigningFacility).length == 0) {
			if (seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningFacility.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;]; }
			else delete orc[index].actionBy.assigningFacility;
		}
		if (Object.keys(orc[index].actionBy).length == 0) {
			delete orc[index].actionBy;
		}

		// clean up ORC and increment index
		if (Object.keys(orc[index]).length == 0) {
			delete orc[index];
		} else {
			index++;
		}		
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// If it has content, add the ORC segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// ORC
var orc;
if (msg[&apos;ORC&apos;].length() &gt; 0) {
	orc = [];
	var index = 0;
	for each (seg in msg.ORC) {
		orc[index] = {};

		// ORC.1, orderControl
		if (seg[&apos;ORC.1&apos;][&apos;ORC.1.1&apos;].toString() != &quot;&quot;) { orc[index].orderControl = seg[&apos;ORC.1&apos;][&apos;ORC.1.1&apos;]; }

		// ORC.2, placerOrderNumber
		orc[index].placerOrderNumber = {};
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;].toString() != &quot;&quot;) { orc[index].placerOrderNumber.id = seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;].toString() != &quot;&quot;) { orc[index].placerOrderNumber.namespaceId = seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;].toString() != &quot;&quot;) { orc[index].placerOrderNumber.universalId = seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;].toString() != &quot;&quot;) { orc[index].placerOrderNumber.universalIdType = seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;]; }
		if (Object.keys(orc[index].placerOrderNumber).length == 0) {
			delete orc[index].placerOrderNumber;
		}

		// ORC.3, fillerOrderNumber
		orc[index].fillerOrderNumber = {};
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;].toString() != &quot;&quot;) { orc[index].fillerOrderNumber.id = seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;].toString() != &quot;&quot;) { orc[index].fillerOrderNumber.namespaceId = seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;].toString() != &quot;&quot;) { orc[index].fillerOrderNumber.universalId = seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;].toString() != &quot;&quot;) { orc[index].fillerOrderNumber.universalIdType = seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;]; }
		if (Object.keys(orc[index].fillerOrderNumber).length == 0) {
			delete orc[index].fillerOrderNumber;
		}

		// ORC.4, placerGroupNumber
		orc[index].placerGroupNumber = {};
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;].toString() != &quot;&quot;) { orc[index].placerGroupNumber.id = seg[&apos;ORC.2&apos;][&apos;ORC.2.1&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;].toString() != &quot;&quot;) { orc[index].placerGroupNumber.namespaceId = seg[&apos;ORC.2&apos;][&apos;ORC.2.2&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;].toString() != &quot;&quot;) { orc[index].placerGroupNumber.universalId = seg[&apos;ORC.2&apos;][&apos;ORC.2.3&apos;]; }
		if (seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;].toString() != &quot;&quot;) { orc[index].placerGroupNumber.universalIdType = seg[&apos;ORC.2&apos;][&apos;ORC.2.4&apos;]; }
		if (Object.keys(orc[index].placerGroupNumber).length == 0) {
			delete orc[index].placerGroupNumber;
		}

		// ORC.5, orderStatus
		if (seg[&apos;ORC.5&apos;][&apos;ORC.5.1&apos;].toString() != &quot;&quot;) { orc[index].orderStatus = seg[&apos;ORC.5&apos;][&apos;ORC.5.1&apos;]; }

		// ORC.6, responseFlag
		if (seg[&apos;ORC.6&apos;][&apos;ORC.6.1&apos;].toString() != &quot;&quot;) { orc[index].responseFlag = seg[&apos;ORC.6&apos;][&apos;ORC.6.1&apos;]; }

		// ORC.7, timingQuantity
		orc[index].timingQuantity = {};
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.1&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.quantity = seg[&apos;ORC.7&apos;][&apos;ORC.7.1&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.2&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.interval = seg[&apos;ORC.7&apos;][&apos;ORC.7.2&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.3&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.duration = seg[&apos;ORC.7&apos;][&apos;ORC.7.3&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.4&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.startDateTime = seg[&apos;ORC.7&apos;][&apos;ORC.7.4&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.5&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.endDateTime = seg[&apos;ORC.7&apos;][&apos;ORC.7.5&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.6&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.priority = seg[&apos;ORC.7&apos;][&apos;ORC.7.6&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.7&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.condition = seg[&apos;ORC.7&apos;][&apos;ORC.7.7&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.8&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.text = seg[&apos;ORC.7&apos;][&apos;ORC.7.8&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.9&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.conjunction = seg[&apos;ORC.7&apos;][&apos;ORC.7.9&apos;]; }
		if (seg[&apos;ORC.7&apos;][&apos;ORC.7.10&apos;].toString() != &quot;&quot;) { orc[index].timingQuantity.orderSequencing = seg[&apos;ORC.7&apos;][&apos;ORC.7.10&apos;]; }
		if (Object.keys(orc[index].timingQuantity).length == 0) {
			delete orc[index].timingQuantity;
		}

		// ORC.8, parentOrder
		orc[index].parentOrder = {};
		orc[index].parentOrder.parentsPlacerOrderNumber = {};
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.1&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.id = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.1&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.2&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.namespaceId = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.2&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.3&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.universalId = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.3&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.4&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.universalIdType = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;][&apos;ORC.8.1.4&apos;]; }
		if (Object.keys(orc[index].parentOrder.parentsPlacerOrderNumber).length == 0) {
			if (seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsPlacerOrderNumber.id = seg[&apos;ORC.8&apos;][&apos;ORC.8.1&apos;]; }
			else delete orc[index].parentOrder.parentsPlacerOrderNumber;
		}
		orc[index].parentOrder.parentsFillerOrderNumber = {};
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.1&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.id = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.1&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.2&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.namespaceId = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.2&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.3&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.universalId = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.3&apos;]; }
		if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.4&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.universalIdType = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;][&apos;ORC.8.2.4&apos;]; }
		if (Object.keys(orc[index].parentOrder.parentsFillerOrderNumber).length == 0) {
			if (seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;].toString() != &quot;&quot;) { orc[index].parentOrder.parentsFillerOrderNumber.id = seg[&apos;ORC.8&apos;][&apos;ORC.8.2&apos;]; }
			else delete orc[index].parentOrder.parentsFillerOrderNumber;
		}
		if (Object.keys(orc[index].parentOrder).length == 0) {
			delete orc[index].parentOrder;
		}

		// ORC.9, transactionDateTime
		if (seg[&apos;ORC.9&apos;][&apos;ORC.9.1&apos;].toString() != &quot;&quot;) { orc[index].transactionDateTime = seg[&apos;ORC.9&apos;][&apos;ORC.9.1&apos;]; }

		// ORC.10, enteredBy
		orc[index].enteredBy = {};
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.1&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.1&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.2&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.lastName = seg[&apos;ORC.10&apos;][&apos;ORC.10.2&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.3&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.firstName = seg[&apos;ORC.10&apos;][&apos;ORC.10.3&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.4&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.middleInitOrName = seg[&apos;ORC.10&apos;][&apos;ORC.10.4&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.5&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.suffix = seg[&apos;ORC.10&apos;][&apos;ORC.10.5&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.6&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.prefix = seg[&apos;ORC.10&apos;][&apos;ORC.10.6&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.7&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.degree = seg[&apos;ORC.10&apos;][&apos;ORC.10.7&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.8&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.sourceTable = seg[&apos;ORC.10&apos;][&apos;ORC.10.8&apos;]; }
		orc[index].enteredBy.assigningAuthority = {};
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.1&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningAuthority.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.1&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.2&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningAuthority.universalId = seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.2&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.3&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningAuthority.universalIdType = seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;][&apos;ORC.10.9.3&apos;]; }
		if (Object.keys(orc[index].enteredBy.assigningAuthority).length == 0) {
			if (seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningAuthority.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.9&apos;]; }
			else delete orc[index].enteredBy.assigningAuthority;
		}
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.10&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.nameTypeCode = seg[&apos;ORC.10&apos;][&apos;ORC.10.10&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.11&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.identifierCheckDigit = seg[&apos;ORC.10&apos;][&apos;ORC.10.11&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.12&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.codeIdentifyingCheckDigitScheme = seg[&apos;ORC.10&apos;][&apos;ORC.10.12&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.13&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.identifierTypeCode = seg[&apos;ORC.10&apos;][&apos;ORC.10.13&apos;]; }
		orc[index].enteredBy.assigningFacility = {};
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.1&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningFacility.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.1&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.2&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningFacility.universalId = seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.2&apos;]; }
		if (seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.3&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningFacility.universalIdType = seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;][&apos;ORC.10.14.3&apos;]; }
		if (Object.keys(orc[index].enteredBy.assigningFacility).length == 0) {
			if (seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;].toString() != &quot;&quot;) { orc[index].enteredBy.assigningFacility.id = seg[&apos;ORC.10&apos;][&apos;ORC.10.14&apos;]; }
			else delete orc[index].enteredBy.assigningFacility;
		}
		if (Object.keys(orc[index].enteredBy).length == 0) {
			delete orc[index].enteredBy;
		}

		// ORC.11, verifiedBy
		orc[index].verifiedBy = {};
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.1&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.1&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.2&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.lastName = seg[&apos;ORC.11&apos;][&apos;ORC.11.2&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.3&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.firstName = seg[&apos;ORC.11&apos;][&apos;ORC.11.3&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.4&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.middleInitOrName = seg[&apos;ORC.11&apos;][&apos;ORC.11.4&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.5&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.suffix = seg[&apos;ORC.11&apos;][&apos;ORC.11.5&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.6&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.prefix = seg[&apos;ORC.11&apos;][&apos;ORC.11.6&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.7&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.degree = seg[&apos;ORC.11&apos;][&apos;ORC.11.7&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.8&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.sourceTable = seg[&apos;ORC.11&apos;][&apos;ORC.11.8&apos;]; }
		orc[index].verifiedBy.assigningAuthority = {};
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.1&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningAuthority.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.1&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.2&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningAuthority.universalId = seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.2&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.3&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningAuthority.universalIdType = seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;][&apos;ORC.11.9.3&apos;]; }
		if (Object.keys(orc[index].verifiedBy.assigningAuthority).length == 0) {
			if (seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningAuthority.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.9&apos;]; }
			else delete orc[index].verifiedBy.assigningAuthority;
		}
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.10&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.nameTypeCode = seg[&apos;ORC.11&apos;][&apos;ORC.11.10&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.11&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.identifierCheckDigit = seg[&apos;ORC.11&apos;][&apos;ORC.11.11&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.12&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.codeIdentifyingCheckDigitScheme = seg[&apos;ORC.11&apos;][&apos;ORC.11.12&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.13&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.identifierTypeCode = seg[&apos;ORC.11&apos;][&apos;ORC.11.13&apos;]; }
		orc[index].verifiedBy.assigningFacility = {};
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.1&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningFacility.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.1&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.2&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningFacility.universalId = seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.2&apos;]; }
		if (seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.3&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningFacility.universalIdType = seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;][&apos;ORC.11.14.3&apos;]; }
		if (Object.keys(orc[index].verifiedBy.assigningFacility).length == 0) {
			if (seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;].toString() != &quot;&quot;) { orc[index].verifiedBy.assigningFacility.id = seg[&apos;ORC.11&apos;][&apos;ORC.11.14&apos;]; }
			else delete orc[index].verifiedBy.assigningFacility;
		}
		if (Object.keys(orc[index].verifiedBy).length == 0) {
			delete orc[index].verifiedBy;
		}

		// ORC.12, orderingProvider
		orc[index].orderingProvider = {};
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.1&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.1&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.2&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.lastName = seg[&apos;ORC.12&apos;][&apos;ORC.12.2&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.3&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.firstName = seg[&apos;ORC.12&apos;][&apos;ORC.12.3&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.4&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.middleInitOrName = seg[&apos;ORC.12&apos;][&apos;ORC.12.4&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.5&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.suffix = seg[&apos;ORC.12&apos;][&apos;ORC.12.5&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.6&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.prefix = seg[&apos;ORC.12&apos;][&apos;ORC.12.6&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.7&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.degree = seg[&apos;ORC.12&apos;][&apos;ORC.12.7&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.8&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.sourceTable = seg[&apos;ORC.12&apos;][&apos;ORC.12.8&apos;]; }
		orc[index].orderingProvider.assigningAuthority = {};
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.1&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningAuthority.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.1&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.2&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningAuthority.universalId = seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.2&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.3&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningAuthority.universalIdType = seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;][&apos;ORC.12.9.3&apos;]; }
		if (Object.keys(orc[index].orderingProvider.assigningAuthority).length == 0) {
			if (seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningAuthority.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.9&apos;]; }
			else delete orc[index].orderingProvider.assigningAuthority;
		}
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.10&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.nameTypeCode = seg[&apos;ORC.12&apos;][&apos;ORC.12.10&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.11&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.identifierCheckDigit = seg[&apos;ORC.12&apos;][&apos;ORC.12.11&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.12&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.codeIdentifyingCheckDigitScheme = seg[&apos;ORC.12&apos;][&apos;ORC.12.12&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.13&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.identifierTypeCode = seg[&apos;ORC.12&apos;][&apos;ORC.12.13&apos;]; }
		orc[index].orderingProvider.assigningFacility = {};
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.1&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningFacility.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.1&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.2&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningFacility.universalId = seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.2&apos;]; }
		if (seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.3&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningFacility.universalIdType = seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;][&apos;ORC.12.14.3&apos;]; }
		if (Object.keys(orc[index].orderingProvider.assigningFacility).length == 0) {
			if (seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;].toString() != &quot;&quot;) { orc[index].orderingProvider.assigningFacility.id = seg[&apos;ORC.12&apos;][&apos;ORC.12.14&apos;]; }
			else delete orc[index].orderingProvider.assigningFacility;
		}
		if (Object.keys(orc[index].orderingProvider).length == 0) {
			delete orc[index].orderingProvider;
		}

		// ORC.13, enterersLocation
		orc[index].enterersLocation = {};
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.1&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.pointOfCare = seg[&apos;ORC.13&apos;][&apos;ORC.13.1&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.2&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.room = seg[&apos;ORC.13&apos;][&apos;ORC.13.2&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.3&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.bed = seg[&apos;ORC.13&apos;][&apos;ORC.13.3&apos;]; }
		orc[index].enterersLocation.facility = {};
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.1&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.facility.nameSpaceId =  seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.1&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.2&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.facility.universalId =  seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.2&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.3&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.facility.universalIdType =  seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;][&apos;ORC.13.4.3&apos;]; }
		if (Object.keys(orc[index].enterersLocation.facility).length == 0) {
			if (seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.facility.nameSpaceId = seg[&apos;ORC.13&apos;][&apos;ORC.13.4&apos;]; }
			else delete orc[index].enterersLocation.facility;
		}
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.5&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.locationStatus = seg[&apos;ORC.13&apos;][&apos;ORC.13.5&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.6&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.personLocationType = seg[&apos;ORC.13&apos;][&apos;ORC.13.6&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.7&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.building = seg[&apos;ORC.13&apos;][&apos;ORC.13.7&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.8&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.floor = seg[&apos;ORC.13&apos;][&apos;ORC.13.8&apos;]; }
		if (seg[&apos;ORC.13&apos;][&apos;ORC.13.9&apos;].toString() != &quot;&quot;) { orc[index].enterersLocation.locationDescription = seg[&apos;ORC.13&apos;][&apos;ORC.13.9&apos;]; }
		if (Object.keys(orc[index].enterersLocation).length == 0) {
			delete orc[index].enterersLocation;
		}

		// ORC.14, callBackPhoneNumber
		orc[index].callBackPhoneNumber = [];
		for each (field in seg[&apos;ORC.14&apos;]) {
			var block = {};
			if (field[&apos;ORC.14.1&apos;].toString() != &quot;&quot;) { block.number = field[&apos;ORC.14.1&apos;]; }
			if (field[&apos;ORC.14.2&apos;].toString() != &quot;&quot;) { block.telecommunicationUseCode = field[&apos;ORC.14.2&apos;]; }
			if (field[&apos;ORC.14.3&apos;].toString() != &quot;&quot;) { block.telecommunicationEquipmentType = field[&apos;ORC.14.3&apos;]; }
			if (field[&apos;ORC.14.4&apos;].toString() != &quot;&quot;) { block.emailAddress = field[&apos;ORC.14.4&apos;]; }
			if (field[&apos;ORC.14.5&apos;].toString() != &quot;&quot;) { block.countryCode = field[&apos;ORC.14.5&apos;]; }
			if (field[&apos;ORC.14.6&apos;].toString() != &quot;&quot;) { block.areaCityCode = field[&apos;ORC.14.6&apos;]; }
			if (field[&apos;ORC.14.7&apos;].toString() != &quot;&quot;) { block.phoneNumber = field[&apos;ORC.14.7&apos;]; }
			if (field[&apos;ORC.14.8&apos;].toString() != &quot;&quot;) { block.extension = field[&apos;ORC.14.8&apos;]; }
			if (field[&apos;ORC.14.9&apos;].toString() != &quot;&quot;) { block.text = field[&apos;ORC.14.9&apos;]; }
			if (Object.keys(block).length &gt; 0) {
				orc[index].callBackPhoneNumber.push(block);
			}
		}
		if (orc[index].callBackPhoneNumber.length == 0) {
			delete orc[index].callBackPhoneNumber;
		}

		// ORC.15, orderEffectiveDateTime
		if (seg[&apos;ORC.15&apos;][&apos;ORC.15.1&apos;].toString() != &quot;&quot;) { orc[index].orderEffectiveDateTime = seg[&apos;ORC.15&apos;][&apos;ORC.15.1&apos;]; }

		// ORC.16, orderControlCodeReason
		orc[index].orderControlCodeReason = {};
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.1&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.id = seg[&apos;ORC.16&apos;][&apos;ORC.16.1&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.2&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.text = seg[&apos;ORC.16&apos;][&apos;ORC.16.2&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.3&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.codingSystem = seg[&apos;ORC.16&apos;][&apos;ORC.16.3&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.4&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.altId = seg[&apos;ORC.16&apos;][&apos;ORC.16.4&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.5&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.altText = seg[&apos;ORC.16&apos;][&apos;ORC.16.5&apos;]; }
		if (seg[&apos;ORC.16&apos;][&apos;ORC.16.6&apos;].toString() != &quot;&quot;) { orc[index].orderControlCodeReason.altCodingSystem = seg[&apos;ORC.16&apos;][&apos;ORC.16.6&apos;]; }
		if (Object.keys(orc[index].orderControlCodeReason).length == 0) {
			delete orc[index].orderControlCodeReason;
		}

		// ORC.17, enteringOrganization
		orc[index].enteringOrganization = {};
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.1&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.id = seg[&apos;ORC.17&apos;][&apos;ORC.17.1&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.2&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.text = seg[&apos;ORC.17&apos;][&apos;ORC.17.2&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.3&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.codingSystem = seg[&apos;ORC.17&apos;][&apos;ORC.17.3&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.4&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.altId = seg[&apos;ORC.17&apos;][&apos;ORC.17.4&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.5&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.altText = seg[&apos;ORC.17&apos;][&apos;ORC.17.5&apos;]; }
		if (seg[&apos;ORC.17&apos;][&apos;ORC.17.6&apos;].toString() != &quot;&quot;) { orc[index].enteringOrganization.altCodingSystem = seg[&apos;ORC.17&apos;][&apos;ORC.17.6&apos;]; }
		if (Object.keys(orc[index].enteringOrganization).length == 0) {
			delete orc[index].enteringOrganization;
		}

		// ORC.18, enteringDevice
		orc[index].enteringDevice = {};
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.1&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.id = seg[&apos;ORC.18&apos;][&apos;ORC.18.1&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.2&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.text = seg[&apos;ORC.18&apos;][&apos;ORC.18.2&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.3&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.codingSystem = seg[&apos;ORC.18&apos;][&apos;ORC.18.3&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.4&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.altId = seg[&apos;ORC.18&apos;][&apos;ORC.18.4&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.5&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.altText = seg[&apos;ORC.18&apos;][&apos;ORC.18.5&apos;]; }
		if (seg[&apos;ORC.18&apos;][&apos;ORC.18.6&apos;].toString() != &quot;&quot;) { orc[index].enteringDevice.altCodingSystem = seg[&apos;ORC.18&apos;][&apos;ORC.18.6&apos;]; }
		if (Object.keys(orc[index].enteringDevice).length == 0) {
			delete orc[index].enteringDevice;
		}

		// ORC.19, actionBy
		orc[index].actionBy = {};
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.1&apos;].toString() != &quot;&quot;) { orc[index].actionBy.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.1&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.2&apos;].toString() != &quot;&quot;) { orc[index].actionBy.lastName = seg[&apos;ORC.19&apos;][&apos;ORC.19.2&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.3&apos;].toString() != &quot;&quot;) { orc[index].actionBy.firstName = seg[&apos;ORC.19&apos;][&apos;ORC.19.3&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.4&apos;].toString() != &quot;&quot;) { orc[index].actionBy.middleInitOrName = seg[&apos;ORC.19&apos;][&apos;ORC.19.4&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.5&apos;].toString() != &quot;&quot;) { orc[index].actionBy.suffix = seg[&apos;ORC.19&apos;][&apos;ORC.19.5&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.6&apos;].toString() != &quot;&quot;) { orc[index].actionBy.prefix = seg[&apos;ORC.19&apos;][&apos;ORC.19.6&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.7&apos;].toString() != &quot;&quot;) { orc[index].actionBy.degree = seg[&apos;ORC.19&apos;][&apos;ORC.19.7&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.8&apos;].toString() != &quot;&quot;) { orc[index].actionBy.sourceTable = seg[&apos;ORC.19&apos;][&apos;ORC.19.8&apos;]; }
		orc[index].actionBy.assigningAuthority = {};
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.1&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningAuthority.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.1&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.2&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningAuthority.universalId = seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.2&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.3&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningAuthority.universalIdType = seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;][&apos;ORC.19.9.3&apos;]; }
		if (Object.keys(orc[index].actionBy.assigningAuthority).length == 0) {
			if (seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningAuthority.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.9&apos;]; }
			else delete orc[index].actionBy.assigningAuthority;
		}
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.10&apos;].toString() != &quot;&quot;) { orc[index].actionBy.nameTypeCode = seg[&apos;ORC.19&apos;][&apos;ORC.19.10&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.11&apos;].toString() != &quot;&quot;) { orc[index].actionBy.identifierCheckDigit = seg[&apos;ORC.19&apos;][&apos;ORC.19.11&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.12&apos;].toString() != &quot;&quot;) { orc[index].actionBy.codeIdentifyingCheckDigitScheme = seg[&apos;ORC.19&apos;][&apos;ORC.19.12&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.13&apos;].toString() != &quot;&quot;) { orc[index].actionBy.identifierTypeCode = seg[&apos;ORC.19&apos;][&apos;ORC.19.13&apos;]; }
		orc[index].actionBy.assigningFacility = {};
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.1&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningFacility.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.1&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.2&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningFacility.universalId = seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.2&apos;]; }
		if (seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.3&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningFacility.universalIdType = seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;][&apos;ORC.19.14.3&apos;]; }
		if (Object.keys(orc[index].actionBy.assigningFacility).length == 0) {
			if (seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;].toString() != &quot;&quot;) { orc[index].actionBy.assigningFacility.id = seg[&apos;ORC.19&apos;][&apos;ORC.19.14&apos;]; }
			else delete orc[index].actionBy.assigningFacility;
		}
		if (Object.keys(orc[index].actionBy).length == 0) {
			delete orc[index].actionBy;
		}

		// clean up ORC and increment index
		if (Object.keys(orc[index]).length == 0) {
			delete orc[index];
		} else {
			index++;
		}		
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// If it has content, add the ORC segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>6</sequenceNumber>
          <name>--RXO (Pharmacy Presciption Order), RXR (Pharmacy Route), RXC (Pharmacy Component), and related NTE (Note) Segments - REQUIRES ORC MAPPING STEP ABOVE</name>
          <script>// Pull out the ORC JSON to embed the RXO and other segments in
var orc = JSON.parse($(&apos;hl7JSON&apos;)).content.ORC;

// ORC iteration, in order to grab related RXO&apos;s
if (msg[&apos;ORC&apos;].length() &gt; 0) {

	// ORC is a required to have a RXO, but if the ORC was blank and was removed from the JSON, just create a new one to add the RXO into
	if (!orc) {
		orc = [{}];
	}

	var index = 0;
	for each (seg in msg.ORC) {

		// RXO (ORC)
		var rxoGroup = getSegmentsAfter(msg,seg,&apos;RXO&apos;,true);
		if (rxoGroup.length &gt; 0 &amp;&amp; orc) {
			orc[index].RXO = [];
			var indexRXO = 0;
			for each (rxoSeg in rxoGroup) {
				orc[index].RXO[indexRXO] = {};
		
				// RXO.1, requestedGiveCode
				orc[index].RXO[indexRXO].requestedGiveCode = {};
				if (rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveCode.id = rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.1&apos;]; }
				if (rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveCode.text = rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.2&apos;]; }
				if (rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveCode.codingSystem = rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.3&apos;]; }
				if (rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveCode.altId = rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.4&apos;]; }
				if (rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveCode.altText = rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.5&apos;]; }
				if (rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveCode.altCodingSystem = rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.6&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].requestedGiveCode).length == 0) {
					delete orc[index].RXO[indexRXO].requestedGiveCode;
				}
		
				// RXO.2, requestedGiveAmountMinimum
				if (rxoSeg[&apos;RXO.2&apos;][&apos;RXO.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveAmountMinimum = rxoSeg[&apos;RXO.2&apos;][&apos;RXO.2.1&apos;]; }
		
				// RXO.3, requestedGiveAmountMaximum
				if (rxoSeg[&apos;RXO.3&apos;][&apos;RXO.3.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveAmountMaximum = rxoSeg[&apos;RXO.3&apos;][&apos;RXO.3.1&apos;]; }
		
				// RXO.4, requestedGiveUnits
				orc[index].RXO[indexRXO].requestedGiveUnits = {};
				if (rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveUnits.id = rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.1&apos;]; }
				if (rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveUnits.text = rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.2&apos;]; }
				if (rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveUnits.codingSystem = rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.3&apos;]; }
				if (rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveUnits.altId = rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.4&apos;]; }
				if (rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveUnits.altText = rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.5&apos;]; }
				if (rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveUnits.altCodingSystem = rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.6&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].requestedGiveUnits).length == 0) {
					delete orc[index].RXO[indexRXO].requestedGiveUnits;
				}
		
				// RXO.5, requestedDosageForm
				orc[index].RXO[indexRXO].requestedDosageForm = {};
				if (rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDosageForm.id = rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.1&apos;]; }
				if (rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDosageForm.text = rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.2&apos;]; }
				if (rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDosageForm.codingSystem = rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.3&apos;]; }
				if (rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDosageForm.altId = rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.4&apos;]; }
				if (rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDosageForm.altText = rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.5&apos;]; }
				if (rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDosageForm.altCodingSystem = rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.6&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].requestedDosageForm).length == 0) {
					delete orc[index].RXO[indexRXO].requestedDosageForm;
				}
		
				// RXO.6, providersPharmacyTreatmentInstructions
				orc[index].RXO[indexRXO].providersPharmacyTreatmentInstructions = [];
				for each (field in rxoSeg[&apos;RXO.6&apos;]) {
					var block = {};
					if (field[&apos;RXO.6.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXO.6.1&apos;]; }
					if (field[&apos;RXO.6.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXO.6.2&apos;]; }
					if (field[&apos;RXO.6.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXO.6.3&apos;]; }
					if (field[&apos;RXO.6.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXO.6.4&apos;]; }
					if (field[&apos;RXO.6.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXO.6.5&apos;]; }
					if (field[&apos;RXO.6.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXO.6.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXO[indexRXO].providersPharmacyTreatmentInstructions.push(block);
					}
				}
				if (orc[index].RXO[indexRXO].providersPharmacyTreatmentInstructions.length == 0) {
					delete orc[index].RXO[indexRXO].providersPharmacyTreatmentInstructions;
				}
		
				// RXO.7, providersAdministrationInstructions
				orc[index].RXO[indexRXO].providersAdministrationInstructions = [];
				for each (field in rxoSeg[&apos;RXO.7&apos;]) {
					var block = {};
					if (field[&apos;RXO.7.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXO.7.1&apos;]; }
					if (field[&apos;RXO.7.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXO.7.2&apos;]; }
					if (field[&apos;RXO.7.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXO.7.3&apos;]; }
					if (field[&apos;RXO.7.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXO.7.4&apos;]; }
					if (field[&apos;RXO.7.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXO.7.5&apos;]; }
					if (field[&apos;RXO.7.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXO.7.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXO[indexRXO].providersAdministrationInstructions.push(block);
					}
				}
				if (orc[index].RXO[indexRXO].providersAdministrationInstructions.length == 0) {
					delete orc[index].RXO[indexRXO].providersAdministrationInstructions;
				}
		
				// RXO.8, deliverToLocation
				if (rxoSeg[&apos;RXO.8&apos;][&apos;RXO.8.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].deliverToLocation = rxoSeg[&apos;RXO.8&apos;][&apos;RXO.8.1&apos;]; }
				
				// RXO.9, allowSubstitutions
				if (rxoSeg[&apos;RXO.9&apos;][&apos;RXO.9.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].allowSubstitutions = rxoSeg[&apos;RXO.9&apos;][&apos;RXO.9.1&apos;]; }
				
				// RXO.10, requestedDispenseCode
				orc[index].RXO[indexRXO].requestedDispenseCode = {};
				if (rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseCode.id = rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.1&apos;]; }
				if (rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseCode.text = rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.2&apos;]; }
				if (rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseCode.codingSystem = rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.3&apos;]; }
				if (rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseCode.altId = rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.4&apos;]; }
				if (rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseCode.altText = rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.5&apos;]; }
				if (rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseCode.altCodingSystem = rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.6&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].requestedDispenseCode).length == 0) {
					delete orc[index].RXO[indexRXO].requestedDispenseCode;
				}
		
				// RXO.11, requestedDispenseAmount
				if (rxoSeg[&apos;RXO.11&apos;][&apos;RXO.11.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseAmount = rxoSeg[&apos;RXO.11&apos;][&apos;RXO.11.1&apos;]; }
				
				// RXO.12, requestedDispenseUnits
				orc[index].RXO[indexRXO].requestedDispenseUnits = {};
				if (rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseUnits.id = rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.1&apos;]; }
				if (rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseUnits.text = rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.2&apos;]; }
				if (rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseUnits.codingSystem = rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.3&apos;]; }
				if (rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseUnits.altId = rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.4&apos;]; }
				if (rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseUnits.altText = rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.5&apos;]; }
				if (rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseUnits.altCodingSystem = rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.6&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].requestedDispenseUnits).length == 0) {
					delete orc[index].RXO[indexRXO].requestedDispenseUnits;
				}
		
				// RXO.13, numberOfRefills
				if (rxoSeg[&apos;RXO.13&apos;][&apos;RXO.13.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].numberOfRefills = rxoSeg[&apos;RXO.13&apos;][&apos;RXO.13.1&apos;]; }
				
				// RXO.14, orderingProvidersDeaNumber
				orc[index].RXO[indexRXO].orderingProvidersDeaNumber = {};
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.id = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.1&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.lastName = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.2&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.firstName = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.3&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.middleInitOrName = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.4&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.suffix = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.5&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.prefix = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.6&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.7&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.degree = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.7&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.8&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.sourceTable = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.8&apos;]; }
				orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningAuthority = {};
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.9&apos;][&apos;RXO.14.9.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningAuthority.id = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.9&apos;][&apos;RXO.14.9.1&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.9&apos;][&apos;RXO.14.9.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningAuthority.universalId = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.9&apos;][&apos;RXO.14.9.2&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.9&apos;][&apos;RXO.14.9.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningAuthority.universalIdType = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.9&apos;][&apos;RXO.14.9.3&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningAuthority).length == 0) {
					if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.9&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningAuthority.id = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.9&apos;]; }
					else delete orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningAuthority;
				}
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.10&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.nameTypeCode = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.10&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.11&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.identifierCheckDigit = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.11&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.12&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.codeIdentifyingCheckDigitScheme = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.12&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.13&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.identifierTypeCode = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.13&apos;]; }
				orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningFacility = {};
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.14&apos;][&apos;RXO.14.14.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningFacility.id = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.14&apos;][&apos;RXO.14.14.1&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.14&apos;][&apos;RXO.14.14.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningFacility.universalId = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.14&apos;][&apos;RXO.14.14.2&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.14&apos;][&apos;RXO.14.14.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningFacility.universalIdType = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.14&apos;][&apos;RXO.14.14.3&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningFacility).length == 0) {
					if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.14&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningFacility.id = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.14&apos;]; }
					else delete orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningFacility;
				}
				if (Object.keys(orc[index].RXO[indexRXO].orderingProvidersDeaNumber).length == 0) {
					delete orc[index].RXO[indexRXO].orderingProvidersDeaNumber;
				}
		
				// RXO.15, pharmacistTreatmentSuppliersVerifierId
				orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId = {};
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.id = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.1&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.lastName = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.2&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.firstName = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.3&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.middleInitOrName = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.4&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.suffix = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.5&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.prefix = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.6&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.7&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.degree = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.7&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.8&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.sourceTable = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.8&apos;]; }
				orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningAuthority = {};
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.9&apos;][&apos;RXO.15.9.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningAuthority.id = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.9&apos;][&apos;RXO.15.9.1&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.9&apos;][&apos;RXO.15.9.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningAuthority.universalId = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.9&apos;][&apos;RXO.15.9.2&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.9&apos;][&apos;RXO.15.9.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningAuthority.universalIdType = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.9&apos;][&apos;RXO.15.9.3&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningAuthority).length == 0) {
					if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.9&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningAuthority.id = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.9&apos;]; }
					else delete orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningAuthority;
				}
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.10&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.nameTypeCode = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.10&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.11&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.identifierCheckDigit = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.11&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.12&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.codeIdentifyingCheckDigitScheme = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.12&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.13&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.identifierTypeCode = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.13&apos;]; }
				orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningFacility = {};
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.14&apos;][&apos;RXO.15.14.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningFacility.id = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.14&apos;][&apos;RXO.15.14.1&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.14&apos;][&apos;RXO.15.14.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningFacility.universalId = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.14&apos;][&apos;RXO.15.14.2&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.14&apos;][&apos;RXO.15.14.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningFacility.universalIdType = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.14&apos;][&apos;RXO.15.14.3&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningFacility).length == 0) {
					if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.14&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningFacility.id = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.14&apos;]; }
					else delete orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningFacility;
				}
				if (Object.keys(orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId).length == 0) {
					delete orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId;
				}
		
				// RXO.16, needsHumanReview
				if (rxoSeg[&apos;RXO.16&apos;][&apos;RXO.16.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].needsHumanReview = rxoSeg[&apos;RXO.16&apos;][&apos;RXO.16.1&apos;]; }
				
				// RXO.17, requestedGivePerTimeUnit
				if (rxoSeg[&apos;RXO.17&apos;][&apos;RXO.17.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGivePerTimeUnit = rxoSeg[&apos;RXO.17&apos;][&apos;RXO.17.1&apos;]; }
				
				// RXO.18, requestedGiveStrength
				if (rxoSeg[&apos;RXO.18&apos;][&apos;RXO.18.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveStrength = rxoSeg[&apos;RXO.18&apos;][&apos;RXO.18.1&apos;]; }
				
				// RXO.19, requestedGiveStrengthUnits
				orc[index].RXO[indexRXO].requestedGiveStrengthUnits = {};
				if (rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveStrengthUnits.id = rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.1&apos;]; }
				if (rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveStrengthUnits.text = rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.2&apos;]; }
				if (rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveStrengthUnits.codingSystem = rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.3&apos;]; }
				if (rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveStrengthUnits.altId = rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.4&apos;]; }
				if (rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveStrengthUnits.altText = rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.5&apos;]; }
				if (rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveStrengthUnits.altCodingSystem = rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.6&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].requestedGiveStrengthUnits).length == 0) {
					delete orc[index].RXO[indexRXO].requestedGiveStrengthUnits;
				}
		
				// RXO.20, indication
				orc[index].RXO[indexRXO].administrationNotes = [];
				for each (field in rxoSeg[&apos;RXO.19&apos;]) {
					var block = {};
					if (field[&apos;RXO.19.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXO.19.1&apos;]; }
					if (field[&apos;RXO.19.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXO.19.2&apos;]; }
					if (field[&apos;RXO.19.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXO.19.3&apos;]; }
					if (field[&apos;RXO.19.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXO.19.4&apos;]; }
					if (field[&apos;RXO.19.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXO.19.5&apos;]; }
					if (field[&apos;RXO.19.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXO.19.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXO[indexRXO].administrationNotes.push(block);
					}
				}
				if (orc[index].RXO[indexRXO].administrationNotes.length == 0) {
					delete orc[index].RXO[indexRXO].administrationNotes;
				}
		
				// RXO.21, requestedGiveRateAmount
				if (rxoSeg[&apos;RXO.21&apos;][&apos;RXO.21.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveRateAmount = rxoSeg[&apos;RXO.21&apos;][&apos;RXO.21.1&apos;]; }
				
				// RXO.22, requestedGiveRateUnits
				orc[index].RXO[indexRXO].requestedGiveRateUnits = {};
				if (rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveRateUnits.id = rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.1&apos;]; }
				if (rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveRateUnits.text = rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.2&apos;]; }
				if (rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveRateUnits.codingSystem = rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.3&apos;]; }
				if (rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveRateUnits.altId = rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.4&apos;]; }
				if (rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveRateUnits.altText = rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.5&apos;]; }
				if (rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveRateUnits.altCodingSystem = rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.6&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].requestedGiveRateUnits).length == 0) {
					delete orc[index].RXO[indexRXO].requestedGiveRateUnits;
				}
		
				// NTE (RXO)
				var nteGroup = getSegmentsAfter(msg,rxoSeg,&apos;NTE&apos;,true);
				if (nteGroup.length &gt; 0) {
					orc[index].RXO[indexRXO].NTE = [];
					var indexNTE = 0;
					for each (nteSeg in nteGroup) {
						orc[index].RXO[indexRXO].NTE[indexNTE] = {};
		
						// NTE.1, setId
						if (nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].NTE[indexNTE].setId = nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }
		
						// NTE.2, sourceOfComment
						if (nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].NTE[indexNTE].sourceOfComment = nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }
		
						// NTE.3, comment
						orc[index].RXO[indexRXO].NTE[indexNTE].comment = [];
						for each (field in nteSeg[&apos;NTE.3&apos;]) {
							var block = {};
							if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
								orc[index].RXO[indexRXO].NTE[indexNTE].comment.push(field[&apos;NTE.3.1&apos;]);
							}
						}
						if (orc[index].RXO[indexRXO].NTE[indexNTE].comment.length == 0) {
							delete orc[index].RXO[indexRXO].NTE[indexNTE].comment;
						}
		
						// clean up NTE and increment index
						if (Object.keys(orc[index].RXO[indexRXO].NTE[indexNTE]).length == 0) {
							delete orc[index].RXO[indexRXO].NTE[indexNTE];
						} else {
							indexNTE++;
						}
					}
				}
		
				// RXR (RXO)
				var rxrGroup = getSegmentsAfter(msg,rxoSeg,&apos;RXR&apos;,false, [&apos;RXO&apos;, &apos;RXE&apos;, &apos;RXA&apos;]);
				if (rxrGroup.length &gt; 0) {

					orc[index].RXO[indexRXO].RXR = [];
					var indexRXR = 0;
					for each (rxrSeg in rxrGroup) {
						orc[index].RXO[indexRXO].RXR[indexRXR] = {};
			
						// RXR.1, route
						orc[index].RXO[indexRXO].RXR[indexRXR].route = {};
						if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].route.id = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.1&apos;]; }
						if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].route.text = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.2&apos;]; }
						if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].route.codingSystem = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.3&apos;]; }
						if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].route.altId = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.4&apos;]; }
						if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].route.altText = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.5&apos;]; }
						if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].route.altCodingSystem = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.6&apos;]; }
						if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].route).length == 0) {
							delete orc[index].RXO[indexRXO].RXR[indexRXR].route;
						}
			
						// RXR.2, site
						orc[index].RXO[indexRXO].RXR[indexRXR].route = {};
						if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].site.id = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.1&apos;]; }
						if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].site.text = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.2&apos;]; }
						if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].site.codingSystem = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.3&apos;]; }
						if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].site.altId = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.4&apos;]; }
						if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].site.altText = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.5&apos;]; }
						if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].site.altCodingSystem = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.6&apos;]; }
						if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].site).length == 0) {
							delete orc[index].RXO[indexRXO].RXR[indexRXR].site;
						}
			
						// RXR.3, administrationDevice
						orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice = {};
						if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice.id = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.1&apos;]; }
						if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice.text = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.2&apos;]; }
						if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice.codingSystem = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.3&apos;]; }
						if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice.altId = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.4&apos;]; }
						if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice.altText = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.5&apos;]; }
						if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice.altCodingSystem = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.6&apos;]; }
						if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice).length == 0) {
							delete orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice;
						}
			
						// RXR.4, administrationMethod
						orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod = {};
						if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod.id = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.1&apos;]; }
						if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod.text = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.2&apos;]; }
						if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod.codingSystem = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.3&apos;]; }
						if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod.altId = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.4&apos;]; }
						if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod.altText = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.5&apos;]; }
						if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod.altCodingSystem = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.6&apos;]; }
						if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod).length == 0) {
							delete orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod;
						}

						// RXC (RXR)
						var rxcGroup = getSegmentsAfter(msg,rxrSeg,&apos;RXC&apos;,true);
						if (rxcGroup.length &gt; 0) {
							orc[index].RXO[indexRXO].RXR[indexRXR].RXC = [];
							var indexRXC = 0;
							for each (rxcSeg in rxcGroup) {
								orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC] = {};
				
								// RXC.1, rXComponentType
								if (rxcSeg[&apos;RXC.1&apos;][&apos;RXC.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].RXComponentType = rxcSeg[&apos;RXC.1&apos;][&apos;RXC.1.1&apos;]; }
				
								// RXC.2, componentCode
								orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode = {};
								if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode.id = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.1&apos;]; }
								if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode.text = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.2&apos;]; }
								if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode.codingSystem = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.3&apos;]; }
								if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode.altId = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.4&apos;]; }
								if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode.altText = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.5&apos;]; }
								if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode.altCodingSystem = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.6&apos;]; }
								if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode).length == 0) {
									delete orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode;
								}
				
								// RXC.3, componentAmount
								if (rxcSeg[&apos;RXC.3&apos;][&apos;RXC.3.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentAmount = rxcSeg[&apos;RXC.3&apos;][&apos;RXC.3.1&apos;]; }
				
								// RXC.4, componentUnits
								orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits = {};
								if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits.id = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.1&apos;]; }
								if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits.text = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.2&apos;]; }
								if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits.codingSystem = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.3&apos;]; }
								if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits.altId = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.4&apos;]; }
								if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits.altText = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.5&apos;]; }
								if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits.altCodingSystem = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.6&apos;]; }
								if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits).length == 0) {
									delete orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits;
								}
				
								// RXC.5, componentStrength
								if (rxcSeg[&apos;RXC.5&apos;][&apos;RXC.5.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrength = rxcSeg[&apos;RXC.5&apos;][&apos;RXC.5.1&apos;]; }
				
								// RXC.6, componentStrengthUnits
								orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits = {};
								if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits.id = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.1&apos;]; }
								if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits.text = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.2&apos;]; }
								if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits.codingSystem = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.3&apos;]; }
								if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits.altId = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.4&apos;]; }
								if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits.altText = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.5&apos;]; }
								if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits.altCodingSystem = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.6&apos;]; }
								if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits).length == 0) {
									delete orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits;
								}

								// NTE (RXC)
								var nteGroup = getSegmentsAfter(msg,rxcSeg,&apos;NTE&apos;,false, [&apos;RXO&apos;, &apos;RXE&apos;, &apos;RXA&apos;]);
								if (nteGroup.length &gt; 0) {
									orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE = [];
									var indexNTE = 0;
									for each (nteSeg in nteGroup) {
										orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE] = {};
						
										// NTE.1, setId
										if (nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE].setId = nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }
						
										// NTE.2, sourceOfComment
										if (nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE].sourceOfComment = nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }
						
										// NTE.3, comment
										orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE].comment = [];
										for each (field in nteSeg[&apos;NTE.3&apos;]) {
											var block = {};
											if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
												orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE].comment.push(field[&apos;NTE.3.1&apos;]);
											}
										}
										if (orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE].comment.length == 0) {
											delete orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE].comment;
										}
						
										// clean up NTE and increment index
										if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE]).length == 0) {
											delete orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE];
										} else {
											indexNTE++;
										}
									}
								}
				
								// clean up RXC and increment index
								if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC]).length == 0) {
									delete orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC];
								} else {
									indexRXC++;
								}
							}
						}
			
						// clean up RXR and incremend index
						if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR]).length == 0) {
							delete orc[index].RXO[indexRXO].RXR[indexRXR];
						} else {
							indexRXR++;
						}
					}
				}
		
				// clean up RXO and increment index
				if (Object.keys(orc[index].RXO[indexRXO]).length == 0) {
					delete orc[index].RXO[indexRXO];
				} else {
					indexRXO++;
				}
			}

			// Clean up the RXO object if it&apos;s empty
			if (orc[index].RXO[0] == null){
				delete orc[index].RXO;
			}
		}
		
		// Increment the ORC index
		index++;
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// Re-add the ORC segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// Pull out the ORC JSON to embed the RXO and other segments in
var orc = JSON.parse($(&apos;hl7JSON&apos;)).content.ORC;

// ORC iteration, in order to grab related RXO&apos;s
if (msg[&apos;ORC&apos;].length() &gt; 0) {

	// ORC is a required to have a RXO, but if the ORC was blank and was removed from the JSON, just create a new one to add the RXO into
	if (!orc) {
		orc = [{}];
	}

	var index = 0;
	for each (seg in msg.ORC) {

		// RXO (ORC)
		var rxoGroup = getSegmentsAfter(msg,seg,&apos;RXO&apos;,true);
		if (rxoGroup.length &gt; 0 &amp;&amp; orc) {
			orc[index].RXO = [];
			var indexRXO = 0;
			for each (rxoSeg in rxoGroup) {
				orc[index].RXO[indexRXO] = {};
		
				// RXO.1, requestedGiveCode
				orc[index].RXO[indexRXO].requestedGiveCode = {};
				if (rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveCode.id = rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.1&apos;]; }
				if (rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveCode.text = rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.2&apos;]; }
				if (rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveCode.codingSystem = rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.3&apos;]; }
				if (rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveCode.altId = rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.4&apos;]; }
				if (rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveCode.altText = rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.5&apos;]; }
				if (rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveCode.altCodingSystem = rxoSeg[&apos;RXO.1&apos;][&apos;RXO.1.6&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].requestedGiveCode).length == 0) {
					delete orc[index].RXO[indexRXO].requestedGiveCode;
				}
		
				// RXO.2, requestedGiveAmountMinimum
				if (rxoSeg[&apos;RXO.2&apos;][&apos;RXO.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveAmountMinimum = rxoSeg[&apos;RXO.2&apos;][&apos;RXO.2.1&apos;]; }
		
				// RXO.3, requestedGiveAmountMaximum
				if (rxoSeg[&apos;RXO.3&apos;][&apos;RXO.3.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveAmountMaximum = rxoSeg[&apos;RXO.3&apos;][&apos;RXO.3.1&apos;]; }
		
				// RXO.4, requestedGiveUnits
				orc[index].RXO[indexRXO].requestedGiveUnits = {};
				if (rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveUnits.id = rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.1&apos;]; }
				if (rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveUnits.text = rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.2&apos;]; }
				if (rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveUnits.codingSystem = rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.3&apos;]; }
				if (rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveUnits.altId = rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.4&apos;]; }
				if (rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveUnits.altText = rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.5&apos;]; }
				if (rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveUnits.altCodingSystem = rxoSeg[&apos;RXO.4&apos;][&apos;RXO.4.6&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].requestedGiveUnits).length == 0) {
					delete orc[index].RXO[indexRXO].requestedGiveUnits;
				}
		
				// RXO.5, requestedDosageForm
				orc[index].RXO[indexRXO].requestedDosageForm = {};
				if (rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDosageForm.id = rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.1&apos;]; }
				if (rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDosageForm.text = rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.2&apos;]; }
				if (rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDosageForm.codingSystem = rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.3&apos;]; }
				if (rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDosageForm.altId = rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.4&apos;]; }
				if (rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDosageForm.altText = rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.5&apos;]; }
				if (rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDosageForm.altCodingSystem = rxoSeg[&apos;RXO.5&apos;][&apos;RXO.5.6&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].requestedDosageForm).length == 0) {
					delete orc[index].RXO[indexRXO].requestedDosageForm;
				}
		
				// RXO.6, providersPharmacyTreatmentInstructions
				orc[index].RXO[indexRXO].providersPharmacyTreatmentInstructions = [];
				for each (field in rxoSeg[&apos;RXO.6&apos;]) {
					var block = {};
					if (field[&apos;RXO.6.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXO.6.1&apos;]; }
					if (field[&apos;RXO.6.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXO.6.2&apos;]; }
					if (field[&apos;RXO.6.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXO.6.3&apos;]; }
					if (field[&apos;RXO.6.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXO.6.4&apos;]; }
					if (field[&apos;RXO.6.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXO.6.5&apos;]; }
					if (field[&apos;RXO.6.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXO.6.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXO[indexRXO].providersPharmacyTreatmentInstructions.push(block);
					}
				}
				if (orc[index].RXO[indexRXO].providersPharmacyTreatmentInstructions.length == 0) {
					delete orc[index].RXO[indexRXO].providersPharmacyTreatmentInstructions;
				}
		
				// RXO.7, providersAdministrationInstructions
				orc[index].RXO[indexRXO].providersAdministrationInstructions = [];
				for each (field in rxoSeg[&apos;RXO.7&apos;]) {
					var block = {};
					if (field[&apos;RXO.7.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXO.7.1&apos;]; }
					if (field[&apos;RXO.7.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXO.7.2&apos;]; }
					if (field[&apos;RXO.7.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXO.7.3&apos;]; }
					if (field[&apos;RXO.7.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXO.7.4&apos;]; }
					if (field[&apos;RXO.7.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXO.7.5&apos;]; }
					if (field[&apos;RXO.7.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXO.7.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXO[indexRXO].providersAdministrationInstructions.push(block);
					}
				}
				if (orc[index].RXO[indexRXO].providersAdministrationInstructions.length == 0) {
					delete orc[index].RXO[indexRXO].providersAdministrationInstructions;
				}
		
				// RXO.8, deliverToLocation
				if (rxoSeg[&apos;RXO.8&apos;][&apos;RXO.8.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].deliverToLocation = rxoSeg[&apos;RXO.8&apos;][&apos;RXO.8.1&apos;]; }
				
				// RXO.9, allowSubstitutions
				if (rxoSeg[&apos;RXO.9&apos;][&apos;RXO.9.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].allowSubstitutions = rxoSeg[&apos;RXO.9&apos;][&apos;RXO.9.1&apos;]; }
				
				// RXO.10, requestedDispenseCode
				orc[index].RXO[indexRXO].requestedDispenseCode = {};
				if (rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseCode.id = rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.1&apos;]; }
				if (rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseCode.text = rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.2&apos;]; }
				if (rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseCode.codingSystem = rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.3&apos;]; }
				if (rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseCode.altId = rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.4&apos;]; }
				if (rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseCode.altText = rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.5&apos;]; }
				if (rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseCode.altCodingSystem = rxoSeg[&apos;RXO.10&apos;][&apos;RXO.10.6&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].requestedDispenseCode).length == 0) {
					delete orc[index].RXO[indexRXO].requestedDispenseCode;
				}
		
				// RXO.11, requestedDispenseAmount
				if (rxoSeg[&apos;RXO.11&apos;][&apos;RXO.11.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseAmount = rxoSeg[&apos;RXO.11&apos;][&apos;RXO.11.1&apos;]; }
				
				// RXO.12, requestedDispenseUnits
				orc[index].RXO[indexRXO].requestedDispenseUnits = {};
				if (rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseUnits.id = rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.1&apos;]; }
				if (rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseUnits.text = rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.2&apos;]; }
				if (rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseUnits.codingSystem = rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.3&apos;]; }
				if (rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseUnits.altId = rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.4&apos;]; }
				if (rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseUnits.altText = rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.5&apos;]; }
				if (rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedDispenseUnits.altCodingSystem = rxoSeg[&apos;RXO.12&apos;][&apos;RXO.12.6&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].requestedDispenseUnits).length == 0) {
					delete orc[index].RXO[indexRXO].requestedDispenseUnits;
				}
		
				// RXO.13, numberOfRefills
				if (rxoSeg[&apos;RXO.13&apos;][&apos;RXO.13.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].numberOfRefills = rxoSeg[&apos;RXO.13&apos;][&apos;RXO.13.1&apos;]; }
				
				// RXO.14, orderingProvidersDeaNumber
				orc[index].RXO[indexRXO].orderingProvidersDeaNumber = {};
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.id = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.1&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.lastName = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.2&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.firstName = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.3&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.middleInitOrName = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.4&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.suffix = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.5&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.prefix = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.6&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.7&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.degree = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.7&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.8&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.sourceTable = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.8&apos;]; }
				orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningAuthority = {};
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.9&apos;][&apos;RXO.14.9.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningAuthority.id = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.9&apos;][&apos;RXO.14.9.1&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.9&apos;][&apos;RXO.14.9.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningAuthority.universalId = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.9&apos;][&apos;RXO.14.9.2&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.9&apos;][&apos;RXO.14.9.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningAuthority.universalIdType = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.9&apos;][&apos;RXO.14.9.3&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningAuthority).length == 0) {
					if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.9&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningAuthority.id = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.9&apos;]; }
					else delete orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningAuthority;
				}
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.10&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.nameTypeCode = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.10&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.11&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.identifierCheckDigit = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.11&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.12&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.codeIdentifyingCheckDigitScheme = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.12&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.13&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.identifierTypeCode = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.13&apos;]; }
				orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningFacility = {};
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.14&apos;][&apos;RXO.14.14.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningFacility.id = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.14&apos;][&apos;RXO.14.14.1&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.14&apos;][&apos;RXO.14.14.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningFacility.universalId = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.14&apos;][&apos;RXO.14.14.2&apos;]; }
				if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.14&apos;][&apos;RXO.14.14.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningFacility.universalIdType = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.14&apos;][&apos;RXO.14.14.3&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningFacility).length == 0) {
					if (rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.14&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningFacility.id = rxoSeg[&apos;RXO.14&apos;][&apos;RXO.14.14&apos;]; }
					else delete orc[index].RXO[indexRXO].orderingProvidersDeaNumber.assigningFacility;
				}
				if (Object.keys(orc[index].RXO[indexRXO].orderingProvidersDeaNumber).length == 0) {
					delete orc[index].RXO[indexRXO].orderingProvidersDeaNumber;
				}
		
				// RXO.15, pharmacistTreatmentSuppliersVerifierId
				orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId = {};
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.id = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.1&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.lastName = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.2&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.firstName = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.3&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.middleInitOrName = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.4&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.suffix = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.5&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.prefix = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.6&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.7&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.degree = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.7&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.8&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.sourceTable = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.8&apos;]; }
				orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningAuthority = {};
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.9&apos;][&apos;RXO.15.9.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningAuthority.id = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.9&apos;][&apos;RXO.15.9.1&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.9&apos;][&apos;RXO.15.9.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningAuthority.universalId = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.9&apos;][&apos;RXO.15.9.2&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.9&apos;][&apos;RXO.15.9.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningAuthority.universalIdType = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.9&apos;][&apos;RXO.15.9.3&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningAuthority).length == 0) {
					if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.9&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningAuthority.id = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.9&apos;]; }
					else delete orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningAuthority;
				}
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.10&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.nameTypeCode = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.10&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.11&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.identifierCheckDigit = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.11&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.12&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.codeIdentifyingCheckDigitScheme = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.12&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.13&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.identifierTypeCode = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.13&apos;]; }
				orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningFacility = {};
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.14&apos;][&apos;RXO.15.14.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningFacility.id = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.14&apos;][&apos;RXO.15.14.1&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.14&apos;][&apos;RXO.15.14.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningFacility.universalId = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.14&apos;][&apos;RXO.15.14.2&apos;]; }
				if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.14&apos;][&apos;RXO.15.14.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningFacility.universalIdType = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.14&apos;][&apos;RXO.15.14.3&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningFacility).length == 0) {
					if (rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.14&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningFacility.id = rxoSeg[&apos;RXO.15&apos;][&apos;RXO.15.14&apos;]; }
					else delete orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId.assigningFacility;
				}
				if (Object.keys(orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId).length == 0) {
					delete orc[index].RXO[indexRXO].pharmacistTreatmentSuppliersVerifierId;
				}
		
				// RXO.16, needsHumanReview
				if (rxoSeg[&apos;RXO.16&apos;][&apos;RXO.16.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].needsHumanReview = rxoSeg[&apos;RXO.16&apos;][&apos;RXO.16.1&apos;]; }
				
				// RXO.17, requestedGivePerTimeUnit
				if (rxoSeg[&apos;RXO.17&apos;][&apos;RXO.17.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGivePerTimeUnit = rxoSeg[&apos;RXO.17&apos;][&apos;RXO.17.1&apos;]; }
				
				// RXO.18, requestedGiveStrength
				if (rxoSeg[&apos;RXO.18&apos;][&apos;RXO.18.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveStrength = rxoSeg[&apos;RXO.18&apos;][&apos;RXO.18.1&apos;]; }
				
				// RXO.19, requestedGiveStrengthUnits
				orc[index].RXO[indexRXO].requestedGiveStrengthUnits = {};
				if (rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveStrengthUnits.id = rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.1&apos;]; }
				if (rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveStrengthUnits.text = rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.2&apos;]; }
				if (rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveStrengthUnits.codingSystem = rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.3&apos;]; }
				if (rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveStrengthUnits.altId = rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.4&apos;]; }
				if (rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveStrengthUnits.altText = rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.5&apos;]; }
				if (rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveStrengthUnits.altCodingSystem = rxoSeg[&apos;RXO.19&apos;][&apos;RXO.19.6&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].requestedGiveStrengthUnits).length == 0) {
					delete orc[index].RXO[indexRXO].requestedGiveStrengthUnits;
				}
		
				// RXO.20, indication
				orc[index].RXO[indexRXO].administrationNotes = [];
				for each (field in rxoSeg[&apos;RXO.19&apos;]) {
					var block = {};
					if (field[&apos;RXO.19.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXO.19.1&apos;]; }
					if (field[&apos;RXO.19.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXO.19.2&apos;]; }
					if (field[&apos;RXO.19.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXO.19.3&apos;]; }
					if (field[&apos;RXO.19.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXO.19.4&apos;]; }
					if (field[&apos;RXO.19.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXO.19.5&apos;]; }
					if (field[&apos;RXO.19.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXO.19.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXO[indexRXO].administrationNotes.push(block);
					}
				}
				if (orc[index].RXO[indexRXO].administrationNotes.length == 0) {
					delete orc[index].RXO[indexRXO].administrationNotes;
				}
		
				// RXO.21, requestedGiveRateAmount
				if (rxoSeg[&apos;RXO.21&apos;][&apos;RXO.21.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveRateAmount = rxoSeg[&apos;RXO.21&apos;][&apos;RXO.21.1&apos;]; }
				
				// RXO.22, requestedGiveRateUnits
				orc[index].RXO[indexRXO].requestedGiveRateUnits = {};
				if (rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveRateUnits.id = rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.1&apos;]; }
				if (rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveRateUnits.text = rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.2&apos;]; }
				if (rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveRateUnits.codingSystem = rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.3&apos;]; }
				if (rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveRateUnits.altId = rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.4&apos;]; }
				if (rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveRateUnits.altText = rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.5&apos;]; }
				if (rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].requestedGiveRateUnits.altCodingSystem = rxoSeg[&apos;RXO.22&apos;][&apos;RXO.22.6&apos;]; }
				if (Object.keys(orc[index].RXO[indexRXO].requestedGiveRateUnits).length == 0) {
					delete orc[index].RXO[indexRXO].requestedGiveRateUnits;
				}
		
				// NTE (RXO)
				var nteGroup = getSegmentsAfter(msg,rxoSeg,&apos;NTE&apos;,true);
				if (nteGroup.length &gt; 0) {
					orc[index].RXO[indexRXO].NTE = [];
					var indexNTE = 0;
					for each (nteSeg in nteGroup) {
						orc[index].RXO[indexRXO].NTE[indexNTE] = {};
		
						// NTE.1, setId
						if (nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].NTE[indexNTE].setId = nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }
		
						// NTE.2, sourceOfComment
						if (nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].NTE[indexNTE].sourceOfComment = nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }
		
						// NTE.3, comment
						orc[index].RXO[indexRXO].NTE[indexNTE].comment = [];
						for each (field in nteSeg[&apos;NTE.3&apos;]) {
							var block = {};
							if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
								orc[index].RXO[indexRXO].NTE[indexNTE].comment.push(field[&apos;NTE.3.1&apos;]);
							}
						}
						if (orc[index].RXO[indexRXO].NTE[indexNTE].comment.length == 0) {
							delete orc[index].RXO[indexRXO].NTE[indexNTE].comment;
						}
		
						// clean up NTE and increment index
						if (Object.keys(orc[index].RXO[indexRXO].NTE[indexNTE]).length == 0) {
							delete orc[index].RXO[indexRXO].NTE[indexNTE];
						} else {
							indexNTE++;
						}
					}
				}
		
				// RXR (RXO)
				var rxrGroup = getSegmentsAfter(msg,rxoSeg,&apos;RXR&apos;,false, [&apos;RXO&apos;, &apos;RXE&apos;, &apos;RXA&apos;]);
				if (rxrGroup.length &gt; 0) {

					orc[index].RXO[indexRXO].RXR = [];
					var indexRXR = 0;
					for each (rxrSeg in rxrGroup) {
						orc[index].RXO[indexRXO].RXR[indexRXR] = {};
			
						// RXR.1, route
						orc[index].RXO[indexRXO].RXR[indexRXR].route = {};
						if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].route.id = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.1&apos;]; }
						if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].route.text = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.2&apos;]; }
						if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].route.codingSystem = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.3&apos;]; }
						if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].route.altId = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.4&apos;]; }
						if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].route.altText = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.5&apos;]; }
						if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].route.altCodingSystem = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.6&apos;]; }
						if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].route).length == 0) {
							delete orc[index].RXO[indexRXO].RXR[indexRXR].route;
						}
			
						// RXR.2, site
						orc[index].RXO[indexRXO].RXR[indexRXR].route = {};
						if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].site.id = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.1&apos;]; }
						if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].site.text = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.2&apos;]; }
						if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].site.codingSystem = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.3&apos;]; }
						if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].site.altId = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.4&apos;]; }
						if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].site.altText = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.5&apos;]; }
						if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].site.altCodingSystem = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.6&apos;]; }
						if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].site).length == 0) {
							delete orc[index].RXO[indexRXO].RXR[indexRXR].site;
						}
			
						// RXR.3, administrationDevice
						orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice = {};
						if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice.id = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.1&apos;]; }
						if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice.text = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.2&apos;]; }
						if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice.codingSystem = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.3&apos;]; }
						if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice.altId = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.4&apos;]; }
						if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice.altText = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.5&apos;]; }
						if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice.altCodingSystem = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.6&apos;]; }
						if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice).length == 0) {
							delete orc[index].RXO[indexRXO].RXR[indexRXR].administrationDevice;
						}
			
						// RXR.4, administrationMethod
						orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod = {};
						if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod.id = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.1&apos;]; }
						if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod.text = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.2&apos;]; }
						if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod.codingSystem = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.3&apos;]; }
						if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod.altId = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.4&apos;]; }
						if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod.altText = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.5&apos;]; }
						if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod.altCodingSystem = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.6&apos;]; }
						if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod).length == 0) {
							delete orc[index].RXO[indexRXO].RXR[indexRXR].administrationMethod;
						}

						// RXC (RXR)
						var rxcGroup = getSegmentsAfter(msg,rxrSeg,&apos;RXC&apos;,true);
						if (rxcGroup.length &gt; 0) {
							orc[index].RXO[indexRXO].RXR[indexRXR].RXC = [];
							var indexRXC = 0;
							for each (rxcSeg in rxcGroup) {
								orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC] = {};
				
								// RXC.1, rXComponentType
								if (rxcSeg[&apos;RXC.1&apos;][&apos;RXC.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].RXComponentType = rxcSeg[&apos;RXC.1&apos;][&apos;RXC.1.1&apos;]; }
				
								// RXC.2, componentCode
								orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode = {};
								if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode.id = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.1&apos;]; }
								if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode.text = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.2&apos;]; }
								if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode.codingSystem = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.3&apos;]; }
								if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode.altId = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.4&apos;]; }
								if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode.altText = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.5&apos;]; }
								if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode.altCodingSystem = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.6&apos;]; }
								if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode).length == 0) {
									delete orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentCode;
								}
				
								// RXC.3, componentAmount
								if (rxcSeg[&apos;RXC.3&apos;][&apos;RXC.3.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentAmount = rxcSeg[&apos;RXC.3&apos;][&apos;RXC.3.1&apos;]; }
				
								// RXC.4, componentUnits
								orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits = {};
								if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits.id = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.1&apos;]; }
								if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits.text = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.2&apos;]; }
								if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits.codingSystem = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.3&apos;]; }
								if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits.altId = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.4&apos;]; }
								if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits.altText = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.5&apos;]; }
								if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits.altCodingSystem = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.6&apos;]; }
								if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits).length == 0) {
									delete orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentUnits;
								}
				
								// RXC.5, componentStrength
								if (rxcSeg[&apos;RXC.5&apos;][&apos;RXC.5.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrength = rxcSeg[&apos;RXC.5&apos;][&apos;RXC.5.1&apos;]; }
				
								// RXC.6, componentStrengthUnits
								orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits = {};
								if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits.id = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.1&apos;]; }
								if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.2&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits.text = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.2&apos;]; }
								if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.3&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits.codingSystem = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.3&apos;]; }
								if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.4&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits.altId = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.4&apos;]; }
								if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.5&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits.altText = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.5&apos;]; }
								if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.6&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits.altCodingSystem = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.6&apos;]; }
								if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits).length == 0) {
									delete orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].componentStrengthUnits;
								}

								// NTE (RXC)
								var nteGroup = getSegmentsAfter(msg,rxcSeg,&apos;NTE&apos;,false, [&apos;RXO&apos;, &apos;RXE&apos;, &apos;RXA&apos;]);
								if (nteGroup.length &gt; 0) {
									orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE = [];
									var indexNTE = 0;
									for each (nteSeg in nteGroup) {
										orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE] = {};
						
										// NTE.1, setId
										if (nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE].setId = nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }
						
										// NTE.2, sourceOfComment
										if (nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE].sourceOfComment = nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }
						
										// NTE.3, comment
										orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE].comment = [];
										for each (field in nteSeg[&apos;NTE.3&apos;]) {
											var block = {};
											if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
												orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE].comment.push(field[&apos;NTE.3.1&apos;]);
											}
										}
										if (orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE].comment.length == 0) {
											delete orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE].comment;
										}
						
										// clean up NTE and increment index
										if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE]).length == 0) {
											delete orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC].NTE[indexNTE];
										} else {
											indexNTE++;
										}
									}
								}
				
								// clean up RXC and increment index
								if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC]).length == 0) {
									delete orc[index].RXO[indexRXO].RXR[indexRXR].RXC[indexRXC];
								} else {
									indexRXC++;
								}
							}
						}
			
						// clean up RXR and incremend index
						if (Object.keys(orc[index].RXO[indexRXO].RXR[indexRXR]).length == 0) {
							delete orc[index].RXO[indexRXO].RXR[indexRXR];
						} else {
							indexRXR++;
						}
					}
				}
		
				// clean up RXO and increment index
				if (Object.keys(orc[index].RXO[indexRXO]).length == 0) {
					delete orc[index].RXO[indexRXO];
				} else {
					indexRXO++;
				}
			}

			// Clean up the RXO object if it&apos;s empty
			if (orc[index].RXO[0] == null){
				delete orc[index].RXO;
			}
		}
		
		// Increment the ORC index
		index++;
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// Re-add the ORC segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>7</sequenceNumber>
          <name>--RXE (Pharmacy Encoded Order), RXR (Pharmacy Route), RXC (Pharmacy Component Order) Segments - REQUIRES ORC MAPPING STEP ABOVE</name>
          <script>// Pull out the ORC JSON to embed the RXE and other segments in
var orc = JSON.parse($(&apos;hl7JSON&apos;)).content.ORC;

// ORC iteration, in order to grab related RXO&apos;s
if (msg[&apos;ORC&apos;].length() &gt; 0) {

	// ORC is a required to have a RXO, but if the ORC was blank and was removed from the JSON, just create a new one to add the RXO into
	if (!orc) {
		orc = [{}];
	}

	var index = 0;
	for each (seg in msg.ORC) {

		// RXE
		if (msg[&apos;RXE&apos;].length() &gt; 0) {
			orc[index].RXE = [];
			var indexRXE = 0;
			for each (rxeSeg in msg.RXE) {
				orc[index].RXE[indexRXE] = {};
		
				// RXE.1, timingQuantity
				orc[index].RXE[indexRXE].timingQuantity = {};
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.quantity = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.1&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.interval = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.2&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.duration = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.3&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.startDateTime = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.4&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.endDateTime = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.5&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.priority = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.6&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.7&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.condition = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.7&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.8&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.text = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.8&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.9&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.conjunction = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.9&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.10&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.orderSequencing = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.10&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].timingQuantity).length == 0) {
					delete orc[index].RXE[indexRXE].timingQuantity;
				}
		
				// RXE.2, giveCode
				orc[index].RXE[indexRXE].giveCode = {};
				if (rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveCode.id = rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.1&apos;]; }
				if (rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveCode.text = rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.2&apos;]; }
				if (rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveCode.codingSystem = rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.3&apos;]; }
				if (rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveCode.altId = rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.4&apos;]; }
				if (rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveCode.altText = rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.5&apos;]; }
				if (rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveCode.altCodingSystem = rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.6&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].giveCode).length == 0) {
					delete orc[index].RXE[indexRXE].giveCode;
				}
		
				// RXE.3, giveAmountMinimum
				if (rxeSeg[&apos;RXE.3&apos;][&apos;RXE.3.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveAmountMinimum = rxeSeg[&apos;RXE.3&apos;][&apos;RXE.3.1&apos;]; }
		
				// RXE.4, giveAmountMaximum
				if (rxeSeg[&apos;RXE.4&apos;][&apos;RXE.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveAmountMaximum = rxeSeg[&apos;RXE.4&apos;][&apos;RXE.4.1&apos;]; }
		
				// RXE.5, giveUnits
				orc[index].RXE[indexRXE].giveUnits = {};
				if (rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveUnits.id = rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.1&apos;]; }
				if (rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveUnits.text = rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.2&apos;]; }
				if (rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveUnits.codingSystem = rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.3&apos;]; }
				if (rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveUnits.altId = rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.4&apos;]; }
				if (rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveUnits.altText = rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.5&apos;]; }
				if (rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveUnits.altCodingSystem = rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.6&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].giveUnits).length == 0) {
					delete orc[index].RXE[indexRXE].giveUnits;
				}
		
				// RXE.6, giveDosageForm
				orc[index].RXE[indexRXE].giveDosageForm = {};
				if (rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveDosageForm.id = rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.1&apos;]; }
				if (rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveDosageForm.text = rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.2&apos;]; }
				if (rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveDosageForm.codingSystem = rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.3&apos;]; }
				if (rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveDosageForm.altId = rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.4&apos;]; }
				if (rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveDosageForm.altText = rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.5&apos;]; }
				if (rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveDosageForm.altCodingSystem = rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.6&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].giveDosageForm).length == 0) {
					delete orc[index].RXE[indexRXE].giveDosageForm;
				}
		
				// RXE.7, providersAdministrationInstructions
				orc[index].RXE[indexRXE].providersAdministrationInstructions = [];
				for each (field in rxeSeg[&apos;RXE.7&apos;]) {
					var block = {};
					if (field[&apos;RXE.7.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXE.7.1&apos;]; }
					if (field[&apos;RXE.7.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXE.7.2&apos;]; }
					if (field[&apos;RXE.7.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXE.7.3&apos;]; }
					if (field[&apos;RXE.7.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXE.7.4&apos;]; }
					if (field[&apos;RXE.7.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXE.7.5&apos;]; }
					if (field[&apos;RXE.7.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXE.7.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXE[indexRXE].providersAdministrationInstructions.push(block);
					}
				}
				if (orc[index].RXE[indexRXE].providersAdministrationInstructions.length == 0) {
					delete orc[index].RXE[indexRXE].providersAdministrationInstructions;
				}
		
				// RXE.8, deliverToLocation
				orc[index].RXE[indexRXE].deliverToLocation = {};
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.pointOfCare = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.1&apos;]; }
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.room = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.2&apos;]; }
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.bed = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.3&apos;]; }
				orc[index].RXE[indexRXE].deliverToLocation.facility = {};
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.4&apos;][&apos;RXE.8.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.facility.nameSpaceId =  rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.4&apos;][&apos;RXE.8.4.1&apos;]; }
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.4&apos;][&apos;RXE.8.4.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.facility.universalId =  rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.4&apos;][&apos;RXE.8.4.2&apos;]; }
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.4&apos;][&apos;RXE.8.4.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.facility.universalIdType =  rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.4&apos;][&apos;RXE.8.4.3&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].deliverToLocation.facility).length == 0) {
					if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.facility.nameSpaceId = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.4&apos;]; }
					else delete orc[index].RXE[indexRXE].deliverToLocation.facility;
				}
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.locationStatus = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.5&apos;]; }
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.personLocationType = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.6&apos;]; }
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.7&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.building = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.7&apos;]; }
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.8&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.floor = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.8&apos;]; }
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.9&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.locationDescription = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.9&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].deliverToLocation).length == 0) {
					delete orc[index].RXE[indexRXE].deliverToLocation;
				}
		
				// RXE.9, substitutionStatus
				if (rxeSeg[&apos;RXE.9&apos;][&apos;RXE.9.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].substitutionStatus = rxeSeg[&apos;RXE.9&apos;][&apos;RXE.9.1&apos;]; }
		
				// RXE.10, dispenseAmount
				if (rxeSeg[&apos;RXE.10&apos;][&apos;RXE.10.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispenseAmount = rxeSeg[&apos;RXE.10&apos;][&apos;RXE.10.1&apos;]; }
		
				// RXE.11, dispenseUnits
				orc[index].RXE[indexRXE].dispenseUnits = {};
				if (rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispenseUnits.id = rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.1&apos;]; }
				if (rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispenseUnits.text = rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.2&apos;]; }
				if (rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispenseUnits.codingSystem = rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.3&apos;]; }
				if (rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispenseUnits.altId = rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.4&apos;]; }
				if (rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispenseUnits.altText = rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.5&apos;]; }
				if (rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispenseUnits.altCodingSystem = rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.6&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].dispenseUnits).length == 0) {
					delete orc[index].RXE[indexRXE].dispenseUnits;
				}
		
				// RXE.12, numberofRefills
				if (rxeSeg[&apos;RXE.12&apos;][&apos;RXE.12.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].numberofRefills = rxeSeg[&apos;RXE.12&apos;][&apos;RXE.12.1&apos;]; }
		
				// RXE.13, orderingProvidersDeaNumber
				orc[index].RXE[indexRXE].orderingProvidersDeaNumber = {};
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.id = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.1&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.lastName = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.2&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.firstName = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.3&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.middleInitOrName = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.4&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.suffix = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.5&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.prefix = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.6&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.7&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.degree = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.7&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.8&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.sourceTable = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.8&apos;]; }
				orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningAuthority = {};
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.9&apos;][&apos;RXE.13.9.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningAuthority.id = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.9&apos;][&apos;RXE.13.9.1&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.9&apos;][&apos;RXE.13.9.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningAuthority.universalId = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.9&apos;][&apos;RXE.13.9.2&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.9&apos;][&apos;RXE.13.9.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningAuthority.universalIdType = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.9&apos;][&apos;RXE.13.9.3&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningAuthority).length == 0) {
					if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.9&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningAuthority.id = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.9&apos;]; }
					else delete orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningAuthority;
				}
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.10&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.nameTypeCode = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.10&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.11&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.identifierCheckDigit = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.11&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.12&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.codeIdentifyingCheckDigitScheme = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.12&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.13&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.identifierTypeCode = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.13&apos;]; }
				orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningFacility = {};
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.14&apos;][&apos;RXE.13.14.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningFacility.id = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.14&apos;][&apos;RXE.13.14.1&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.14&apos;][&apos;RXE.13.14.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningFacility.universalId = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.14&apos;][&apos;RXE.13.14.2&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.14&apos;][&apos;RXE.13.14.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningFacility.universalIdType = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.14&apos;][&apos;RXE.13.14.3&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningFacility).length == 0) {
					if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.14&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningFacility.id = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.14&apos;]; }
					else delete orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningFacility;
				}
				if (Object.keys(orc[index].RXE[indexRXE].orderingProvidersDeaNumber).length == 0) {
					delete orc[index].RXE[indexRXE].orderingProvidersDeaNumber;
				}
		
				// RXE.14, pharmacistTreatmentSuppliersVerifierID
				orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID = {};
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.id = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.1&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.lastName = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.2&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.firstName = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.3&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.middleInitOrName = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.4&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.suffix = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.5&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.prefix = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.6&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.7&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.degree = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.7&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.8&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.sourceTable = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.8&apos;]; }
				orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningAuthority = {};
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.9&apos;][&apos;RXE.14.9.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningAuthority.id = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.9&apos;][&apos;RXE.14.9.1&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.9&apos;][&apos;RXE.14.9.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningAuthority.universalId = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.9&apos;][&apos;RXE.14.9.2&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.9&apos;][&apos;RXE.14.9.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningAuthority.universalIdType = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.9&apos;][&apos;RXE.14.9.3&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningAuthority).length == 0) {
					if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.9&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningAuthority.id = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.9&apos;]; }
					else delete orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningAuthority;
				}
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.10&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.nameTypeCode = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.10&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.11&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.identifierCheckDigit = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.11&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.12&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.codeIdentifyingCheckDigitScheme = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.12&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.13&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.identifierTypeCode = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.13&apos;]; }
				orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningFacility = {};
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.14&apos;][&apos;RXE.14.14.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningFacility.id = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.14&apos;][&apos;RXE.14.14.1&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.14&apos;][&apos;RXE.14.14.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningFacility.universalId = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.14&apos;][&apos;RXE.14.14.2&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.14&apos;][&apos;RXE.14.14.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningFacility.universalIdType = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.14&apos;][&apos;RXE.14.14.3&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningFacility).length == 0) {
					if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.14&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningFacility.id = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.14&apos;]; }
					else delete orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningFacility;
				}
				if (Object.keys(orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID).length == 0) {
					delete orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID;
				}
				// RXE.15, prescriptionNumber
				if (rxeSeg[&apos;RXE.15&apos;][&apos;RXE.15.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].prescriptionNumber = rxeSeg[&apos;RXE.15&apos;][&apos;RXE.15.1&apos;]; }
		
				// RXE.16, numberOfRefillsRemaining
				if (rxeSeg[&apos;RXE.16&apos;][&apos;RXE.16.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].numberOfRefillsRemaining = rxeSeg[&apos;RXE.16&apos;][&apos;RXE.16.1&apos;]; }
		
				// RXE.17, numberOfRefillsDosesDispensed
				if (rxeSeg[&apos;RXE.17&apos;][&apos;RXE.17.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].numberOfRefillsDosesDispensed = rxeSeg[&apos;RXE.17&apos;][&apos;RXE.17.1&apos;]; }
		
				// RXE.18, dtOfMostRecentRefillOrDoseDispensed
				if (rxeSeg[&apos;RXE.18&apos;][&apos;RXE.18.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dtOfMostRecentRefillOrDoseDispensed = rxeSeg[&apos;RXE.18&apos;][&apos;RXE.18.1&apos;]; }
		
				// RXE.19, totalDailyDose
				orc[index].RXE[indexRXE].totalDailyDose = {};
				if (rxeSeg[&apos;RXE.19&apos;][&apos;RXE.19.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].totalDailyDose.quantity = rxeSeg[&apos;RXE.19&apos;][&apos;RXE.19.1&apos;]; }
				if (rxeSeg[&apos;RXE.19&apos;][&apos;RXE.19.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].totalDailyDose.units = rxeSeg[&apos;RXE.19&apos;][&apos;RXE.19.2&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].totalDailyDose).length == 0) {
					delete orc[index].RXE[indexRXE].totalDailyDose;
				}
				// RXE.20, needsHumanReview
				if (rxeSeg[&apos;RXE.20&apos;][&apos;RXE.20.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].needsHumanReview = rxeSeg[&apos;RXE.20&apos;][&apos;RXE.20.1&apos;]; }
		
				// RXE.21, pharmacyTreatmentSuppliersSpecialDispensingInstructions
				orc[index].RXE[indexRXE].pharmacyTreatmentSuppliersSpecialDispensingInstructions = [];
				for each (field in rxeSeg[&apos;RXE.21&apos;]) {
					var block = {};
					if (field[&apos;RXE.21.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXE.21.1&apos;]; }
					if (field[&apos;RXE.21.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXE.21.2&apos;]; }
					if (field[&apos;RXE.21.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXE.21.3&apos;]; }
					if (field[&apos;RXE.21.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXE.21.4&apos;]; }
					if (field[&apos;RXE.21.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXE.21.5&apos;]; }
					if (field[&apos;RXE.21.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXE.21.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXE[indexRXE].pharmacyTreatmentSuppliersSpecialDispensingInstructions.push(block);
					}
				}
				if (orc[index].RXE[indexRXE].pharmacyTreatmentSuppliersSpecialDispensingInstructions.length == 0) {
					delete orc[index].RXE[indexRXE].pharmacyTreatmentSuppliersSpecialDispensingInstructions;
				}
		
				// RXE.22, givePerTimeUnit
				if (rxeSeg[&apos;RXE.22&apos;][&apos;RXE.22.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].givePerTimeUnit = rxeSeg[&apos;RXE.22&apos;][&apos;RXE.22.1&apos;]; }
		
				// RXE.23, giveRateAmount
				if (rxeSeg[&apos;RXE.23&apos;][&apos;RXE.23.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveRateAmount = rxeSeg[&apos;RXE.23&apos;][&apos;RXE.23.1&apos;]; }
		
				// RXE.24, giveRateUnits
				orc[index].RXE[indexRXE].giveRateUnits = {};
				if (rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveRateUnits.id = rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.1&apos;]; }
				if (rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveRateUnits.text = rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.2&apos;]; }
				if (rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveRateUnits.codingSystem = rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.3&apos;]; }
				if (rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveRateUnits.altId = rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.4&apos;]; }
				if (rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveRateUnits.altText = rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.5&apos;]; }
				if (rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveRateUnits.altCodingSystem = rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.6&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].giveRateUnits).length == 0) {
					delete orc[index].RXE[indexRXE].giveRateUnits;
				}
		
				// RXE.25, giveStrength
				if (rxeSeg[&apos;RXE.25&apos;][&apos;RXE.25.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveStrength = rxeSeg[&apos;RXE.25&apos;][&apos;RXE.25.1&apos;]; }
		
				// RXE.26, giveStrengthUnits
				orc[index].RXE[indexRXE].giveStrengthUnits = {};
				if (rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveStrengthUnits.id = rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.1&apos;]; }
				if (rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveStrengthUnits.text = rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.2&apos;]; }
				if (rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveStrengthUnits.codingSystem = rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.3&apos;]; }
				if (rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveStrengthUnits.altId = rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.4&apos;]; }
				if (rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveStrengthUnits.altText = rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.5&apos;]; }
				if (rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveStrengthUnits.altCodingSystem = rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.6&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].giveStrengthUnits).length == 0) {
					delete orc[index].RXE[indexRXE].giveStrengthUnits;
				}
		
				// RXE.27, giveIndication
				orc[index].RXE[indexRXE].giveIndication = [];
				for each (field in rxeSeg[&apos;RXE.27&apos;]) {
					var block = {};
					if (field[&apos;RXE.27.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXE.27.1&apos;]; }
					if (field[&apos;RXE.27.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXE.27.2&apos;]; }
					if (field[&apos;RXE.27.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXE.27.3&apos;]; }
					if (field[&apos;RXE.27.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXE.27.4&apos;]; }
					if (field[&apos;RXE.27.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXE.27.5&apos;]; }
					if (field[&apos;RXE.27.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXE.27.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXE[indexRXE].giveIndication.push(block);
					}
				}
				if (orc[index].RXE[indexRXE].giveIndication.length == 0) {
					delete orc[index].RXE[indexRXE].giveIndication;
				}
		
				// RXE.28, dispensePackageSize
				if (rxeSeg[&apos;RXE.28&apos;][&apos;RXE.28.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispensePackageSize = rxeSeg[&apos;RXE.28&apos;][&apos;RXE.28.1&apos;]; }
		
				// RXE.29, dispensePackageSizeUnit
				orc[index].RXE[indexRXE].dispensePackageSizeUnit = {};
				if (rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispensePackageSizeUnit.id = rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.1&apos;]; }
				if (rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispensePackageSizeUnit.text = rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.2&apos;]; }
				if (rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispensePackageSizeUnit.codingSystem = rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.3&apos;]; }
				if (rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispensePackageSizeUnit.altId = rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.4&apos;]; }
				if (rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispensePackageSizeUnit.altText = rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.5&apos;]; }
				if (rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispensePackageSizeUnit.altCodingSystem = rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.6&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].dispensePackageSizeUnit).length == 0) {
					delete orc[index].RXE[indexRXE].dispensePackageSizeUnit;
				}
		
				// RXE.30, dispensePackageMethod
				if (rxeSeg[&apos;RXE.30&apos;][&apos;RXE.30.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispensePackageMethod = rxeSeg[&apos;RXE.30&apos;][&apos;RXE.30.1&apos;]; }
		
				// RXR (RXE)
				var rxrGroup = getSegmentsAfter(msg,rxeSeg,&apos;RXR&apos;,false, [&apos;RXE&apos;, &apos;RXA&apos;]);
				if (rxrGroup.length &gt; 0) {

					rxrSeg = rxrGroup[0];
					
					orc[index].RXE[indexRXE].rxr = {};
		
					// RXR.1, route
					orc[index].RXE[indexRXE].rxr.route = {};
					if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.route.id = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.1&apos;]; }
					if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.route.text = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.2&apos;]; }
					if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.route.codingSystem = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.3&apos;]; }
					if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.route.altId = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.4&apos;]; }
					if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.route.altText = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.5&apos;]; }
					if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.route.altCodingSystem = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.6&apos;]; }
					if (Object.keys(orc[index].RXE[indexRXE].rxr.route).length == 0) {
						delete orc[index].RXE[indexRXE].rxr.route;
					}
		
					// RXR.2, site
					orc[index].RXE[indexRXE].rxr.site = {};
					if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.site.id = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.1&apos;]; }
					if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.site.text = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.2&apos;]; }
					if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.site.codingSystem = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.3&apos;]; }
					if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.site.altId = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.4&apos;]; }
					if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.site.altText = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.5&apos;]; }
					if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.site.altCodingSystem = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.6&apos;]; }
					if (Object.keys(orc[index].RXE[indexRXE].rxr.site).length == 0) {
						delete orc[index].RXE[indexRXE].rxr.site;
					}
		
					// RXR.3, administrationDevice
					orc[index].RXE[indexRXE].rxr.administrationDevice = {};
					if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationDevice.id = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.1&apos;]; }
					if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationDevice.text = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.2&apos;]; }
					if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationDevice.codingSystem = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.3&apos;]; }
					if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationDevice.altId = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.4&apos;]; }
					if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationDevice.altText = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.5&apos;]; }
					if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationDevice.altCodingSystem = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.6&apos;]; }
					if (Object.keys(orc[index].RXE[indexRXE].rxr.administrationDevice).length == 0) {
						delete orc[index].RXE[indexRXE].rxr.administrationDevice;
					}
		
					// RXR.4, administrationMethod
					orc[index].RXE[indexRXE].rxr.administrationMethod = {};
					if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationMethod.id = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.1&apos;]; }
					if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationMethod.text = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.2&apos;]; }
					if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationMethod.codingSystem = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.3&apos;]; }
					if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationMethod.altId = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.4&apos;]; }
					if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationMethod.altText = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.5&apos;]; }
					if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationMethod.altCodingSystem = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.6&apos;]; }
					if (Object.keys(orc[index].RXE[indexRXE].rxr.administrationMethod).length == 0) {
						delete orc[index].RXE[indexRXE].rxr.administrationMethod;
					}
		
					// clean up RXR
					if (Object.keys(orc[index].RXE[indexRXE].rxr).length == 0) {
						delete orc[index].RXE[indexRXE].rxr;
					}
				}
		
				// RXC (RXE)
				var rxcGroup = getSegmentsAfter(msg,rxeSeg,&apos;RXC&apos;,true);
				if (rxcGroup.length &gt; 0) {
					orc[index].RXE[indexRXE].RXC = [];
					var indexRXC = 0;
					for each (rxcSeg in rxcGroup) {
						orc[index].RXE[indexRXE].RXC[indexRXC] = {};
		
						// RXC.1, rXComponentType
						if (rxcSeg[&apos;RXC.1&apos;][&apos;RXC.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].RXComponentType = rxcSeg[&apos;RXC.1&apos;][&apos;RXC.1.1&apos;]; }
		
						// RXC.2, componentCode
						orc[index].RXE[indexRXE].RXC[indexRXC].componentCode = {};
						if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentCode.id = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.1&apos;]; }
						if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentCode.text = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.2&apos;]; }
						if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentCode.codingSystem = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.3&apos;]; }
						if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentCode.altId = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.4&apos;]; }
						if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentCode.altText = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.5&apos;]; }
						if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentCode.altCodingSystem = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.6&apos;]; }
						if (Object.keys(orc[index].RXE[indexRXE].RXC[indexRXC].componentCode).length == 0) {
							delete orc[index].RXE[indexRXE].RXC[indexRXC].componentCode;
						}
		
						// RXC.3, componentAmount
						if (rxcSeg[&apos;RXC.3&apos;][&apos;RXC.3.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentAmount = rxcSeg[&apos;RXC.3&apos;][&apos;RXC.3.1&apos;]; }
		
						// RXC.4, componentUnits
						orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits = {};
						if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits.id = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.1&apos;]; }
						if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits.text = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.2&apos;]; }
						if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits.codingSystem = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.3&apos;]; }
						if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits.altId = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.4&apos;]; }
						if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits.altText = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.5&apos;]; }
						if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits.altCodingSystem = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.6&apos;]; }
						if (Object.keys(orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits).length == 0) {
							delete orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits;
						}
		
						// RXC.5, componentStrength
						if (rxcSeg[&apos;RXC.5&apos;][&apos;RXC.5.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentStrength = rxcSeg[&apos;RXC.5&apos;][&apos;RXC.5.1&apos;]; }
		
						// RXC.6, componentStrengthUnits
						orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits = {};
						if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits.id = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.1&apos;]; }
						if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits.text = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.2&apos;]; }
						if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits.codingSystem = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.3&apos;]; }
						if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits.altId = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.4&apos;]; }
						if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits.altText = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.5&apos;]; }
						if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits.altCodingSystem = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.6&apos;]; }
						if (Object.keys(orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits).length == 0) {
							delete orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits;
						}
		
						// clean up RXC and increment index
						if (Object.keys(orc[index].RXE[indexRXE].RXC[indexRXC]).length == 0) {
							delete orc[index].RXE[indexRXE].RXC[indexRXC];
						} else {
							indexRXC++;
						}
					}
				}
		
				// clean up RXE and increment index
				if (Object.keys(orc[index].RXE[indexRXE]).length == 0) {
					delete orc[index].RXE[indexRXE];
				} else {
					indexRXE++;
				}
			}

			// Clean up the RXE object if it&apos;s empty
			if (orc[index].RXE[0] == null){
				delete orc[index].RXE;
			}
		}
		
		// Increment the ORC index
		index++;
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// Re-add the ORC segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// Pull out the ORC JSON to embed the RXE and other segments in
var orc = JSON.parse($(&apos;hl7JSON&apos;)).content.ORC;

// ORC iteration, in order to grab related RXO&apos;s
if (msg[&apos;ORC&apos;].length() &gt; 0) {

	// ORC is a required to have a RXO, but if the ORC was blank and was removed from the JSON, just create a new one to add the RXO into
	if (!orc) {
		orc = [{}];
	}

	var index = 0;
	for each (seg in msg.ORC) {

		// RXE
		if (msg[&apos;RXE&apos;].length() &gt; 0) {
			orc[index].RXE = [];
			var indexRXE = 0;
			for each (rxeSeg in msg.RXE) {
				orc[index].RXE[indexRXE] = {};
		
				// RXE.1, timingQuantity
				orc[index].RXE[indexRXE].timingQuantity = {};
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.quantity = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.1&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.interval = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.2&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.duration = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.3&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.startDateTime = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.4&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.endDateTime = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.5&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.priority = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.6&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.7&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.condition = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.7&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.8&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.text = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.8&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.9&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.conjunction = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.9&apos;]; }
				if (rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.10&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].timingQuantity.orderSequencing = rxeSeg[&apos;RXE.1&apos;][&apos;RXE.1.10&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].timingQuantity).length == 0) {
					delete orc[index].RXE[indexRXE].timingQuantity;
				}
		
				// RXE.2, giveCode
				orc[index].RXE[indexRXE].giveCode = {};
				if (rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveCode.id = rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.1&apos;]; }
				if (rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveCode.text = rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.2&apos;]; }
				if (rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveCode.codingSystem = rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.3&apos;]; }
				if (rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveCode.altId = rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.4&apos;]; }
				if (rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveCode.altText = rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.5&apos;]; }
				if (rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveCode.altCodingSystem = rxeSeg[&apos;RXE.2&apos;][&apos;RXE.2.6&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].giveCode).length == 0) {
					delete orc[index].RXE[indexRXE].giveCode;
				}
		
				// RXE.3, giveAmountMinimum
				if (rxeSeg[&apos;RXE.3&apos;][&apos;RXE.3.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveAmountMinimum = rxeSeg[&apos;RXE.3&apos;][&apos;RXE.3.1&apos;]; }
		
				// RXE.4, giveAmountMaximum
				if (rxeSeg[&apos;RXE.4&apos;][&apos;RXE.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveAmountMaximum = rxeSeg[&apos;RXE.4&apos;][&apos;RXE.4.1&apos;]; }
		
				// RXE.5, giveUnits
				orc[index].RXE[indexRXE].giveUnits = {};
				if (rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveUnits.id = rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.1&apos;]; }
				if (rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveUnits.text = rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.2&apos;]; }
				if (rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveUnits.codingSystem = rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.3&apos;]; }
				if (rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveUnits.altId = rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.4&apos;]; }
				if (rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveUnits.altText = rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.5&apos;]; }
				if (rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveUnits.altCodingSystem = rxeSeg[&apos;RXE.5&apos;][&apos;RXE.5.6&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].giveUnits).length == 0) {
					delete orc[index].RXE[indexRXE].giveUnits;
				}
		
				// RXE.6, giveDosageForm
				orc[index].RXE[indexRXE].giveDosageForm = {};
				if (rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveDosageForm.id = rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.1&apos;]; }
				if (rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveDosageForm.text = rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.2&apos;]; }
				if (rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveDosageForm.codingSystem = rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.3&apos;]; }
				if (rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveDosageForm.altId = rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.4&apos;]; }
				if (rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveDosageForm.altText = rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.5&apos;]; }
				if (rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveDosageForm.altCodingSystem = rxeSeg[&apos;RXE.6&apos;][&apos;RXE.6.6&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].giveDosageForm).length == 0) {
					delete orc[index].RXE[indexRXE].giveDosageForm;
				}
		
				// RXE.7, providersAdministrationInstructions
				orc[index].RXE[indexRXE].providersAdministrationInstructions = [];
				for each (field in rxeSeg[&apos;RXE.7&apos;]) {
					var block = {};
					if (field[&apos;RXE.7.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXE.7.1&apos;]; }
					if (field[&apos;RXE.7.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXE.7.2&apos;]; }
					if (field[&apos;RXE.7.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXE.7.3&apos;]; }
					if (field[&apos;RXE.7.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXE.7.4&apos;]; }
					if (field[&apos;RXE.7.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXE.7.5&apos;]; }
					if (field[&apos;RXE.7.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXE.7.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXE[indexRXE].providersAdministrationInstructions.push(block);
					}
				}
				if (orc[index].RXE[indexRXE].providersAdministrationInstructions.length == 0) {
					delete orc[index].RXE[indexRXE].providersAdministrationInstructions;
				}
		
				// RXE.8, deliverToLocation
				orc[index].RXE[indexRXE].deliverToLocation = {};
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.pointOfCare = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.1&apos;]; }
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.room = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.2&apos;]; }
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.bed = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.3&apos;]; }
				orc[index].RXE[indexRXE].deliverToLocation.facility = {};
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.4&apos;][&apos;RXE.8.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.facility.nameSpaceId =  rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.4&apos;][&apos;RXE.8.4.1&apos;]; }
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.4&apos;][&apos;RXE.8.4.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.facility.universalId =  rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.4&apos;][&apos;RXE.8.4.2&apos;]; }
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.4&apos;][&apos;RXE.8.4.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.facility.universalIdType =  rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.4&apos;][&apos;RXE.8.4.3&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].deliverToLocation.facility).length == 0) {
					if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.facility.nameSpaceId = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.4&apos;]; }
					else delete orc[index].RXE[indexRXE].deliverToLocation.facility;
				}
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.locationStatus = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.5&apos;]; }
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.personLocationType = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.6&apos;]; }
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.7&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.building = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.7&apos;]; }
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.8&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.floor = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.8&apos;]; }
				if (rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.9&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].deliverToLocation.locationDescription = rxeSeg[&apos;RXE.8&apos;][&apos;RXE.8.9&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].deliverToLocation).length == 0) {
					delete orc[index].RXE[indexRXE].deliverToLocation;
				}
		
				// RXE.9, substitutionStatus
				if (rxeSeg[&apos;RXE.9&apos;][&apos;RXE.9.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].substitutionStatus = rxeSeg[&apos;RXE.9&apos;][&apos;RXE.9.1&apos;]; }
		
				// RXE.10, dispenseAmount
				if (rxeSeg[&apos;RXE.10&apos;][&apos;RXE.10.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispenseAmount = rxeSeg[&apos;RXE.10&apos;][&apos;RXE.10.1&apos;]; }
		
				// RXE.11, dispenseUnits
				orc[index].RXE[indexRXE].dispenseUnits = {};
				if (rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispenseUnits.id = rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.1&apos;]; }
				if (rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispenseUnits.text = rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.2&apos;]; }
				if (rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispenseUnits.codingSystem = rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.3&apos;]; }
				if (rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispenseUnits.altId = rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.4&apos;]; }
				if (rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispenseUnits.altText = rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.5&apos;]; }
				if (rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispenseUnits.altCodingSystem = rxeSeg[&apos;RXE.11&apos;][&apos;RXE.11.6&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].dispenseUnits).length == 0) {
					delete orc[index].RXE[indexRXE].dispenseUnits;
				}
		
				// RXE.12, numberofRefills
				if (rxeSeg[&apos;RXE.12&apos;][&apos;RXE.12.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].numberofRefills = rxeSeg[&apos;RXE.12&apos;][&apos;RXE.12.1&apos;]; }
		
				// RXE.13, orderingProvidersDeaNumber
				orc[index].RXE[indexRXE].orderingProvidersDeaNumber = {};
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.id = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.1&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.lastName = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.2&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.firstName = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.3&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.middleInitOrName = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.4&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.suffix = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.5&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.prefix = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.6&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.7&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.degree = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.7&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.8&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.sourceTable = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.8&apos;]; }
				orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningAuthority = {};
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.9&apos;][&apos;RXE.13.9.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningAuthority.id = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.9&apos;][&apos;RXE.13.9.1&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.9&apos;][&apos;RXE.13.9.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningAuthority.universalId = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.9&apos;][&apos;RXE.13.9.2&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.9&apos;][&apos;RXE.13.9.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningAuthority.universalIdType = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.9&apos;][&apos;RXE.13.9.3&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningAuthority).length == 0) {
					if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.9&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningAuthority.id = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.9&apos;]; }
					else delete orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningAuthority;
				}
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.10&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.nameTypeCode = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.10&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.11&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.identifierCheckDigit = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.11&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.12&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.codeIdentifyingCheckDigitScheme = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.12&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.13&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.identifierTypeCode = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.13&apos;]; }
				orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningFacility = {};
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.14&apos;][&apos;RXE.13.14.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningFacility.id = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.14&apos;][&apos;RXE.13.14.1&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.14&apos;][&apos;RXE.13.14.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningFacility.universalId = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.14&apos;][&apos;RXE.13.14.2&apos;]; }
				if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.14&apos;][&apos;RXE.13.14.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningFacility.universalIdType = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.14&apos;][&apos;RXE.13.14.3&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningFacility).length == 0) {
					if (rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.14&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningFacility.id = rxeSeg[&apos;RXE.13&apos;][&apos;RXE.13.14&apos;]; }
					else delete orc[index].RXE[indexRXE].orderingProvidersDeaNumber.assigningFacility;
				}
				if (Object.keys(orc[index].RXE[indexRXE].orderingProvidersDeaNumber).length == 0) {
					delete orc[index].RXE[indexRXE].orderingProvidersDeaNumber;
				}
		
				// RXE.14, pharmacistTreatmentSuppliersVerifierID
				orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID = {};
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.id = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.1&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.lastName = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.2&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.firstName = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.3&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.middleInitOrName = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.4&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.suffix = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.5&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.prefix = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.6&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.7&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.degree = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.7&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.8&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.sourceTable = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.8&apos;]; }
				orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningAuthority = {};
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.9&apos;][&apos;RXE.14.9.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningAuthority.id = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.9&apos;][&apos;RXE.14.9.1&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.9&apos;][&apos;RXE.14.9.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningAuthority.universalId = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.9&apos;][&apos;RXE.14.9.2&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.9&apos;][&apos;RXE.14.9.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningAuthority.universalIdType = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.9&apos;][&apos;RXE.14.9.3&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningAuthority).length == 0) {
					if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.9&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningAuthority.id = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.9&apos;]; }
					else delete orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningAuthority;
				}
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.10&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.nameTypeCode = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.10&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.11&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.identifierCheckDigit = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.11&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.12&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.codeIdentifyingCheckDigitScheme = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.12&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.13&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.identifierTypeCode = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.13&apos;]; }
				orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningFacility = {};
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.14&apos;][&apos;RXE.14.14.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningFacility.id = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.14&apos;][&apos;RXE.14.14.1&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.14&apos;][&apos;RXE.14.14.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningFacility.universalId = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.14&apos;][&apos;RXE.14.14.2&apos;]; }
				if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.14&apos;][&apos;RXE.14.14.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningFacility.universalIdType = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.14&apos;][&apos;RXE.14.14.3&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningFacility).length == 0) {
					if (rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.14&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningFacility.id = rxeSeg[&apos;RXE.14&apos;][&apos;RXE.14.14&apos;]; }
					else delete orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID.assigningFacility;
				}
				if (Object.keys(orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID).length == 0) {
					delete orc[index].RXE[indexRXE].pharmacistTreatmentSuppliersVerifierID;
				}
				// RXE.15, prescriptionNumber
				if (rxeSeg[&apos;RXE.15&apos;][&apos;RXE.15.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].prescriptionNumber = rxeSeg[&apos;RXE.15&apos;][&apos;RXE.15.1&apos;]; }
		
				// RXE.16, numberOfRefillsRemaining
				if (rxeSeg[&apos;RXE.16&apos;][&apos;RXE.16.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].numberOfRefillsRemaining = rxeSeg[&apos;RXE.16&apos;][&apos;RXE.16.1&apos;]; }
		
				// RXE.17, numberOfRefillsDosesDispensed
				if (rxeSeg[&apos;RXE.17&apos;][&apos;RXE.17.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].numberOfRefillsDosesDispensed = rxeSeg[&apos;RXE.17&apos;][&apos;RXE.17.1&apos;]; }
		
				// RXE.18, dtOfMostRecentRefillOrDoseDispensed
				if (rxeSeg[&apos;RXE.18&apos;][&apos;RXE.18.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dtOfMostRecentRefillOrDoseDispensed = rxeSeg[&apos;RXE.18&apos;][&apos;RXE.18.1&apos;]; }
		
				// RXE.19, totalDailyDose
				orc[index].RXE[indexRXE].totalDailyDose = {};
				if (rxeSeg[&apos;RXE.19&apos;][&apos;RXE.19.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].totalDailyDose.quantity = rxeSeg[&apos;RXE.19&apos;][&apos;RXE.19.1&apos;]; }
				if (rxeSeg[&apos;RXE.19&apos;][&apos;RXE.19.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].totalDailyDose.units = rxeSeg[&apos;RXE.19&apos;][&apos;RXE.19.2&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].totalDailyDose).length == 0) {
					delete orc[index].RXE[indexRXE].totalDailyDose;
				}
				// RXE.20, needsHumanReview
				if (rxeSeg[&apos;RXE.20&apos;][&apos;RXE.20.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].needsHumanReview = rxeSeg[&apos;RXE.20&apos;][&apos;RXE.20.1&apos;]; }
		
				// RXE.21, pharmacyTreatmentSuppliersSpecialDispensingInstructions
				orc[index].RXE[indexRXE].pharmacyTreatmentSuppliersSpecialDispensingInstructions = [];
				for each (field in rxeSeg[&apos;RXE.21&apos;]) {
					var block = {};
					if (field[&apos;RXE.21.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXE.21.1&apos;]; }
					if (field[&apos;RXE.21.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXE.21.2&apos;]; }
					if (field[&apos;RXE.21.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXE.21.3&apos;]; }
					if (field[&apos;RXE.21.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXE.21.4&apos;]; }
					if (field[&apos;RXE.21.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXE.21.5&apos;]; }
					if (field[&apos;RXE.21.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXE.21.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXE[indexRXE].pharmacyTreatmentSuppliersSpecialDispensingInstructions.push(block);
					}
				}
				if (orc[index].RXE[indexRXE].pharmacyTreatmentSuppliersSpecialDispensingInstructions.length == 0) {
					delete orc[index].RXE[indexRXE].pharmacyTreatmentSuppliersSpecialDispensingInstructions;
				}
		
				// RXE.22, givePerTimeUnit
				if (rxeSeg[&apos;RXE.22&apos;][&apos;RXE.22.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].givePerTimeUnit = rxeSeg[&apos;RXE.22&apos;][&apos;RXE.22.1&apos;]; }
		
				// RXE.23, giveRateAmount
				if (rxeSeg[&apos;RXE.23&apos;][&apos;RXE.23.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveRateAmount = rxeSeg[&apos;RXE.23&apos;][&apos;RXE.23.1&apos;]; }
		
				// RXE.24, giveRateUnits
				orc[index].RXE[indexRXE].giveRateUnits = {};
				if (rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveRateUnits.id = rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.1&apos;]; }
				if (rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveRateUnits.text = rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.2&apos;]; }
				if (rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveRateUnits.codingSystem = rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.3&apos;]; }
				if (rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveRateUnits.altId = rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.4&apos;]; }
				if (rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveRateUnits.altText = rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.5&apos;]; }
				if (rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveRateUnits.altCodingSystem = rxeSeg[&apos;RXE.24&apos;][&apos;RXE.24.6&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].giveRateUnits).length == 0) {
					delete orc[index].RXE[indexRXE].giveRateUnits;
				}
		
				// RXE.25, giveStrength
				if (rxeSeg[&apos;RXE.25&apos;][&apos;RXE.25.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveStrength = rxeSeg[&apos;RXE.25&apos;][&apos;RXE.25.1&apos;]; }
		
				// RXE.26, giveStrengthUnits
				orc[index].RXE[indexRXE].giveStrengthUnits = {};
				if (rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveStrengthUnits.id = rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.1&apos;]; }
				if (rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveStrengthUnits.text = rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.2&apos;]; }
				if (rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveStrengthUnits.codingSystem = rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.3&apos;]; }
				if (rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveStrengthUnits.altId = rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.4&apos;]; }
				if (rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveStrengthUnits.altText = rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.5&apos;]; }
				if (rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].giveStrengthUnits.altCodingSystem = rxeSeg[&apos;RXE.26&apos;][&apos;RXE.26.6&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].giveStrengthUnits).length == 0) {
					delete orc[index].RXE[indexRXE].giveStrengthUnits;
				}
		
				// RXE.27, giveIndication
				orc[index].RXE[indexRXE].giveIndication = [];
				for each (field in rxeSeg[&apos;RXE.27&apos;]) {
					var block = {};
					if (field[&apos;RXE.27.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXE.27.1&apos;]; }
					if (field[&apos;RXE.27.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXE.27.2&apos;]; }
					if (field[&apos;RXE.27.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXE.27.3&apos;]; }
					if (field[&apos;RXE.27.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXE.27.4&apos;]; }
					if (field[&apos;RXE.27.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXE.27.5&apos;]; }
					if (field[&apos;RXE.27.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXE.27.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXE[indexRXE].giveIndication.push(block);
					}
				}
				if (orc[index].RXE[indexRXE].giveIndication.length == 0) {
					delete orc[index].RXE[indexRXE].giveIndication;
				}
		
				// RXE.28, dispensePackageSize
				if (rxeSeg[&apos;RXE.28&apos;][&apos;RXE.28.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispensePackageSize = rxeSeg[&apos;RXE.28&apos;][&apos;RXE.28.1&apos;]; }
		
				// RXE.29, dispensePackageSizeUnit
				orc[index].RXE[indexRXE].dispensePackageSizeUnit = {};
				if (rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispensePackageSizeUnit.id = rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.1&apos;]; }
				if (rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispensePackageSizeUnit.text = rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.2&apos;]; }
				if (rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispensePackageSizeUnit.codingSystem = rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.3&apos;]; }
				if (rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispensePackageSizeUnit.altId = rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.4&apos;]; }
				if (rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispensePackageSizeUnit.altText = rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.5&apos;]; }
				if (rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispensePackageSizeUnit.altCodingSystem = rxeSeg[&apos;RXE.29&apos;][&apos;RXE.29.6&apos;]; }
				if (Object.keys(orc[index].RXE[indexRXE].dispensePackageSizeUnit).length == 0) {
					delete orc[index].RXE[indexRXE].dispensePackageSizeUnit;
				}
		
				// RXE.30, dispensePackageMethod
				if (rxeSeg[&apos;RXE.30&apos;][&apos;RXE.30.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].dispensePackageMethod = rxeSeg[&apos;RXE.30&apos;][&apos;RXE.30.1&apos;]; }
		
				// RXR (RXE)
				var rxrGroup = getSegmentsAfter(msg,rxeSeg,&apos;RXR&apos;,false, [&apos;RXE&apos;, &apos;RXA&apos;]);
				if (rxrGroup.length &gt; 0) {

					rxrSeg = rxrGroup[0];
					
					orc[index].RXE[indexRXE].rxr = {};
		
					// RXR.1, route
					orc[index].RXE[indexRXE].rxr.route = {};
					if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.route.id = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.1&apos;]; }
					if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.route.text = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.2&apos;]; }
					if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.route.codingSystem = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.3&apos;]; }
					if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.route.altId = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.4&apos;]; }
					if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.route.altText = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.5&apos;]; }
					if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.route.altCodingSystem = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.6&apos;]; }
					if (Object.keys(orc[index].RXE[indexRXE].rxr.route).length == 0) {
						delete orc[index].RXE[indexRXE].rxr.route;
					}
		
					// RXR.2, site
					orc[index].RXE[indexRXE].rxr.site = {};
					if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.site.id = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.1&apos;]; }
					if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.site.text = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.2&apos;]; }
					if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.site.codingSystem = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.3&apos;]; }
					if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.site.altId = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.4&apos;]; }
					if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.site.altText = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.5&apos;]; }
					if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.site.altCodingSystem = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.6&apos;]; }
					if (Object.keys(orc[index].RXE[indexRXE].rxr.site).length == 0) {
						delete orc[index].RXE[indexRXE].rxr.site;
					}
		
					// RXR.3, administrationDevice
					orc[index].RXE[indexRXE].rxr.administrationDevice = {};
					if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationDevice.id = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.1&apos;]; }
					if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationDevice.text = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.2&apos;]; }
					if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationDevice.codingSystem = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.3&apos;]; }
					if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationDevice.altId = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.4&apos;]; }
					if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationDevice.altText = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.5&apos;]; }
					if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationDevice.altCodingSystem = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.6&apos;]; }
					if (Object.keys(orc[index].RXE[indexRXE].rxr.administrationDevice).length == 0) {
						delete orc[index].RXE[indexRXE].rxr.administrationDevice;
					}
		
					// RXR.4, administrationMethod
					orc[index].RXE[indexRXE].rxr.administrationMethod = {};
					if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationMethod.id = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.1&apos;]; }
					if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationMethod.text = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.2&apos;]; }
					if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationMethod.codingSystem = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.3&apos;]; }
					if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationMethod.altId = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.4&apos;]; }
					if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationMethod.altText = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.5&apos;]; }
					if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].rxr.administrationMethod.altCodingSystem = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.6&apos;]; }
					if (Object.keys(orc[index].RXE[indexRXE].rxr.administrationMethod).length == 0) {
						delete orc[index].RXE[indexRXE].rxr.administrationMethod;
					}
		
					// clean up RXR
					if (Object.keys(orc[index].RXE[indexRXE].rxr).length == 0) {
						delete orc[index].RXE[indexRXE].rxr;
					}
				}
		
				// RXC (RXE)
				var rxcGroup = getSegmentsAfter(msg,rxeSeg,&apos;RXC&apos;,true);
				if (rxcGroup.length &gt; 0) {
					orc[index].RXE[indexRXE].RXC = [];
					var indexRXC = 0;
					for each (rxcSeg in rxcGroup) {
						orc[index].RXE[indexRXE].RXC[indexRXC] = {};
		
						// RXC.1, rXComponentType
						if (rxcSeg[&apos;RXC.1&apos;][&apos;RXC.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].RXComponentType = rxcSeg[&apos;RXC.1&apos;][&apos;RXC.1.1&apos;]; }
		
						// RXC.2, componentCode
						orc[index].RXE[indexRXE].RXC[indexRXC].componentCode = {};
						if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentCode.id = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.1&apos;]; }
						if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentCode.text = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.2&apos;]; }
						if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentCode.codingSystem = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.3&apos;]; }
						if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentCode.altId = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.4&apos;]; }
						if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentCode.altText = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.5&apos;]; }
						if (rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentCode.altCodingSystem = rxcSeg[&apos;RXC.2&apos;][&apos;RXC.2.6&apos;]; }
						if (Object.keys(orc[index].RXE[indexRXE].RXC[indexRXC].componentCode).length == 0) {
							delete orc[index].RXE[indexRXE].RXC[indexRXC].componentCode;
						}
		
						// RXC.3, componentAmount
						if (rxcSeg[&apos;RXC.3&apos;][&apos;RXC.3.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentAmount = rxcSeg[&apos;RXC.3&apos;][&apos;RXC.3.1&apos;]; }
		
						// RXC.4, componentUnits
						orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits = {};
						if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits.id = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.1&apos;]; }
						if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits.text = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.2&apos;]; }
						if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits.codingSystem = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.3&apos;]; }
						if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits.altId = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.4&apos;]; }
						if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits.altText = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.5&apos;]; }
						if (rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits.altCodingSystem = rxcSeg[&apos;RXC.4&apos;][&apos;RXC.4.6&apos;]; }
						if (Object.keys(orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits).length == 0) {
							delete orc[index].RXE[indexRXE].RXC[indexRXC].componentUnits;
						}
		
						// RXC.5, componentStrength
						if (rxcSeg[&apos;RXC.5&apos;][&apos;RXC.5.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentStrength = rxcSeg[&apos;RXC.5&apos;][&apos;RXC.5.1&apos;]; }
		
						// RXC.6, componentStrengthUnits
						orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits = {};
						if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.1&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits.id = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.1&apos;]; }
						if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.2&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits.text = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.2&apos;]; }
						if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.3&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits.codingSystem = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.3&apos;]; }
						if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.4&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits.altId = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.4&apos;]; }
						if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.5&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits.altText = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.5&apos;]; }
						if (rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.6&apos;].toString() != &quot;&quot;) { orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits.altCodingSystem = rxcSeg[&apos;RXC.6&apos;][&apos;RXC.6.6&apos;]; }
						if (Object.keys(orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits).length == 0) {
							delete orc[index].RXE[indexRXE].RXC[indexRXC].componentStrengthUnits;
						}
		
						// clean up RXC and increment index
						if (Object.keys(orc[index].RXE[indexRXE].RXC[indexRXC]).length == 0) {
							delete orc[index].RXE[indexRXE].RXC[indexRXC];
						} else {
							indexRXC++;
						}
					}
				}
		
				// clean up RXE and increment index
				if (Object.keys(orc[index].RXE[indexRXE]).length == 0) {
					delete orc[index].RXE[indexRXE];
				} else {
					indexRXE++;
				}
			}

			// Clean up the RXE object if it&apos;s empty
			if (orc[index].RXE[0] == null){
				delete orc[index].RXE;
			}
		}
		
		// Increment the ORC index
		index++;
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// Re-add the ORC segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>8</sequenceNumber>
          <name>--RXA (Pharmacy Administration) Segment - REQUIRES ORC MAPPING STEP ABOVE</name>
          <script>// Pull out the ORC JSON to embed the RXO and other rxaSegments in
var orc = JSON.parse($(&apos;hl7JSON&apos;)).content.ORC;

// ORC iteration, in order to grab related RXO&apos;s
if (msg[&apos;ORC&apos;].length() &gt; 0) {

	// ORC is a required to have a RXO, but if the ORC was blank and was removed from the JSON, just create a new one to add the RXO into
	if (!orc) {
		orc = [{}];
	}
	
	var index = 0;
	for each (seg in msg.ORC) {

		// RXA (ORC)
		if (msg[&apos;RXA&apos;].length() &gt; 0) {
			orc[index].RXA = [];
			var indexRXA = 0;
			for each (rxaSeg in msg.RXA) {
				orc[index].RXA[indexRXA] = {};
		
				// RXA.1, giveSubIDCounter
				if (rxaSeg[&apos;RXA.1&apos;][&apos;RXA.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].giveSubIDCounter = rxaSeg[&apos;RXA.1&apos;][&apos;RXA.1.1&apos;]; }
		
				// RXA.2, administrationSubIDCounter
				if (rxaSeg[&apos;RXA.2&apos;][&apos;RXA.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administrationSubIDCounter = rxaSeg[&apos;RXA.2&apos;][&apos;RXA.2.1&apos;]; }
		
				// RXA.3, dateTimeStartofAdministration
				if (rxaSeg[&apos;RXA.3&apos;][&apos;RXA.3.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].dateTimeStartofAdministration = rxaSeg[&apos;RXA.3&apos;][&apos;RXA.3.1&apos;]; }
		
				// RXA.4, dateTimeEndofAdministration
				if (rxaSeg[&apos;RXA.4&apos;][&apos;RXA.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].dateTimeEndofAdministration = rxaSeg[&apos;RXA.4&apos;][&apos;RXA.4.1&apos;]; }
		
				// RXA.5, administeredCode
				orc[index].RXA[indexRXA].administeredCode = {};
				if (rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredCode.id = rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.1&apos;]; }
				if (rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredCode.text = rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.2&apos;]; }
				if (rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredCode.codingSystem = rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.3&apos;]; }
				if (rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.4&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredCode.altId = rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.4&apos;]; }
				if (rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.5&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredCode.altText = rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.5&apos;]; }
				if (rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.6&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredCode.altCodingSystem = rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.6&apos;]; }
				if (Object.keys(orc[index].RXA[indexRXA].administeredCode).length == 0) {
					delete orc[index].RXA[indexRXA].administeredCode;
				}
		
				// RXA.6, administeredAmount
				if (rxaSeg[&apos;RXA.6&apos;][&apos;RXA.6.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAmount = rxaSeg[&apos;RXA.6&apos;][&apos;RXA.6.1&apos;]; }
		
				// RXA.7, administeredUnits
				orc[index].RXA[indexRXA].administeredUnits = {};
				if (rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredUnits.id = rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.1&apos;]; }
				if (rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredUnits.text = rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.2&apos;]; }
				if (rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredUnits.codingSystem = rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.3&apos;]; }
				if (rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.4&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredUnits.altId = rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.4&apos;]; }
				if (rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.5&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredUnits.altText = rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.5&apos;]; }
				if (rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.6&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredUnits.altCodingSystem = rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.6&apos;]; }
				if (Object.keys(orc[index].RXA[indexRXA].administeredUnits).length == 0) {
					delete orc[index].RXA[indexRXA].administeredUnits;
				}
				
				// RXA.8, administeredDosageForm
				orc[index].RXA[indexRXA].administeredDosageForm = {};
				if (rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredDosageForm.id = rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.1&apos;]; }
				if (rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredDosageForm.text = rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.2&apos;]; }
				if (rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredDosageForm.codingSystem = rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.3&apos;]; }
				if (rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.4&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredDosageForm.altId = rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.4&apos;]; }
				if (rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.5&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredDosageForm.altText = rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.5&apos;]; }
				if (rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.6&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredDosageForm.altCodingSystem = rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.6&apos;]; }
				if (Object.keys(orc[index].RXA[indexRXA].administeredDosageForm).length == 0) {
					delete orc[index].RXA[indexRXA].administeredDosageForm;
				}
				
				// RXA.9, administrationNotes
				orc[index].RXA[indexRXA].administrationNotes = [];
				for each (field in rxaSeg[&apos;RXA.9&apos;]) {
					var block = {};
					if (field[&apos;RXA.9.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXA.9.1&apos;]; }
					if (field[&apos;RXA.9.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXA.9.2&apos;]; }
					if (field[&apos;RXA.9.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXA.9.3&apos;]; }
					if (field[&apos;RXA.9.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXA.9.4&apos;]; }
					if (field[&apos;RXA.9.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXA.9.5&apos;]; }
					if (field[&apos;RXA.9.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXA.9.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXA[indexRXA].administrationNotes.push(block);
					}
				}
				if (orc[index].RXA[indexRXA].administrationNotes.length == 0) {
					delete orc[index].RXA[indexRXA].administrationNotes;
				}
		
				// RXA.10, administeringProvider
				orc[index].RXA[indexRXA].administeringProvider = {};
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.id = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.1&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.lastName = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.2&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.firstName = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.3&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.4&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.middleInitOrName = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.4&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.5&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.suffix = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.5&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.6&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.prefix = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.6&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.7&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.degree = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.7&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.8&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.sourceTable = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.8&apos;]; }
				orc[index].RXA[indexRXA].administeringProvider.assigningAuthority = {};
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.9&apos;][&apos;RXA.10.9.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.assigningAuthority.id = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.9&apos;][&apos;RXA.10.9.1&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.9&apos;][&apos;RXA.10.9.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.assigningAuthority.universalId = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.9&apos;][&apos;RXA.10.9.2&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.9&apos;][&apos;RXA.10.9.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.assigningAuthority.universalIdType = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.9&apos;][&apos;RXA.10.9.3&apos;]; }
				if (Object.keys(orc[index].RXA[indexRXA].administeringProvider.assigningAuthority).length == 0) {
					if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.9&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.assigningAuthority.id = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.9&apos;]; }
					else delete orc[index].RXA[indexRXA].administeringProvider.assigningAuthority;
				}
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.10&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.nameTypeCode = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.10&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.11&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.identifierCheckDigit = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.11&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.12&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.codeIdentifyingCheckDigitScheme = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.12&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.13&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.identifierTypeCode = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.13&apos;]; }
				orc[index].RXA[indexRXA].administeringProvider.assigningFacility = {};
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.14&apos;][&apos;RXA.10.14.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.assigningFacility.id = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.14&apos;][&apos;RXA.10.14.1&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.14&apos;][&apos;RXA.10.14.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.assigningFacility.universalId = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.14&apos;][&apos;RXA.10.14.2&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.14&apos;][&apos;RXA.10.14.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.assigningFacility.universalIdType = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.14&apos;][&apos;RXA.10.14.3&apos;]; }
				if (Object.keys(orc[index].RXA[indexRXA].administeringProvider.assigningFacility).length == 0) {
					if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.14&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.assigningFacility.id = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.14&apos;]; }
					else delete orc[index].RXA[indexRXA].administeringProvider.assigningFacility;
				}
				if (Object.keys(orc[index].RXA[indexRXA].administeringProvider).length == 0) {
					delete orc[index].RXA[indexRXA].administeringProvider;
				}
		
				// RXA.11, administeredAtLocation
				orc[index].RXA[indexRXA].administeredAtLocation = {};
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.pointOfCare = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.1&apos;]; }
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.room = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.2&apos;]; }
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.bed = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.3&apos;]; }
				orc[index].RXA[indexRXA].administeredAtLocation.facility = {};
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.4&apos;][&apos;RXA.11.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.facility.nameSpaceId =  rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.4&apos;][&apos;RXA.11.4.1&apos;]; }
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.4&apos;][&apos;RXA.11.4.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.facility.universalId =  rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.4&apos;][&apos;RXA.11.4.2&apos;]; }
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.4&apos;][&apos;RXA.11.4.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.facility.universalIdType =  rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.4&apos;][&apos;RXA.11.4.3&apos;]; }
				if (Object.keys(orc[index].RXA[indexRXA].administeredAtLocation.facility).length == 0) {
					if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.4&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.facility.nameSpaceId = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.4&apos;]; }
					else delete orc[index].RXA[indexRXA].administeredAtLocation.facility;
				}
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.5&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.locationStatus = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.5&apos;]; }
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.6&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.personLocationType = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.6&apos;]; }
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.7&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.building = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.7&apos;]; }
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.8&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.floor = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.8&apos;]; }
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.9&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.locationDescription = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.9&apos;]; }
				if (Object.keys(orc[index].RXA[indexRXA].administeredAtLocation).length == 0) {
					delete orc[index].RXA[indexRXA].administeredAtLocation;
				}
		
				// RXA.12, administeredPerTimeUnit
				if (rxaSeg[&apos;RXA.12&apos;][&apos;RXA.12.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredPerTimeUnit = rxaSeg[&apos;RXA.12&apos;][&apos;RXA.12.1&apos;]; }
		
				// RXA.13, administeredStrength
				if (rxaSeg[&apos;RXA.13&apos;][&apos;RXA.13.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredStrength = rxaSeg[&apos;RXA.13&apos;][&apos;RXA.13.1&apos;]; }
		
				// RXA.14, administeredStrengthUnits
				orc[index].RXA[indexRXA].administeredStrengthUnits = {};
				if (rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredStrengthUnits.id = rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.1&apos;]; }
				if (rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredStrengthUnits.text = rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.2&apos;]; }
				if (rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredStrengthUnits.codingSystem = rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.3&apos;]; }
				if (rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.4&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredStrengthUnits.altId = rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.4&apos;]; }
				if (rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.5&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredStrengthUnits.altText = rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.5&apos;]; }
				if (rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.6&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredStrengthUnits.altCodingSystem = rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.6&apos;]; }
				if (Object.keys(orc[index].RXA[indexRXA].administeredStrengthUnits).length == 0) {
					delete orc[index].RXA[indexRXA].administeredStrengthUnits;
				}
				
				// RXA.15, substanceLotNumber
				orc[index].RXA[indexRXA].substanceLotNumber = [];
				for each (field in rxaSeg[&apos;RXA.15&apos;]) {
					if (field[&apos;RXA.15.1&apos;].toString() != &quot;&quot;) {
						orc[index].RXA[indexRXA].substanceLotNumber.push(field[&apos;RXA.15.1&apos;]);
					}
				}
				if (Object.keys(orc[index].RXA[indexRXA].substanceLotNumber).length == 0) {
					delete orc[index].RXA[indexRXA].substanceLotNumber;
				}
		
				// RXA.16, substanceExpirationDate
				orc[index].RXA[indexRXA].substanceExpirationDate = [];
				for each (field in rxaSeg[&apos;RXA.16&apos;]) {
					if (field[&apos;RXA.16.1&apos;].toString() != &quot;&quot;) {
						orc[index].RXA[indexRXA].substanceExpirationDate.push(field[&apos;RXA.16.1&apos;]);
					}
				}
				if (orc[index].RXA[indexRXA].substanceExpirationDate.length == 0) {
					delete orc[index].RXA[indexRXA].substanceExpirationDate;
				}
				
				// RXA.17, substanceManufacturerName
				orc[index].RXA[indexRXA].substanceManufacturerName = [];
				for each (field in rxaSeg[&apos;RXA.17&apos;]) {
					var block = {};
					if (field[&apos;RXA.17.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXA.17.1&apos;]; }
					if (field[&apos;RXA.17.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXA.17.2&apos;]; }
					if (field[&apos;RXA.17.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXA.17.3&apos;]; }
					if (field[&apos;RXA.17.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXA.17.4&apos;]; }
					if (field[&apos;RXA.17.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXA.17.5&apos;]; }
					if (field[&apos;RXA.17.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXA.17.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXA[indexRXA].substanceManufacturerName.push(block);
					}
				}
				if (orc[index].RXA[indexRXA].substanceManufacturerName.length == 0) {
					delete orc[index].RXA[indexRXA].substanceManufacturerName;
				}
				
				// RXA.18, substanceRefusalReason
				orc[index].RXA[indexRXA].substanceRefusalReason = [];
				for each (field in rxaSeg[&apos;RXA.18&apos;]) {
					var block = {};
					if (field[&apos;RXA.18.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXA.18.1&apos;]; }
					if (field[&apos;RXA.18.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXA.18.2&apos;]; }
					if (field[&apos;RXA.18.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXA.18.3&apos;]; }
					if (field[&apos;RXA.18.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXA.18.4&apos;]; }
					if (field[&apos;RXA.18.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXA.18.5&apos;]; }
					if (field[&apos;RXA.18.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXA.18.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXA[indexRXA].substanceRefusalReason.push(block);
					}
				}
				if (orc[index].RXA[indexRXA].substanceRefusalReason.length == 0) {
					delete orc[index].RXA[indexRXA].substanceRefusalReason;
				}
				
				// RXA.19, indication
				orc[index].RXA[indexRXA].indication = [];
				for each (field in rxaSeg[&apos;RXA.19&apos;]) {
					var block = {};
					if (field[&apos;RXA.19.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXA.19.1&apos;]; }
					if (field[&apos;RXA.19.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXA.19.2&apos;]; }
					if (field[&apos;RXA.19.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXA.19.3&apos;]; }
					if (field[&apos;RXA.19.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXA.19.4&apos;]; }
					if (field[&apos;RXA.19.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXA.19.5&apos;]; }
					if (field[&apos;RXA.19.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXA.19.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXA[indexRXA].indication.push(block);
					}
				}
				if (orc[index].RXA[indexRXA].indication.length == 0) {
					delete orc[index].RXA[indexRXA].indication;
				}
				
				// RXA.20, completionStatus
				if (rxaSeg[&apos;RXA.20&apos;][&apos;RXA.20.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].completionStatus = rxaSeg[&apos;RXA.20&apos;][&apos;RXA.20.1&apos;]; }
		
				// RXA.21, actionCode
				if (rxaSeg[&apos;RXA.21&apos;][&apos;RXA.21.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].actionCode = rxaSeg[&apos;RXA.21&apos;][&apos;RXA.21.1&apos;]; }
		
				// RXA.22, systemEntryDateTime
				if (rxaSeg[&apos;RXA.22&apos;][&apos;RXA.22.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].systemEntryDateTime = rxaSeg[&apos;RXA.22&apos;][&apos;RXA.22.1&apos;]; }
		
				// clean up RXA and increment indexRXA
				if (Object.keys(orc[index].RXA[indexRXA]).length == 0) {
					delete orc[index].RXA[indexRXA];
				} else {
					indexRXA++;
				}
			}

			// Clean up the RXA object if it&apos;s empty
			if (orc[index].RXA[0] == null){
				delete orc[index].RXA;
			}
		}

		// Increment the ORC index
		index++;
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// Re-add the ORC segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// Pull out the ORC JSON to embed the RXO and other rxaSegments in
var orc = JSON.parse($(&apos;hl7JSON&apos;)).content.ORC;

// ORC iteration, in order to grab related RXO&apos;s
if (msg[&apos;ORC&apos;].length() &gt; 0) {

	// ORC is a required to have a RXO, but if the ORC was blank and was removed from the JSON, just create a new one to add the RXO into
	if (!orc) {
		orc = [{}];
	}
	
	var index = 0;
	for each (seg in msg.ORC) {

		// RXA (ORC)
		if (msg[&apos;RXA&apos;].length() &gt; 0) {
			orc[index].RXA = [];
			var indexRXA = 0;
			for each (rxaSeg in msg.RXA) {
				orc[index].RXA[indexRXA] = {};
		
				// RXA.1, giveSubIDCounter
				if (rxaSeg[&apos;RXA.1&apos;][&apos;RXA.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].giveSubIDCounter = rxaSeg[&apos;RXA.1&apos;][&apos;RXA.1.1&apos;]; }
		
				// RXA.2, administrationSubIDCounter
				if (rxaSeg[&apos;RXA.2&apos;][&apos;RXA.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administrationSubIDCounter = rxaSeg[&apos;RXA.2&apos;][&apos;RXA.2.1&apos;]; }
		
				// RXA.3, dateTimeStartofAdministration
				if (rxaSeg[&apos;RXA.3&apos;][&apos;RXA.3.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].dateTimeStartofAdministration = rxaSeg[&apos;RXA.3&apos;][&apos;RXA.3.1&apos;]; }
		
				// RXA.4, dateTimeEndofAdministration
				if (rxaSeg[&apos;RXA.4&apos;][&apos;RXA.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].dateTimeEndofAdministration = rxaSeg[&apos;RXA.4&apos;][&apos;RXA.4.1&apos;]; }
		
				// RXA.5, administeredCode
				orc[index].RXA[indexRXA].administeredCode = {};
				if (rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredCode.id = rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.1&apos;]; }
				if (rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredCode.text = rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.2&apos;]; }
				if (rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredCode.codingSystem = rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.3&apos;]; }
				if (rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.4&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredCode.altId = rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.4&apos;]; }
				if (rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.5&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredCode.altText = rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.5&apos;]; }
				if (rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.6&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredCode.altCodingSystem = rxaSeg[&apos;RXA.5&apos;][&apos;RXA.5.6&apos;]; }
				if (Object.keys(orc[index].RXA[indexRXA].administeredCode).length == 0) {
					delete orc[index].RXA[indexRXA].administeredCode;
				}
		
				// RXA.6, administeredAmount
				if (rxaSeg[&apos;RXA.6&apos;][&apos;RXA.6.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAmount = rxaSeg[&apos;RXA.6&apos;][&apos;RXA.6.1&apos;]; }
		
				// RXA.7, administeredUnits
				orc[index].RXA[indexRXA].administeredUnits = {};
				if (rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredUnits.id = rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.1&apos;]; }
				if (rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredUnits.text = rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.2&apos;]; }
				if (rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredUnits.codingSystem = rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.3&apos;]; }
				if (rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.4&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredUnits.altId = rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.4&apos;]; }
				if (rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.5&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredUnits.altText = rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.5&apos;]; }
				if (rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.6&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredUnits.altCodingSystem = rxaSeg[&apos;RXA.7&apos;][&apos;RXA.7.6&apos;]; }
				if (Object.keys(orc[index].RXA[indexRXA].administeredUnits).length == 0) {
					delete orc[index].RXA[indexRXA].administeredUnits;
				}
				
				// RXA.8, administeredDosageForm
				orc[index].RXA[indexRXA].administeredDosageForm = {};
				if (rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredDosageForm.id = rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.1&apos;]; }
				if (rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredDosageForm.text = rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.2&apos;]; }
				if (rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredDosageForm.codingSystem = rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.3&apos;]; }
				if (rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.4&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredDosageForm.altId = rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.4&apos;]; }
				if (rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.5&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredDosageForm.altText = rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.5&apos;]; }
				if (rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.6&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredDosageForm.altCodingSystem = rxaSeg[&apos;RXA.8&apos;][&apos;RXA.8.6&apos;]; }
				if (Object.keys(orc[index].RXA[indexRXA].administeredDosageForm).length == 0) {
					delete orc[index].RXA[indexRXA].administeredDosageForm;
				}
				
				// RXA.9, administrationNotes
				orc[index].RXA[indexRXA].administrationNotes = [];
				for each (field in rxaSeg[&apos;RXA.9&apos;]) {
					var block = {};
					if (field[&apos;RXA.9.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXA.9.1&apos;]; }
					if (field[&apos;RXA.9.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXA.9.2&apos;]; }
					if (field[&apos;RXA.9.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXA.9.3&apos;]; }
					if (field[&apos;RXA.9.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXA.9.4&apos;]; }
					if (field[&apos;RXA.9.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXA.9.5&apos;]; }
					if (field[&apos;RXA.9.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXA.9.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXA[indexRXA].administrationNotes.push(block);
					}
				}
				if (orc[index].RXA[indexRXA].administrationNotes.length == 0) {
					delete orc[index].RXA[indexRXA].administrationNotes;
				}
		
				// RXA.10, administeringProvider
				orc[index].RXA[indexRXA].administeringProvider = {};
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.id = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.1&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.lastName = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.2&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.firstName = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.3&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.4&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.middleInitOrName = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.4&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.5&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.suffix = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.5&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.6&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.prefix = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.6&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.7&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.degree = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.7&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.8&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.sourceTable = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.8&apos;]; }
				orc[index].RXA[indexRXA].administeringProvider.assigningAuthority = {};
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.9&apos;][&apos;RXA.10.9.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.assigningAuthority.id = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.9&apos;][&apos;RXA.10.9.1&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.9&apos;][&apos;RXA.10.9.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.assigningAuthority.universalId = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.9&apos;][&apos;RXA.10.9.2&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.9&apos;][&apos;RXA.10.9.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.assigningAuthority.universalIdType = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.9&apos;][&apos;RXA.10.9.3&apos;]; }
				if (Object.keys(orc[index].RXA[indexRXA].administeringProvider.assigningAuthority).length == 0) {
					if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.9&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.assigningAuthority.id = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.9&apos;]; }
					else delete orc[index].RXA[indexRXA].administeringProvider.assigningAuthority;
				}
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.10&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.nameTypeCode = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.10&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.11&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.identifierCheckDigit = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.11&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.12&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.codeIdentifyingCheckDigitScheme = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.12&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.13&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.identifierTypeCode = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.13&apos;]; }
				orc[index].RXA[indexRXA].administeringProvider.assigningFacility = {};
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.14&apos;][&apos;RXA.10.14.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.assigningFacility.id = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.14&apos;][&apos;RXA.10.14.1&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.14&apos;][&apos;RXA.10.14.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.assigningFacility.universalId = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.14&apos;][&apos;RXA.10.14.2&apos;]; }
				if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.14&apos;][&apos;RXA.10.14.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.assigningFacility.universalIdType = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.14&apos;][&apos;RXA.10.14.3&apos;]; }
				if (Object.keys(orc[index].RXA[indexRXA].administeringProvider.assigningFacility).length == 0) {
					if (rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.14&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeringProvider.assigningFacility.id = rxaSeg[&apos;RXA.10&apos;][&apos;RXA.10.14&apos;]; }
					else delete orc[index].RXA[indexRXA].administeringProvider.assigningFacility;
				}
				if (Object.keys(orc[index].RXA[indexRXA].administeringProvider).length == 0) {
					delete orc[index].RXA[indexRXA].administeringProvider;
				}
		
				// RXA.11, administeredAtLocation
				orc[index].RXA[indexRXA].administeredAtLocation = {};
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.pointOfCare = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.1&apos;]; }
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.room = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.2&apos;]; }
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.bed = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.3&apos;]; }
				orc[index].RXA[indexRXA].administeredAtLocation.facility = {};
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.4&apos;][&apos;RXA.11.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.facility.nameSpaceId =  rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.4&apos;][&apos;RXA.11.4.1&apos;]; }
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.4&apos;][&apos;RXA.11.4.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.facility.universalId =  rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.4&apos;][&apos;RXA.11.4.2&apos;]; }
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.4&apos;][&apos;RXA.11.4.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.facility.universalIdType =  rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.4&apos;][&apos;RXA.11.4.3&apos;]; }
				if (Object.keys(orc[index].RXA[indexRXA].administeredAtLocation.facility).length == 0) {
					if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.4&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.facility.nameSpaceId = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.4&apos;]; }
					else delete orc[index].RXA[indexRXA].administeredAtLocation.facility;
				}
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.5&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.locationStatus = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.5&apos;]; }
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.6&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.personLocationType = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.6&apos;]; }
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.7&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.building = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.7&apos;]; }
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.8&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.floor = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.8&apos;]; }
				if (rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.9&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredAtLocation.locationDescription = rxaSeg[&apos;RXA.11&apos;][&apos;RXA.11.9&apos;]; }
				if (Object.keys(orc[index].RXA[indexRXA].administeredAtLocation).length == 0) {
					delete orc[index].RXA[indexRXA].administeredAtLocation;
				}
		
				// RXA.12, administeredPerTimeUnit
				if (rxaSeg[&apos;RXA.12&apos;][&apos;RXA.12.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredPerTimeUnit = rxaSeg[&apos;RXA.12&apos;][&apos;RXA.12.1&apos;]; }
		
				// RXA.13, administeredStrength
				if (rxaSeg[&apos;RXA.13&apos;][&apos;RXA.13.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredStrength = rxaSeg[&apos;RXA.13&apos;][&apos;RXA.13.1&apos;]; }
		
				// RXA.14, administeredStrengthUnits
				orc[index].RXA[indexRXA].administeredStrengthUnits = {};
				if (rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredStrengthUnits.id = rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.1&apos;]; }
				if (rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.2&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredStrengthUnits.text = rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.2&apos;]; }
				if (rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.3&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredStrengthUnits.codingSystem = rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.3&apos;]; }
				if (rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.4&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredStrengthUnits.altId = rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.4&apos;]; }
				if (rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.5&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredStrengthUnits.altText = rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.5&apos;]; }
				if (rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.6&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].administeredStrengthUnits.altCodingSystem = rxaSeg[&apos;RXA.14&apos;][&apos;RXA.14.6&apos;]; }
				if (Object.keys(orc[index].RXA[indexRXA].administeredStrengthUnits).length == 0) {
					delete orc[index].RXA[indexRXA].administeredStrengthUnits;
				}
				
				// RXA.15, substanceLotNumber
				orc[index].RXA[indexRXA].substanceLotNumber = [];
				for each (field in rxaSeg[&apos;RXA.15&apos;]) {
					if (field[&apos;RXA.15.1&apos;].toString() != &quot;&quot;) {
						orc[index].RXA[indexRXA].substanceLotNumber.push(field[&apos;RXA.15.1&apos;]);
					}
				}
				if (Object.keys(orc[index].RXA[indexRXA].substanceLotNumber).length == 0) {
					delete orc[index].RXA[indexRXA].substanceLotNumber;
				}
		
				// RXA.16, substanceExpirationDate
				orc[index].RXA[indexRXA].substanceExpirationDate = [];
				for each (field in rxaSeg[&apos;RXA.16&apos;]) {
					if (field[&apos;RXA.16.1&apos;].toString() != &quot;&quot;) {
						orc[index].RXA[indexRXA].substanceExpirationDate.push(field[&apos;RXA.16.1&apos;]);
					}
				}
				if (orc[index].RXA[indexRXA].substanceExpirationDate.length == 0) {
					delete orc[index].RXA[indexRXA].substanceExpirationDate;
				}
				
				// RXA.17, substanceManufacturerName
				orc[index].RXA[indexRXA].substanceManufacturerName = [];
				for each (field in rxaSeg[&apos;RXA.17&apos;]) {
					var block = {};
					if (field[&apos;RXA.17.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXA.17.1&apos;]; }
					if (field[&apos;RXA.17.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXA.17.2&apos;]; }
					if (field[&apos;RXA.17.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXA.17.3&apos;]; }
					if (field[&apos;RXA.17.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXA.17.4&apos;]; }
					if (field[&apos;RXA.17.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXA.17.5&apos;]; }
					if (field[&apos;RXA.17.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXA.17.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXA[indexRXA].substanceManufacturerName.push(block);
					}
				}
				if (orc[index].RXA[indexRXA].substanceManufacturerName.length == 0) {
					delete orc[index].RXA[indexRXA].substanceManufacturerName;
				}
				
				// RXA.18, substanceRefusalReason
				orc[index].RXA[indexRXA].substanceRefusalReason = [];
				for each (field in rxaSeg[&apos;RXA.18&apos;]) {
					var block = {};
					if (field[&apos;RXA.18.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXA.18.1&apos;]; }
					if (field[&apos;RXA.18.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXA.18.2&apos;]; }
					if (field[&apos;RXA.18.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXA.18.3&apos;]; }
					if (field[&apos;RXA.18.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXA.18.4&apos;]; }
					if (field[&apos;RXA.18.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXA.18.5&apos;]; }
					if (field[&apos;RXA.18.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXA.18.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXA[indexRXA].substanceRefusalReason.push(block);
					}
				}
				if (orc[index].RXA[indexRXA].substanceRefusalReason.length == 0) {
					delete orc[index].RXA[indexRXA].substanceRefusalReason;
				}
				
				// RXA.19, indication
				orc[index].RXA[indexRXA].indication = [];
				for each (field in rxaSeg[&apos;RXA.19&apos;]) {
					var block = {};
					if (field[&apos;RXA.19.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;RXA.19.1&apos;]; }
					if (field[&apos;RXA.19.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;RXA.19.2&apos;]; }
					if (field[&apos;RXA.19.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;RXA.19.3&apos;]; }
					if (field[&apos;RXA.19.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;RXA.19.4&apos;]; }
					if (field[&apos;RXA.19.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;RXA.19.5&apos;]; }
					if (field[&apos;RXA.19.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;RXA.19.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].RXA[indexRXA].indication.push(block);
					}
				}
				if (orc[index].RXA[indexRXA].indication.length == 0) {
					delete orc[index].RXA[indexRXA].indication;
				}
				
				// RXA.20, completionStatus
				if (rxaSeg[&apos;RXA.20&apos;][&apos;RXA.20.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].completionStatus = rxaSeg[&apos;RXA.20&apos;][&apos;RXA.20.1&apos;]; }
		
				// RXA.21, actionCode
				if (rxaSeg[&apos;RXA.21&apos;][&apos;RXA.21.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].actionCode = rxaSeg[&apos;RXA.21&apos;][&apos;RXA.21.1&apos;]; }
		
				// RXA.22, systemEntryDateTime
				if (rxaSeg[&apos;RXA.22&apos;][&apos;RXA.22.1&apos;].toString() != &quot;&quot;) { orc[index].RXA[indexRXA].systemEntryDateTime = rxaSeg[&apos;RXA.22&apos;][&apos;RXA.22.1&apos;]; }
		
				// clean up RXA and increment indexRXA
				if (Object.keys(orc[index].RXA[indexRXA]).length == 0) {
					delete orc[index].RXA[indexRXA];
				} else {
					indexRXA++;
				}
			}

			// Clean up the RXA object if it&apos;s empty
			if (orc[index].RXA[0] == null){
				delete orc[index].RXA;
			}
		}

		// Increment the ORC index
		index++;
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// Re-add the ORC segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>9</sequenceNumber>
          <name>--RXR (Pharmacy Treatment Route) Segment - REQUIRES ORC MAPPING STEP ABOVE</name>
          <script>// Pull out the ORC JSON to embed the RXO and other rxaSegments in
var orc = JSON.parse($(&apos;hl7JSON&apos;)).content.ORC;

// ORC iteration, in order to grab related RXO&apos;s
if (msg[&apos;ORC&apos;].length() &gt; 0) {
	
	// ORC is a required to have a RXO, but if the ORC was blank and was removed from the JSON, just create a new one to add the RXO into
	if (!orc) {
		orc = [{}];
	}
	
	var index = 0;
	for each (seg in msg.ORC) {

		// RXR
		orc[index].RXR = {};

		if (msg[&apos;RXA&apos;].length() &gt; 0) {

			// Get the last RXA segment, since we&apos;ll want to get the RXR after that one
			var lastRXAseg = msg[&apos;RXA&apos;][msg[&apos;RXA&apos;].length() - 1];
			var rxrGroup = getSegmentsAfter(msg,lastRXAseg,&apos;RXR&apos;,true); // TODO: need to see if this works

			if (rxrGroup.length &gt; 0) {

				var rxrSeg = rxrGroup[0];
				
				// orc[index].RXR.1, route
				orc[index].RXR.route = {};
				if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXR.route.id = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.1&apos;]; }
				if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.2&apos;].toString() != &quot;&quot;) { orc[index].RXR.route.text = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.2&apos;]; }
				if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.3&apos;].toString() != &quot;&quot;) { orc[index].RXR.route.codingSystem = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.3&apos;]; }
				if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.4&apos;].toString() != &quot;&quot;) { orc[index].RXR.route.altId = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.4&apos;]; }
				if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.5&apos;].toString() != &quot;&quot;) { orc[index].RXR.route.altText = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.5&apos;]; }
				if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.6&apos;].toString() != &quot;&quot;) { orc[index].RXR.route.altCodingSystem = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.6&apos;]; }
				if (Object.keys(orc[index].RXR.route).length == 0) {
					delete orc[index].RXR.route;
				}
				
				// orc[index].RXR.2, site
				orc[index].RXR.site = {};
				if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXR.site.id = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.1&apos;]; }
				if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.2&apos;].toString() != &quot;&quot;) { orc[index].RXR.site.text = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.2&apos;]; }
				if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.3&apos;].toString() != &quot;&quot;) { orc[index].RXR.site.codingSystem = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.3&apos;]; }
				if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.4&apos;].toString() != &quot;&quot;) { orc[index].RXR.site.altId = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.4&apos;]; }
				if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.5&apos;].toString() != &quot;&quot;) { orc[index].RXR.site.altText = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.5&apos;]; }
				if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.6&apos;].toString() != &quot;&quot;) { orc[index].RXR.site.altCodingSystem = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.6&apos;]; }
				if (Object.keys(orc[index].RXR.site).length == 0) {
					delete orc[index].RXR.site;
				}
				
				// orc[index].RXR.3, administrationDevice
				orc[index].RXR.administrationDevice = {};
				if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.1&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationDevice.id = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.1&apos;]; }
				if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.2&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationDevice.text = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.2&apos;]; }
				if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.3&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationDevice.codingSystem = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.3&apos;]; }
				if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.4&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationDevice.altId = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.4&apos;]; }
				if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.5&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationDevice.altText = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.5&apos;]; }
				if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.6&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationDevice.altCodingSystem = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.6&apos;]; }
				if (Object.keys(orc[index].RXR.administrationDevice).length == 0) {
					delete orc[index].RXR.administrationDevice;
				}
				
				// orc[index].RXR.4, administrationMethod
				orc[index].RXR.administrationMethod = {};
				if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationMethod.id = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.1&apos;]; }
				if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.2&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationMethod.text = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.2&apos;]; }
				if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.3&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationMethod.codingSystem = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.3&apos;]; }
				if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.4&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationMethod.altId = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.4&apos;]; }
				if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.5&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationMethod.altText = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.5&apos;]; }
				if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.6&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationMethod.altCodingSystem = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.6&apos;]; }
				if (Object.keys(orc[index].RXR.administrationMethod).length == 0) {
					delete orc[index].RXR.administrationMethod;
				}
			}
		}

		// clean up RXR
		if (Object.keys(orc[index].RXR).length == 0) {
			delete orc[index].RXR;
		}
		
		// Increment the ORC index
		index++;
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// Re-add the ORC segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// Pull out the ORC JSON to embed the RXO and other rxaSegments in
var orc = JSON.parse($(&apos;hl7JSON&apos;)).content.ORC;

// ORC iteration, in order to grab related RXO&apos;s
if (msg[&apos;ORC&apos;].length() &gt; 0) {
	
	// ORC is a required to have a RXO, but if the ORC was blank and was removed from the JSON, just create a new one to add the RXO into
	if (!orc) {
		orc = [{}];
	}
	
	var index = 0;
	for each (seg in msg.ORC) {

		// RXR
		orc[index].RXR = {};

		if (msg[&apos;RXA&apos;].length() &gt; 0) {

			// Get the last RXA segment, since we&apos;ll want to get the RXR after that one
			var lastRXAseg = msg[&apos;RXA&apos;][msg[&apos;RXA&apos;].length() - 1];
			var rxrGroup = getSegmentsAfter(msg,lastRXAseg,&apos;RXR&apos;,true); // TODO: need to see if this works

			if (rxrGroup.length &gt; 0) {

				var rxrSeg = rxrGroup[0];
				
				// orc[index].RXR.1, route
				orc[index].RXR.route = {};
				if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.1&apos;].toString() != &quot;&quot;) { orc[index].RXR.route.id = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.1&apos;]; }
				if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.2&apos;].toString() != &quot;&quot;) { orc[index].RXR.route.text = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.2&apos;]; }
				if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.3&apos;].toString() != &quot;&quot;) { orc[index].RXR.route.codingSystem = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.3&apos;]; }
				if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.4&apos;].toString() != &quot;&quot;) { orc[index].RXR.route.altId = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.4&apos;]; }
				if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.5&apos;].toString() != &quot;&quot;) { orc[index].RXR.route.altText = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.5&apos;]; }
				if (rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.6&apos;].toString() != &quot;&quot;) { orc[index].RXR.route.altCodingSystem = rxrSeg[&apos;RXR.1&apos;][&apos;RXR.1.6&apos;]; }
				if (Object.keys(orc[index].RXR.route).length == 0) {
					delete orc[index].RXR.route;
				}
				
				// orc[index].RXR.2, site
				orc[index].RXR.site = {};
				if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.1&apos;].toString() != &quot;&quot;) { orc[index].RXR.site.id = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.1&apos;]; }
				if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.2&apos;].toString() != &quot;&quot;) { orc[index].RXR.site.text = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.2&apos;]; }
				if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.3&apos;].toString() != &quot;&quot;) { orc[index].RXR.site.codingSystem = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.3&apos;]; }
				if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.4&apos;].toString() != &quot;&quot;) { orc[index].RXR.site.altId = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.4&apos;]; }
				if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.5&apos;].toString() != &quot;&quot;) { orc[index].RXR.site.altText = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.5&apos;]; }
				if (rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.6&apos;].toString() != &quot;&quot;) { orc[index].RXR.site.altCodingSystem = rxrSeg[&apos;RXR.2&apos;][&apos;RXR.2.6&apos;]; }
				if (Object.keys(orc[index].RXR.site).length == 0) {
					delete orc[index].RXR.site;
				}
				
				// orc[index].RXR.3, administrationDevice
				orc[index].RXR.administrationDevice = {};
				if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.1&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationDevice.id = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.1&apos;]; }
				if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.2&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationDevice.text = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.2&apos;]; }
				if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.3&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationDevice.codingSystem = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.3&apos;]; }
				if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.4&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationDevice.altId = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.4&apos;]; }
				if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.5&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationDevice.altText = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.5&apos;]; }
				if (rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.6&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationDevice.altCodingSystem = rxrSeg[&apos;RXR.3&apos;][&apos;RXR.3.6&apos;]; }
				if (Object.keys(orc[index].RXR.administrationDevice).length == 0) {
					delete orc[index].RXR.administrationDevice;
				}
				
				// orc[index].RXR.4, administrationMethod
				orc[index].RXR.administrationMethod = {};
				if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.1&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationMethod.id = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.1&apos;]; }
				if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.2&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationMethod.text = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.2&apos;]; }
				if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.3&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationMethod.codingSystem = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.3&apos;]; }
				if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.4&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationMethod.altId = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.4&apos;]; }
				if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.5&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationMethod.altText = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.5&apos;]; }
				if (rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.6&apos;].toString() != &quot;&quot;) { orc[index].RXR.administrationMethod.altCodingSystem = rxrSeg[&apos;RXR.4&apos;][&apos;RXR.4.6&apos;]; }
				if (Object.keys(orc[index].RXR.administrationMethod).length == 0) {
					delete orc[index].RXR.administrationMethod;
				}
			}
		}

		// clean up RXR
		if (Object.keys(orc[index].RXR).length == 0) {
			delete orc[index].RXR;
		}
		
		// Increment the ORC index
		index++;
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// Re-add the ORC segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>10</sequenceNumber>
          <name>--OBX (Observation), NTE (Notes) Segments - REQUIRES ORC MAPPING STEP ABOVE</name>
          <script>// Pull out the ORC JSON to embed the RXO and other segments in
var orc = JSON.parse($(&apos;hl7JSON&apos;)).content.ORC;

// ORC iteration, in order to grab related RXO&apos;s
if (msg[&apos;ORC&apos;].length() &gt; 0) {

	// ORC is a required to have a RXO, but if the ORC was blank and was removed from the JSON, just create a new one to add the RXO into
	if (!orc) {
		orc = [{}];
	}
	
	var index = 0;
	for each (seg in msg.ORC) {

		// OBX (ORC)
		var obxGroup = getSegmentsAfter(msg,seg,&apos;OBX&apos;,true);
		if (msg[&apos;OBX&apos;].length() &gt; 0 &amp;&amp; orc) {
			orc[index].OBX = [];
			var indexOBX = 0;
			for each (obxSeg in obxGroup) {
				orc[index].OBX[indexOBX] = {};
		
				// OBX.1, setId
				if (obxSeg[&apos;OBX.1&apos;][&apos;OBX.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].setId = obxSeg[&apos;OBX.1&apos;][&apos;OBX.1.1&apos;]; }
		
				// OBX.2, valueType
				if (obxSeg[&apos;OBX.2&apos;][&apos;OBX.2.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].valueType = obxSeg[&apos;OBX.2&apos;][&apos;OBX.2.1&apos;]; }
				
				// OBX.3, identifier
				orc[index].OBX[indexOBX].identifier = {};
				if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].identifier.id = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.1&apos;]; }
				if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.2&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].identifier.text = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.2&apos;]; }
				if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.3&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].identifier.codingSystem = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.3&apos;]; }
				if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.4&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].identifier.altId = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.4&apos;]; }
				if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.5&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].identifier.altText = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.5&apos;]; }
				if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.6&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].identifier.altCodingSystem = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.6&apos;]; }
				if (Object.keys(orc[index].OBX[indexOBX].identifier).length == 0) {
					delete orc[index].OBX[indexOBX].identifier;
				}
		
				// OBX.4, subId
				if (obxSeg[&apos;OBX.4&apos;][&apos;OBX.4.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].subId = obxSeg[&apos;OBX.4&apos;][&apos;OBX.4.1&apos;]; }
				
				// OBX.5, observationValue
				orc[index].OBX[indexOBX].observationValue = [];
				for each (field in obxSeg[&apos;OBX.5&apos;]) {
					if (field[&apos;OBX.5.1&apos;].toString() != &quot;&quot;) { 
						orc[index].OBX[indexOBX].observationValue.push(field[&apos;OBX.5.1&apos;]); 
					} else if (field[&apos;OBX.5.5&apos;].toString() != &quot;&quot;) { 
						orc[index].OBX[indexOBX].observationValue.push(field[&apos;OBX.5.5&apos;]); 
					}
				}
				if (orc[index].OBX[indexOBX].observationValue.length == 0) {
					delete orc[index].OBX[indexOBX].observationValue;
				}
		
				// OBX.6, units
				orc[index].OBX[indexOBX].units = {};
				if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].units.id = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.1&apos;]; }
				if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.2&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].units.text = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.2&apos;]; }
				if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.3&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].units.codingSystem = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.3&apos;]; }
				if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.4&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].units.altId = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.4&apos;]; }
				if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.5&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].units.altText = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.5&apos;]; }
				if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.6&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].units.altCodingSystem = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.6&apos;]; }
				if (Object.keys(orc[index].OBX[indexOBX].units).length == 0) {
					delete orc[index].OBX[indexOBX].units;
				}
		
				// OBX.7, referenceRange
				if (obxSeg[&apos;OBX.7&apos;][&apos;OBX.7.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].referenceRange = obxSeg[&apos;OBX.7&apos;][&apos;OBX.7.1&apos;]; }
				
				// OBX.8, abnormalFlag
				orc[index].OBX[indexOBX].abnormalFlag = [];
				for each (field in obxSeg[&apos;OBX.9&apos;]) {
					if (field[&apos;OBX.9.1&apos;].toString() != &quot;&quot;) { 
						orc[index].OBX[indexOBX].abnormalFlag.push(field[&apos;OBX.9.1&apos;]); 
					}
				}
				if (orc[index].OBX[indexOBX].abnormalFlag.length == 0) {
					delete orc[index].OBX[indexOBX].abnormalFlag;
				}
		
				// OBX.9, probability
				if (obxSeg[&apos;OBX.9&apos;][&apos;OBX.9.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].probability = obxSeg[&apos;OBX.9&apos;][&apos;OBX.9.1&apos;]; }
				
				// OBX.10, natureOfAbnormal
				orc[index].OBX[indexOBX].natureOfAbnormal = [];
				for each (field in obxSeg[&apos;OBX.10&apos;]) {
					if (field[&apos;OBX.10.1&apos;].toString() != &quot;&quot;) { 
						orc[index].OBX[indexOBX].natureOfAbnormal.push(field[&apos;OBX.10.1&apos;]); 
					}
				}
				if (orc[index].OBX[indexOBX].natureOfAbnormal.length == 0) {
					delete orc[index].OBX[indexOBX].natureOfAbnormal;
				}
		
				// OBX.11, observeResultStatus
				if (obxSeg[&apos;OBX.11&apos;][&apos;OBX.11.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].observeResultStatus = obxSeg[&apos;OBX.11&apos;][&apos;OBX.11.1&apos;]; }
				
				// OBX.12, effectiveDateLastNormalValue
				if (obxSeg[&apos;OBX.12&apos;][&apos;OBX.12.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].effectiveDateLastNormalValue = obxSeg[&apos;OBX.12&apos;][&apos;OBX.12.1&apos;]; }
				
				// OBX.13, definedAccessChecks
				if (obxSeg[&apos;OBX.13&apos;][&apos;OBX.13.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].definedAccessChecks = obxSeg[&apos;OBX.13&apos;][&apos;OBX.13.1&apos;]; }
				
				// OBX.14, observationDateTime
				if (obxSeg[&apos;OBX.14&apos;][&apos;OBX.14.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].observationDateTime = obxSeg[&apos;OBX.14&apos;][&apos;OBX.14.1&apos;]; }
				
				// OBX.15, producersId
				orc[index].OBX[indexOBX].producersId = {};
				if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].producersId.id = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.1&apos;]; }
				if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.2&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].producersId.text = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.2&apos;]; }
				if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.3&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].producersId.codingSystem = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.3&apos;]; }
				if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.4&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].producersId.altId = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.4&apos;]; }
				if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.5&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].producersId.altText = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.5&apos;]; }
				if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.6&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].producersId.altCodingSystem = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.6&apos;]; }
				if (Object.keys(orc[index].OBX[indexOBX].producersId).length == 0) {
					delete orc[index].OBX[indexOBX].producersId;
				}
		
				// OBX.16, responsibleObserver
				orc[index].OBX[indexOBX].responsibleObserver = {};
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.id = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.1&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.2&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.lastName = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.2&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.3&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.firstName = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.3&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.4&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.middleInitOrName = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.4&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.5&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.suffix = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.5&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.6&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.prefix = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.6&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.7&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.degree = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.7&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.8&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.sourceTable = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.8&apos;]; }
				orc[index].OBX[indexOBX].responsibleObserver.assigningAuthority = {};
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.assigningAuthority.id = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.1&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.2&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.assigningAuthority.universalId = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.2&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.3&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.assigningAuthority.universalIdType = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.3&apos;]; }
				if (Object.keys(orc[index].OBX[indexOBX].responsibleObserver.assigningAuthority).length == 0) {
					if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.assigningAuthority.id = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;]; }
					else delete orc[index].OBX[indexOBX].responsibleObserver.assigningAuthority;
				}
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.10&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.nameTypeCode = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.10&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.11&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.identifierCheckDigit = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.11&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.12&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.codeIdentifyingCheckDigitScheme = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.12&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.13&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.identifierTypeCode = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.13&apos;]; }
				orc[index].OBX[indexOBX].responsibleObserver.assigningFacility = {};
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.assigningFacility.id = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.1&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.2&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.assigningFacility.universalId = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.2&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.3&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.assigningFacility.universalIdType = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.3&apos;]; }
				if (Object.keys(orc[index].OBX[indexOBX].responsibleObserver.assigningFacility).length == 0) {
					if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.assigningFacility.id = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;]; }
					else delete orc[index].OBX[indexOBX].responsibleObserver.assigningFacility;
				}
				if (Object.keys(orc[index].OBX[indexOBX].responsibleObserver).length == 0) {
					delete orc[index].OBX[indexOBX].responsibleObserver;
				}
		
				// OBX.17, observationMethod
				orc[index].OBX[indexOBX].observationMethod = [];
				for each (field in obxSeg[&apos;OBX.17&apos;]) {
					var block = {};
					if (field[&apos;OBX.17.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBX.17.1&apos;]; }
					if (field[&apos;OBX.17.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;OBX.17.2&apos;]; }
					if (field[&apos;OBX.17.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;OBX.17.3&apos;]; }
					if (field[&apos;OBX.17.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;OBX.17.4&apos;]; }
					if (field[&apos;OBX.17.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;OBX.17.5&apos;]; }
					if (field[&apos;OBX.17.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;OBX.17.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBX[indexOBX].observationMethod.push(block);
					}
				}
				if (orc[index].OBX[indexOBX].observationMethod.length == 0) {
					delete orc[index].OBX[indexOBX].observationMethod;
				}
		
				// NTE (OBX)
				var nteGroup = getSegmentsAfter(msg,obxSeg,&apos;NTE&apos;,true);
				if (nteGroup.length &gt; 0) {
					orc[index].OBX[indexOBX].NTE = [];
					var indexNTE = 0;
					for each (nteSeg in nteGroup) {
						orc[index].OBX[indexOBX].NTE[indexNTE] = {};
		
						// NTE.1, setId
						if (nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].NTE[indexNTE].setId = nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }
		
						// NTE.2, sourceOfComment
						if (nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].NTE[indexNTE].sourceOfComment = nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }
		
						// NTE.3, comment
						orc[index].OBX[indexOBX].NTE[indexNTE].comment = [];
						for each (field in nteSeg[&apos;NTE.3&apos;]) {
							var block = {};
							if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
								orc[index].OBX[indexOBX].NTE[indexNTE].comment.push(field[&apos;NTE.3.1&apos;]);
							}
						}
						if (orc[index].OBX[indexOBX].NTE[indexNTE].comment.length == 0) {
							delete orc[index].OBX[indexOBX].NTE[indexNTE].comment;
						}
		
						// clean up NTE and increment indexOBX
						if (orc[index].OBX[indexOBX].NTE.length == 0) {
							delete norc[index].OBX[indexOBX].NTE;
						} else {
							indexNTE++;
						}
					}
				}
		
				// clean up OBX and increment indexOBX
				if (Object.keys(orc[index].OBX[indexOBX]).length == 0) {
					delete orc[index].OBX[indexOBX];
				} else {
					indexOBX++;
				}
			}

			// Clean up the OBX object if it&apos;s empty
			if (orc[index].OBX[0] == null){
				delete orc[index].OBX;
			}
		}
		
		// Increment the ORC index
		index++;
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// Re-add the ORC segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// Pull out the ORC JSON to embed the RXO and other segments in
var orc = JSON.parse($(&apos;hl7JSON&apos;)).content.ORC;

// ORC iteration, in order to grab related RXO&apos;s
if (msg[&apos;ORC&apos;].length() &gt; 0) {

	// ORC is a required to have a RXO, but if the ORC was blank and was removed from the JSON, just create a new one to add the RXO into
	if (!orc) {
		orc = [{}];
	}
	
	var index = 0;
	for each (seg in msg.ORC) {

		// OBX (ORC)
		var obxGroup = getSegmentsAfter(msg,seg,&apos;OBX&apos;,true);
		if (msg[&apos;OBX&apos;].length() &gt; 0 &amp;&amp; orc) {
			orc[index].OBX = [];
			var indexOBX = 0;
			for each (obxSeg in obxGroup) {
				orc[index].OBX[indexOBX] = {};
		
				// OBX.1, setId
				if (obxSeg[&apos;OBX.1&apos;][&apos;OBX.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].setId = obxSeg[&apos;OBX.1&apos;][&apos;OBX.1.1&apos;]; }
		
				// OBX.2, valueType
				if (obxSeg[&apos;OBX.2&apos;][&apos;OBX.2.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].valueType = obxSeg[&apos;OBX.2&apos;][&apos;OBX.2.1&apos;]; }
				
				// OBX.3, identifier
				orc[index].OBX[indexOBX].identifier = {};
				if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].identifier.id = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.1&apos;]; }
				if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.2&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].identifier.text = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.2&apos;]; }
				if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.3&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].identifier.codingSystem = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.3&apos;]; }
				if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.4&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].identifier.altId = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.4&apos;]; }
				if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.5&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].identifier.altText = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.5&apos;]; }
				if (obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.6&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].identifier.altCodingSystem = obxSeg[&apos;OBX.3&apos;][&apos;OBX.3.6&apos;]; }
				if (Object.keys(orc[index].OBX[indexOBX].identifier).length == 0) {
					delete orc[index].OBX[indexOBX].identifier;
				}
		
				// OBX.4, subId
				if (obxSeg[&apos;OBX.4&apos;][&apos;OBX.4.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].subId = obxSeg[&apos;OBX.4&apos;][&apos;OBX.4.1&apos;]; }
				
				// OBX.5, observationValue
				orc[index].OBX[indexOBX].observationValue = [];
				for each (field in obxSeg[&apos;OBX.5&apos;]) {
					if (field[&apos;OBX.5.1&apos;].toString() != &quot;&quot;) { 
						orc[index].OBX[indexOBX].observationValue.push(field[&apos;OBX.5.1&apos;]); 
					} else if (field[&apos;OBX.5.5&apos;].toString() != &quot;&quot;) { 
						orc[index].OBX[indexOBX].observationValue.push(field[&apos;OBX.5.5&apos;]); 
					}
				}
				if (orc[index].OBX[indexOBX].observationValue.length == 0) {
					delete orc[index].OBX[indexOBX].observationValue;
				}
		
				// OBX.6, units
				orc[index].OBX[indexOBX].units = {};
				if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].units.id = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.1&apos;]; }
				if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.2&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].units.text = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.2&apos;]; }
				if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.3&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].units.codingSystem = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.3&apos;]; }
				if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.4&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].units.altId = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.4&apos;]; }
				if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.5&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].units.altText = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.5&apos;]; }
				if (obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.6&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].units.altCodingSystem = obxSeg[&apos;OBX.6&apos;][&apos;OBX.6.6&apos;]; }
				if (Object.keys(orc[index].OBX[indexOBX].units).length == 0) {
					delete orc[index].OBX[indexOBX].units;
				}
		
				// OBX.7, referenceRange
				if (obxSeg[&apos;OBX.7&apos;][&apos;OBX.7.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].referenceRange = obxSeg[&apos;OBX.7&apos;][&apos;OBX.7.1&apos;]; }
				
				// OBX.8, abnormalFlag
				orc[index].OBX[indexOBX].abnormalFlag = [];
				for each (field in obxSeg[&apos;OBX.9&apos;]) {
					if (field[&apos;OBX.9.1&apos;].toString() != &quot;&quot;) { 
						orc[index].OBX[indexOBX].abnormalFlag.push(field[&apos;OBX.9.1&apos;]); 
					}
				}
				if (orc[index].OBX[indexOBX].abnormalFlag.length == 0) {
					delete orc[index].OBX[indexOBX].abnormalFlag;
				}
		
				// OBX.9, probability
				if (obxSeg[&apos;OBX.9&apos;][&apos;OBX.9.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].probability = obxSeg[&apos;OBX.9&apos;][&apos;OBX.9.1&apos;]; }
				
				// OBX.10, natureOfAbnormal
				orc[index].OBX[indexOBX].natureOfAbnormal = [];
				for each (field in obxSeg[&apos;OBX.10&apos;]) {
					if (field[&apos;OBX.10.1&apos;].toString() != &quot;&quot;) { 
						orc[index].OBX[indexOBX].natureOfAbnormal.push(field[&apos;OBX.10.1&apos;]); 
					}
				}
				if (orc[index].OBX[indexOBX].natureOfAbnormal.length == 0) {
					delete orc[index].OBX[indexOBX].natureOfAbnormal;
				}
		
				// OBX.11, observeResultStatus
				if (obxSeg[&apos;OBX.11&apos;][&apos;OBX.11.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].observeResultStatus = obxSeg[&apos;OBX.11&apos;][&apos;OBX.11.1&apos;]; }
				
				// OBX.12, effectiveDateLastNormalValue
				if (obxSeg[&apos;OBX.12&apos;][&apos;OBX.12.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].effectiveDateLastNormalValue = obxSeg[&apos;OBX.12&apos;][&apos;OBX.12.1&apos;]; }
				
				// OBX.13, definedAccessChecks
				if (obxSeg[&apos;OBX.13&apos;][&apos;OBX.13.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].definedAccessChecks = obxSeg[&apos;OBX.13&apos;][&apos;OBX.13.1&apos;]; }
				
				// OBX.14, observationDateTime
				if (obxSeg[&apos;OBX.14&apos;][&apos;OBX.14.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].observationDateTime = obxSeg[&apos;OBX.14&apos;][&apos;OBX.14.1&apos;]; }
				
				// OBX.15, producersId
				orc[index].OBX[indexOBX].producersId = {};
				if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].producersId.id = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.1&apos;]; }
				if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.2&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].producersId.text = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.2&apos;]; }
				if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.3&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].producersId.codingSystem = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.3&apos;]; }
				if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.4&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].producersId.altId = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.4&apos;]; }
				if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.5&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].producersId.altText = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.5&apos;]; }
				if (obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.6&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].producersId.altCodingSystem = obxSeg[&apos;OBX.15&apos;][&apos;OBX.15.6&apos;]; }
				if (Object.keys(orc[index].OBX[indexOBX].producersId).length == 0) {
					delete orc[index].OBX[indexOBX].producersId;
				}
		
				// OBX.16, responsibleObserver
				orc[index].OBX[indexOBX].responsibleObserver = {};
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.id = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.1&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.2&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.lastName = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.2&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.3&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.firstName = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.3&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.4&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.middleInitOrName = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.4&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.5&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.suffix = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.5&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.6&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.prefix = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.6&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.7&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.degree = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.7&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.8&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.sourceTable = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.8&apos;]; }
				orc[index].OBX[indexOBX].responsibleObserver.assigningAuthority = {};
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.assigningAuthority.id = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.1&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.2&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.assigningAuthority.universalId = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.2&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.3&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.assigningAuthority.universalIdType = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;][&apos;OBX.16.9.3&apos;]; }
				if (Object.keys(orc[index].OBX[indexOBX].responsibleObserver.assigningAuthority).length == 0) {
					if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.assigningAuthority.id = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.9&apos;]; }
					else delete orc[index].OBX[indexOBX].responsibleObserver.assigningAuthority;
				}
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.10&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.nameTypeCode = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.10&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.11&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.identifierCheckDigit = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.11&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.12&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.codeIdentifyingCheckDigitScheme = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.12&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.13&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.identifierTypeCode = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.13&apos;]; }
				orc[index].OBX[indexOBX].responsibleObserver.assigningFacility = {};
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.assigningFacility.id = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.1&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.2&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.assigningFacility.universalId = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.2&apos;]; }
				if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.3&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.assigningFacility.universalIdType = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;][&apos;OBX.16.14.3&apos;]; }
				if (Object.keys(orc[index].OBX[indexOBX].responsibleObserver.assigningFacility).length == 0) {
					if (obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].responsibleObserver.assigningFacility.id = obxSeg[&apos;OBX.16&apos;][&apos;OBX.16.14&apos;]; }
					else delete orc[index].OBX[indexOBX].responsibleObserver.assigningFacility;
				}
				if (Object.keys(orc[index].OBX[indexOBX].responsibleObserver).length == 0) {
					delete orc[index].OBX[indexOBX].responsibleObserver;
				}
		
				// OBX.17, observationMethod
				orc[index].OBX[indexOBX].observationMethod = [];
				for each (field in obxSeg[&apos;OBX.17&apos;]) {
					var block = {};
					if (field[&apos;OBX.17.1&apos;].toString() != &quot;&quot;) { block.id = field[&apos;OBX.17.1&apos;]; }
					if (field[&apos;OBX.17.2&apos;].toString() != &quot;&quot;) { block.text = field[&apos;OBX.17.2&apos;]; }
					if (field[&apos;OBX.17.3&apos;].toString() != &quot;&quot;) { block.codingSystem = field[&apos;OBX.17.3&apos;]; }
					if (field[&apos;OBX.17.4&apos;].toString() != &quot;&quot;) { block.altId = field[&apos;OBX.17.4&apos;]; }
					if (field[&apos;OBX.17.5&apos;].toString() != &quot;&quot;) { block.altText = field[&apos;OBX.17.5&apos;]; }
					if (field[&apos;OBX.17.6&apos;].toString() != &quot;&quot;) { block.altCodingSystem = field[&apos;OBX.17.6&apos;]; }
					if (Object.keys(block).length &gt; 0) {
						orc[index].OBX[indexOBX].observationMethod.push(block);
					}
				}
				if (orc[index].OBX[indexOBX].observationMethod.length == 0) {
					delete orc[index].OBX[indexOBX].observationMethod;
				}
		
				// NTE (OBX)
				var nteGroup = getSegmentsAfter(msg,obxSeg,&apos;NTE&apos;,true);
				if (nteGroup.length &gt; 0) {
					orc[index].OBX[indexOBX].NTE = [];
					var indexNTE = 0;
					for each (nteSeg in nteGroup) {
						orc[index].OBX[indexOBX].NTE[indexNTE] = {};
		
						// NTE.1, setId
						if (nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].NTE[indexNTE].setId = nteSeg[&apos;NTE.1&apos;][&apos;NTE.1.1&apos;]; }
		
						// NTE.2, sourceOfComment
						if (nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;].toString() != &quot;&quot;) { orc[index].OBX[indexOBX].NTE[indexNTE].sourceOfComment = nteSeg[&apos;NTE.2&apos;][&apos;NTE.2.1&apos;]; }
		
						// NTE.3, comment
						orc[index].OBX[indexOBX].NTE[indexNTE].comment = [];
						for each (field in nteSeg[&apos;NTE.3&apos;]) {
							var block = {};
							if (field[&apos;NTE.3.1&apos;].toString() != &quot;&quot;) { 
								orc[index].OBX[indexOBX].NTE[indexNTE].comment.push(field[&apos;NTE.3.1&apos;]);
							}
						}
						if (orc[index].OBX[indexOBX].NTE[indexNTE].comment.length == 0) {
							delete orc[index].OBX[indexOBX].NTE[indexNTE].comment;
						}
		
						// clean up NTE and increment indexOBX
						if (orc[index].OBX[indexOBX].NTE.length == 0) {
							delete norc[index].OBX[indexOBX].NTE;
						} else {
							indexNTE++;
						}
					}
				}
		
				// clean up OBX and increment indexOBX
				if (Object.keys(orc[index].OBX[indexOBX]).length == 0) {
					delete orc[index].OBX[indexOBX];
				} else {
					indexOBX++;
				}
			}

			// Clean up the OBX object if it&apos;s empty
			if (orc[index].OBX[0] == null){
				delete orc[index].OBX;
			}
		}
		
		// Increment the ORC index
		index++;
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// Re-add the ORC segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>11</sequenceNumber>
          <name>--CTI (Clinical TrialIdentification) Segment - REQUIRES ORC MAPPING STEP ABOVE</name>
          <script>// Pull out the ORC JSON to embed the RXO and other segments in
var orc = JSON.parse($(&apos;hl7JSON&apos;)).content.ORC;

// ORC iteration, in order to grab related RXO&apos;s
if (msg[&apos;ORC&apos;].length() &gt; 0) {

	// ORC is a required to have a RXO, but if the ORC was blank and was removed from the JSON, just create a new one to add the RXO into
	if (!orc) {
		orc = [{}];
	}
	
	var index = 0;
	for each (seg in msg.ORC) {

		// CTI
		var ctiGroup = getSegmentsAfter(msg,seg,&apos;CTI&apos;,true);
		if (msg[&apos;CTI&apos;].length() &gt; 0) {
			orc[index].CTI = [];
			var indexCTI = 0;
			for each (ctiSeg in ctiGroup) {
				orc[index].CTI[indexCTI] = {};
		
				// CTI.1, sponsorStudyIdentifier
				orc[index].CTI[indexCTI].sponsorStudyIdentifier = {};
				if (ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.1&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].sponsorStudyIdentifier.id = ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.1&apos;]; }
				if (ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.2&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].sponsorStudyIdentifier.namespaceId = ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.2&apos;]; }
				if (ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.3&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].sponsorStudyIdentifier.universalId = ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.3&apos;]; }
				if (ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.4&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].sponsorStudyIdentifier.unniveralIdType = ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.4&apos;]; }
				if (Object.keys(orc[index].CTI[indexCTI].sponsorStudyIdentifier).length == 0) {
					delete orc[index].CTI[indexCTI].sponsorStudyIdentifier;
				}
		
				// CTI.2, studyPhaseIdentifier
				orc[index].CTI[indexCTI].studyPhaseIdentifier = {};
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.1&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.id = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.1&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.2&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.text = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.2&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.3&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.codingSystem = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.3&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.4&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.altId = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.4&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.5&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.altText = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.5&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.6&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.altCodingSystem = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.6&apos;]; }
				if (Object.keys(orc[index].CTI[indexCTI].studyPhaseIdentifier).length == 0) {
					delete orc[index].CTI[indexCTI].studyPhaseIdentifier;
				}
		
				// CTI.3, studyScheduledTimePoint
				orc[index].CTI[indexCTI].studyScheduledTimePoint = {};
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.1&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.id = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.1&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.2&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.text = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.2&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.3&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.codingSystem = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.3&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.4&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.altId = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.4&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.5&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.altText = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.5&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.6&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.altCodingSystem = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.6&apos;]; }
				if (Object.keys(orc[index].CTI[indexCTI].studyScheduledTimePoint).length == 0) {
					delete orc[index].CTI[indexCTI].studyScheduledTimePoint;
				}
		
				// clean up CTI and increment indexCTI
				if (Object.keys(orc[index].CTI[indexCTI]).length == 0) {
					delete orc[index].CTI[indexCTI];
				} else {
					indexCTI++;
				}
			}

			// Clean up the CTI object if it&apos;s empty
			if (orc[index].CTI[0] == null){
				delete orc[index].CTI;
			}
		}
		
		// Increment the ORC index
		index++;
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// Re-add the ORC segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>// Pull out the ORC JSON to embed the RXO and other segments in
var orc = JSON.parse($(&apos;hl7JSON&apos;)).content.ORC;

// ORC iteration, in order to grab related RXO&apos;s
if (msg[&apos;ORC&apos;].length() &gt; 0) {

	// ORC is a required to have a RXO, but if the ORC was blank and was removed from the JSON, just create a new one to add the RXO into
	if (!orc) {
		orc = [{}];
	}
	
	var index = 0;
	for each (seg in msg.ORC) {

		// CTI
		var ctiGroup = getSegmentsAfter(msg,seg,&apos;CTI&apos;,true);
		if (msg[&apos;CTI&apos;].length() &gt; 0) {
			orc[index].CTI = [];
			var indexCTI = 0;
			for each (ctiSeg in ctiGroup) {
				orc[index].CTI[indexCTI] = {};
		
				// CTI.1, sponsorStudyIdentifier
				orc[index].CTI[indexCTI].sponsorStudyIdentifier = {};
				if (ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.1&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].sponsorStudyIdentifier.id = ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.1&apos;]; }
				if (ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.2&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].sponsorStudyIdentifier.namespaceId = ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.2&apos;]; }
				if (ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.3&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].sponsorStudyIdentifier.universalId = ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.3&apos;]; }
				if (ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.4&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].sponsorStudyIdentifier.unniveralIdType = ctiSeg[&apos;CTI.1&apos;][&apos;CTI.1.4&apos;]; }
				if (Object.keys(orc[index].CTI[indexCTI].sponsorStudyIdentifier).length == 0) {
					delete orc[index].CTI[indexCTI].sponsorStudyIdentifier;
				}
		
				// CTI.2, studyPhaseIdentifier
				orc[index].CTI[indexCTI].studyPhaseIdentifier = {};
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.1&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.id = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.1&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.2&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.text = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.2&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.3&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.codingSystem = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.3&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.4&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.altId = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.4&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.5&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.altText = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.5&apos;]; }
				if (ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.6&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyPhaseIdentifier.altCodingSystem = ctiSeg[&apos;CTI.2&apos;][&apos;CTI.2.6&apos;]; }
				if (Object.keys(orc[index].CTI[indexCTI].studyPhaseIdentifier).length == 0) {
					delete orc[index].CTI[indexCTI].studyPhaseIdentifier;
				}
		
				// CTI.3, studyScheduledTimePoint
				orc[index].CTI[indexCTI].studyScheduledTimePoint = {};
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.1&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.id = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.1&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.2&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.text = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.2&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.3&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.codingSystem = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.3&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.4&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.altId = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.4&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.5&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.altText = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.5&apos;]; }
				if (ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.6&apos;].toString() != &quot;&quot;) { orc[index].CTI[indexCTI].studyScheduledTimePoint.altCodingSystem = ctiSeg[&apos;CTI.3&apos;][&apos;CTI.3.6&apos;]; }
				if (Object.keys(orc[index].CTI[indexCTI].studyScheduledTimePoint).length == 0) {
					delete orc[index].CTI[indexCTI].studyScheduledTimePoint;
				}
		
				// clean up CTI and increment indexCTI
				if (Object.keys(orc[index].CTI[indexCTI]).length == 0) {
					delete orc[index].CTI[indexCTI];
				} else {
					indexCTI++;
				}
			}

			// Clean up the CTI object if it&apos;s empty
			if (orc[index].CTI[0] == null){
				delete orc[index].CTI;
			}
		}
		
		// Increment the ORC index
		index++;
	}
}

// Optional: save a copy of the completed ORC segment for reference later
//channelMap.put(&quot;orc&quot;, orc); // uncomment to save

// Re-add the ORC segment to the hl7JSON object
if (orc &amp;&amp; Object.keys(orc).length != 0) {
	var hl7JSON = JSON.parse($(&apos;hl7JSON&apos;));
	hl7JSON.content.ORC = orc;
	channelMap.put(&quot;hl7JSON&quot;, JSON.stringify(hl7JSON));
}</string>
            </entry>
          </data>
        </step>
      </steps>
      <inboundTemplate encoding="base64"></inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundDataType>HL7V2</inboundDataType>
      <outboundDataType>HL7V2</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.1">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.1">
          <handleRepetitions>true</handleRepetitions>
          <handleSubcomponents>true</handleSubcomponents>
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <stripNamespaces>true</stripNamespaces>
          <segmentDelimiter>\r</segmentDelimiter>
          <convertLineBreaks>true</convertLineBreaks>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.1">
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <segmentDelimiter>\r</segmentDelimiter>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.1">
          <splitType>MSH_Segment</splitType>
          <batchScript></batchScript>
        </batchProperties>
        <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.1">
          <segmentDelimiter>\r</segmentDelimiter>
          <successfulACKCode>AA</successfulACKCode>
          <successfulACKMessage></successfulACKMessage>
          <errorACKCode>AE</errorACKCode>
          <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
          <rejectedACKCode>AR</rejectedACKCode>
          <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
          <msh15ACKAccept>false</msh15ACKAccept>
          <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
        </responseGenerationProperties>
        <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.1">
          <successfulACKCode>AA,CA</successfulACKCode>
          <errorACKCode>AE,CE</errorACKCode>
          <rejectedACKCode>AR,CR</rejectedACKCode>
          <validateMessageControlId>true</validateMessageControlId>
          <originalMessageControlId>Destination_Encoded</originalMessageControlId>
          <originalIdMapVariable></originalIdMapVariable>
        </responseValidationProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.1">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.1">
          <handleRepetitions>true</handleRepetitions>
          <handleSubcomponents>true</handleSubcomponents>
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <stripNamespaces>true</stripNamespaces>
          <segmentDelimiter>\r</segmentDelimiter>
          <convertLineBreaks>true</convertLineBreaks>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.1">
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <segmentDelimiter>\r</segmentDelimiter>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.1">
          <splitType>MSH_Segment</splitType>
          <batchScript></batchScript>
        </batchProperties>
        <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.1">
          <segmentDelimiter>\r</segmentDelimiter>
          <successfulACKCode>AA</successfulACKCode>
          <successfulACKMessage></successfulACKMessage>
          <errorACKCode>AE</errorACKCode>
          <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
          <rejectedACKCode>AR</rejectedACKCode>
          <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
          <msh15ACKAccept>false</msh15ACKAccept>
          <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
        </responseGenerationProperties>
        <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.1">
          <successfulACKCode>AA,CA</successfulACKCode>
          <errorACKCode>AE,CE</errorACKCode>
          <rejectedACKCode>AR,CR</rejectedACKCode>
          <validateMessageControlId>true</validateMessageControlId>
          <originalMessageControlId>Destination_Encoded</originalMessageControlId>
          <originalIdMapVariable></originalIdMapVariable>
        </responseValidationProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.4.1">
      <rules/>
    </filter>
    <transportName>Channel Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.4.1">
      <metaDataId>1</metaDataId>
      <name>Internal Test</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.4.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.4.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
        </destinationConnectorProperties>
        <channelId>none</channelId>
        <channelTemplate>${hl7JSON}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.4.1">
        <steps/>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.1">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.1">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.1">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.1">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.1">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.4.1">
        <steps/>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.4.1">
        <rules/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.4.1">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <tags class="linked-hash-set"/>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="3.4.1">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <archiveEnabled>true</archiveEnabled>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <codeTemplateLibraries>
    <codeTemplateLibrary version="3.4.1">
      <id>10e63131-3e24-4419-a268-ed823aba5790</id>
      <name>Datica Mirth OCI Code Template Library</name>
      <revision>1</revision>
      <lastModified>
        <time>1512397292259</time>
        <timezone>America/New_York</timezone>
      </lastModified>
      <description>This library contains code templates used by the Datica Mirth OCI channels</description>
      <includeNewChannels>true</includeNewChannels>
      <enabledChannelIds>
        <string>1192bb86-1f4d-4ca0-9343-e1b87d790154</string>
        <string>44ade9e2-d2ec-40f0-99cd-c2518f1aef0a</string>
        <string>2edfb44b-d53e-43c0-9cee-dfb8c5d28c80</string>
        <string>12832ab3-cdac-485f-bf81-4c525359af88</string>
        <string>6546423b-30d4-46dc-92d7-3e651a542a42</string>
        <string>0d245f0f-1239-46cb-96db-b6c03ee91b18</string>
        <string>515eb748-bcc9-4b46-a086-be3174f3df41</string>
        <string>f6ba16ce-08cf-499f-8dac-143646aadd51</string>
        <string>6a27e181-4776-46d7-b862-5cc4968ec8e7</string>
        <string>647fa65c-d0bb-4f32-a1f6-b218136ebdb8</string>
      </enabledChannelIds>
      <disabledChannelIds>
        <string>8b69b2e3-4cb0-40f9-93e4-b56c33ba112d</string>
        <string>03fbd8a8-0215-47fb-8077-bdfea025f8be</string>
        <string>3a0d6cc3-aa81-405f-9030-9e6f1aaede1e</string>
        <string>e7c2be6b-fba1-4fa6-8960-0fe4e997b5bd</string>
        <string>7fa5ee0f-5da8-4460-b9b9-9ad791096261</string>
        <string>52e9904e-a3ec-44fa-ae8a-d660a6e10a42</string>
        <string>4c14f245-2cd7-4e51-9401-6a941fa948f5</string>
        <string>7a7a1307-a695-490f-9755-46ada428c159</string>
        <string>4108bf57-50de-4347-8719-64f582334aa0</string>
        <string>638e0505-abd0-405d-8422-8b6e0e84e238</string>
        <string>9ff5bb6e-6c76-4b3a-9e87-033a11dad4f6</string>
        <string>27b614a4-fbd6-41bc-b37f-d9454a0b73eb</string>
        <string>8f7a81c6-ab97-4335-b731-f3d2c715cada</string>
        <string>a605c468-d34f-4966-9c18-db8ce72e023f</string>
        <string>ab4e0274-be44-444a-8530-c08ae238cd93</string>
        <string>9391bf69-d2f7-4085-bff0-723ef11a9df5</string>
        <string>053386c8-3182-4620-bc1b-9d3974d34be8</string>
        <string>4b7b461d-8246-4797-a8f3-06f07d9efee4</string>
        <string>76e2dd55-419b-4f78-8cb4-b8eb687499f5</string>
        <string>866fbd5b-63a2-4211-b13f-dabd5601de7c</string>
        <string>184f26f3-f72c-4208-a66e-6ff4b78d0d98</string>
        <string>689629e8-f3d1-4ded-b2e8-b28264f74da6</string>
        <string>479ca566-d489-4f92-ac92-6bb019eecd27</string>
        <string>dce6c65a-511c-4d06-909e-6e9553281842</string>
        <string>651d65e5-1460-44d9-8b9d-ee983797f36e</string>
        <string>424319ec-4d06-44ae-b395-b0e0e3c161e5</string>
        <string>b9e4ec1b-3666-4a7c-a6e5-d44bf4acb58b</string>
        <string>423968eb-01ad-465f-891a-250444e65d13</string>
        <string>fc6b053f-f078-477d-b317-e55aa12e8d1a</string>
        <string>3076fe92-da8c-46f1-b162-4498433c82c3</string>
        <string>0a73e2f2-ef41-4e08-afde-3f0a445106eb</string>
        <string>06f51744-9fe3-4c9c-a100-0497fc79a5b1</string>
        <string>14fd925a-eaab-457c-9d8b-18803350fb1a</string>
        <string>ae2cac45-d0d6-404f-9530-3fc44e2369cc</string>
        <string>6a029d79-d96f-4437-b9ef-10b2f345dd5d</string>
        <string>4da26cfa-8b26-4353-9928-f33f024bc8a6</string>
        <string>217689ee-ddf7-4085-9261-3e030e95293a</string>
        <string>a20be57d-4b14-4932-88fd-b3264b444fdf</string>
        <string>3dde045a-c514-4cd7-b6d5-5576155177d5</string>
        <string>a99f3b5a-07f0-400d-ae09-c195cf2a59c5</string>
        <string>70d1e94a-bc04-413e-8510-f534075deb79</string>
        <string>f2231b87-3c49-498a-962d-03503bc04147</string>
        <string>6d5edbe0-3c33-4a60-b78b-08e32afdb880</string>
        <string>af777014-3696-4fad-8f98-293e7d65a90c</string>
        <string>17f3958e-1207-47ba-aab9-5aab3ef15476</string>
        <string>8729b803-b38a-46f6-be11-5169facc2632</string>
        <string>015db3f7-825c-484e-86b2-33b9e79b727c</string>
        <string>2a032710-3d63-450a-b0bf-c0099bb29aab</string>
        <string>4bf5438f-232a-487a-9581-c796f605654d</string>
        <string>60254522-dc8c-43d6-bb41-ac66897c0d43</string>
        <string>1f7adc36-6fa0-47f3-9228-d55c8a988ac0</string>
        <string>5c88d795-4958-4147-b151-b84111a83d89</string>
        <string>d94f8c71-b05b-4446-813d-be17058a6480</string>
        <string>a48610e7-1f18-467b-bb69-b3ac5c2b8c04</string>
        <string>29361ad8-00dc-45c7-ab61-7b2e07023969</string>
        <string>f893da87-8e5f-48b8-9280-c384ff3bcc99</string>
        <string>83eb8d17-1892-4bfd-b19b-e28e0ca03b69</string>
        <string>1d2d8815-0962-4986-b731-b1f49a733db8</string>
        <string>ab1f0813-77a3-4b4e-90be-a472e999a047</string>
        <string>07b13575-8803-4340-92e8-40bc9f160fc8</string>
        <string>6f4013b1-cbc4-412b-9984-2204fe7746da</string>
        <string>660f2bb8-3471-47a4-9299-98a985017333</string>
        <string>30573bec-3215-4dc8-becb-091ab5485be0</string>
        <string>46214349-f697-4c7b-8d26-44fd409efc53</string>
        <string>f6b6cbe4-cdca-42f0-ac74-dfa7e49a27c6</string>
        <string>abf6afe4-de93-44e8-b59c-1c967d045b38</string>
        <string>9966294e-7c31-4f52-9d2f-2fd705e583a9</string>
        <string>f1246189-09ae-4ecb-b73e-35d9d4a21876</string>
        <string>e00c4162-2e90-440a-8e99-1543a0d8472d</string>
        <string>0fa23c6d-b057-44bc-a4b3-f4019fea0c5e</string>
        <string>9901adbe-50a3-431f-8b18-b93375093c6f</string>
        <string>c43b6a54-5476-4eb7-82c7-b741009c4031</string>
        <string>3c90fc7c-1aa1-4381-83a1-116e3e6bdd61</string>
        <string>f590b560-ca56-45de-8716-1432f7b6efc5</string>
        <string>a7091b52-5045-47d3-84ae-e5a6579e2943</string>
        <string>aa0e5130-6ffd-4960-a1f4-a9cefd1af050</string>
        <string>3511e706-3d3c-4174-a65f-0905688e9f22</string>
        <string>9977e3d2-2184-4e4f-8815-f9b42830dd51</string>
        <string>3fc61612-3fc3-4a64-b42f-2975a71f66b7</string>
        <string>f47f2edc-2a29-4fc4-9de6-a9efa9fcbb38</string>
        <string>f1b9e55e-698d-4d5a-a6fd-d8bc75f7251f</string>
        <string>b1e2fe6b-4991-40ff-a9f4-4ce5abed0109</string>
        <string>6c07f763-a93a-47ae-a1d8-2580fc0f5ccc</string>
        <string>c8f5ba67-7d41-4abf-b4f5-dd122b441f36</string>
        <string>2dcc02c1-0e50-44e2-aa63-46b5bbb6d31c</string>
        <string>698bc4ea-c9c7-4af3-9cbc-0ae9f27665bd</string>
        <string>20ebe877-0a55-4589-8daa-bbc66f8c1746</string>
        <string>104680bd-a293-4edc-a33a-ecfeec069da5</string>
        <string>99beb09b-6d76-4fc1-aa07-8e53472b7036</string>
        <string>782cfee5-4ca6-49c3-ae7f-dd76a5e4df48</string>
        <string>d0b3a0e3-01ff-4ce5-a4a7-748c7413e51f</string>
        <string>20b589b6-4167-4f8d-b8ab-242f62a28452</string>
        <string>993fe87c-697f-4259-b59f-ebd7e3913ac8</string>
        <string>640344b6-2d0e-4858-bd43-ef58d9329f75</string>
        <string>93aa0bb7-a3e4-488d-98ec-d14ba49d1c9c</string>
        <string>d51e8dea-3e2a-49d4-9475-21db46ed1559</string>
        <string>c67da354-57e3-401f-b684-2190b92335ac</string>
        <string>4ad918f5-1323-44a9-b3ec-fce83e062b9d</string>
        <string>b4c20126-17c5-4c11-a76e-7fa2aaf94cbe</string>
        <string>220aeb9b-3050-43ff-bd41-7e38cec5010e</string>
        <string>e8667ddb-063e-48cf-a163-f2d50944296b</string>
        <string>2de6bc63-2d0c-4891-8662-05331cdbc135</string>
        <string>e340c788-a921-4bab-92d9-ff8e0a640575</string>
        <string>7223dcc0-41c9-4cba-872f-3cb8ca724ea3</string>
        <string>a74ae7d3-b6c3-49b5-840f-0aafbac3fa6b</string>
        <string>b92f73d2-fb74-4a63-bec5-c8464bc22653</string>
        <string>b340b685-f8f8-4df2-a03e-82efe8d9afcf</string>
        <string>a8454dfe-aa8e-469f-a5bc-fe30fd3d3033</string>
        <string>ef90d21a-b975-45f9-8426-83de2de99188</string>
        <string>fd282052-cae0-4b01-9f4a-2a68f8d4fd8a</string>
        <string>cadedffd-7184-4c62-9ed9-5cf36ccb32b8</string>
        <string>98d6cd83-c049-44d8-ad48-1c44d95ce6f2</string>
        <string>fc7fa005-2346-4dc2-9fb2-faaa090c556f</string>
        <string>1045246c-704d-445d-8733-86aa16205994</string>
        <string>0d6774d6-8663-4513-8a78-fea5ebe69bbc</string>
        <string>b56f9561-3659-4e4d-a03c-723b2daf9f49</string>
        <string>6548b06b-0e02-4375-8749-b61e5a016ed2</string>
        <string>76656822-9750-4ba0-8b42-8efc01f75230</string>
        <string>1cb576e1-6c80-457b-a7d7-9406113157a3</string>
        <string>86e5d119-ef36-4eb6-852e-701228076b51</string>
        <string>748de96b-9101-47d0-88aa-c18344c194ca</string>
        <string>6704e9fc-7f6f-4e67-bfd4-527ba1a8b186</string>
        <string>749d6b73-ced6-4638-a7ad-4049c811a35c</string>
        <string>412610bb-4ac3-4229-8929-f7969018a9dd</string>
        <string>04ef8a88-576f-42ab-a637-5383776a0b60</string>
        <string>8cfa82cc-ee8a-428a-9fff-e32b2439b9c8</string>
        <string>6d6a6667-6c83-476a-a0f6-dd8d524dd887</string>
        <string>fbd5a175-ad41-44f6-95d3-bd898a3f3fb8</string>
        <string>a6bb0a27-6db8-4218-9478-a1600bae3a7b</string>
        <string>2d2c762c-2f17-482e-af65-1b979c758250</string>
        <string>1a7d6d5f-97a9-4e77-80eb-cfb94fa445c6</string>
        <string>4dcf348b-f385-4889-8e10-580092be907f</string>
        <string>ab7f86cd-94ff-4237-bef9-3e45057821ba</string>
        <string>fd891108-6b82-4ca9-a0ac-0d163926ae0a</string>
        <string>bc5b7a3d-b86d-48d1-81fd-a5f92303defb</string>
        <string>4c9b4da2-faf1-45b3-9cdf-bec2f81bf308</string>
        <string>55de7d91-8e2e-473b-9ca1-09aa47254a75</string>
        <string>add3dd62-61ff-4c63-a4a5-59b97c22c830</string>
        <string>ce9ebf65-8647-46bb-83aa-f1acb687c877</string>
      </disabledChannelIds>
      <codeTemplates>
        <codeTemplate version="3.4.1">
          <id>b9651842-7ccb-4761-aedf-a9a1461dd5f7</id>
          <name>Convert HL7 Date Format to ISO</name>
          <revision>1</revision>
          <lastModified>
            <time>1512397292449</time>
            <timezone>America/New_York</timezone>
          </lastModified>
          <type>FUNCTION</type>
          <contextSet>
            <delegate>
              <contextType>DESTINATION_DISPATCHER</contextType>
              <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
              <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
              <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              <contextType>SOURCE_RECEIVER</contextType>
            </delegate>
          </contextSet>
          <code>/**
	Converts standard HL7 v2.x date format to human-readable ISO date format
*/

/*
	Author: Datica Inc.
	toISODate: Returns an ISO-formatted date string with specified timezone offset

	Arguments
	---------
		Required
		--------
			hl7DateString:		An HL7-formatted date string (ex: &quot;yyyyMMddHHmmss&quot;

		Optional
		--------
			timezome:			A timezone identifier string corresponding to one of the java.util.TimeZone values (ex: &quot;US/Central&quot;)
*/

function toISODate( hl7DateString, timezone ) {
	var isoDate;
	var dateString;
	var hl7Formatter;
	var isoFormatter = new Packages.java.text.SimpleDateFormat(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ssZ&quot;);

	if (timezone) {
		isoFormatter.setTimeZone(Packages.java.util.TimeZone.getTimeZone(timezone));
	}
	
	if ( hl7DateString != null &amp;&amp; !isNaN(hl7DateString.substring(0,13)) &amp;&amp; hl7DateString.length &gt; 14 ) {
		hl7Formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmssZ&quot;);
	}
	else if ( hl7DateString != null &amp;&amp; !isNaN(hl7DateString) &amp;&amp; hl7DateString &gt; 0 &amp;&amp; hl7DateString.length == 14 ) {
		hl7Formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	} 
	else if ( hl7DateString != null &amp;&amp; !isNaN(hl7DateString) &amp;&amp; hl7DateString &gt; 0 &amp;&amp; hl7DateString.length == 12 ) {
		hl7Formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmm&quot;);
	} 
	else if ( hl7DateString != null &amp;&amp; !isNaN(hl7DateString) &amp;&amp; hl7DateString &gt; 0 &amp;&amp; hl7DateString.length == 8 ) {
		hl7Formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMdd&quot;);
	} 
	else dateString = hl7DateString;
	
	try {
		if (hl7Formatter) {
			isoDate = hl7Formatter.parse(hl7DateString);
			isoDate = isoFormatter.format(isoDate);
			dateString = new String(isoDate);
		}
	} catch (err) {
		dateString = hl7DateString;
	} finally {
		return dateString;
	}
}</code>
        </codeTemplate>
        <codeTemplate version="3.4.1">
          <id>95e528b7-1e7f-490e-86da-7c14b23ee4f3</id>
          <name>Convert ISO Date Format to HL7</name>
          <revision>1</revision>
          <lastModified>
            <time>1512397292549</time>
            <timezone>America/New_York</timezone>
          </lastModified>
          <type>FUNCTION</type>
          <contextSet>
            <delegate>
              <contextType>DESTINATION_DISPATCHER</contextType>
              <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
              <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
              <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              <contextType>SOURCE_RECEIVER</contextType>
            </delegate>
          </contextSet>
          <code>/**
	Converts ISO date format to HL7 v2 format
*/

/*
	Author: Datica Inc.
	toHL7Date: Returns an HL7-formatted date string with specified timezone offset

	Arguments
	---------
		Required
		--------
			isoDateString:		An ISO-formatted date string (ex: &quot;yyyy-MM-ddTHH:mm:ssZ&quot;

		Optional
		--------
			timezome:			A timezone identifier string corresponding to one of the java.util.TimeZone values (ex: &quot;US/Central&quot;)
*/

function toHL7Date( isoDateString, timezone ) 
{
	var hl7Date;
	var dateString;
	var isoFormatter;
	var hl7Formatter;

	// ISO Date Format: yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;
	if ( isoDateString != null &amp;&amp; isoDateString.length &lt;= 25 &amp;&amp; isoDateString.length &gt;= 22) {
		isoFormatter = new Packages.java.text.SimpleDateFormat(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ssZ&quot;);
		hl7Formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmssZ&quot;);
		if (timezone) {
			hl7Formatter.setTimeZone(Packages.java.util.TimeZone.getTimeZone(timezone));
		}
	}
	// ISO Date Format: yyyy-MM-dd HH:mm:ss
	else if ( isoDateString != null &amp;&amp; isoDateString.length == 19 ) {
		isoFormatter = new Packages.java.text.SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
		hl7Formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;);
	}
	// ISO Date Format: yyyy-MM-dd HH:mm
	else if ( isoDateString != null &amp;&amp; isoDateString.length == 16 ) {
		isoFormatter = new Packages.java.text.SimpleDateFormat(&quot;yyyy-MM-dd HH:mm&quot;);
		hl7Formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMddHHmm&quot;);	
	} 
	// ISO Date Format: yyyy-MM-dd
	else if ( isoDateString != null &amp;&amp; isoDateString.length == 10 ) {
		isoFormatter = new Packages.java.text.SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
		hl7Formatter = new Packages.java.text.SimpleDateFormat(&quot;yyyyMMdd&quot;);	
	}
	// None of the above, return original date string.
	else dateString = isoDateString;

	try {
		if (isoFormatter) {
			hl7Date = isoFormatter.parse(isoDateString);
			hl7Date = hl7Formatter.format(hl7Date);
			dateString = new String(hl7Date);
		}
	} catch (err) {
		dateString = isoDateString;
	} finally {
		return dateString;
	}
}</code>
        </codeTemplate>
        <codeTemplate version="3.4.1">
          <id>4cb42e06-7c9a-4fd2-bcb5-b9f4053a9c19</id>
          <name>Get Segments After a Particular Segment</name>
          <revision>1</revision>
          <lastModified>
            <time>1512397292339</time>
            <timezone>America/New_York</timezone>
          </lastModified>
          <type>FUNCTION</type>
          <contextSet>
            <delegate>
              <contextType>DESTINATION_DISPATCHER</contextType>
              <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
              <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
              <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              <contextType>SOURCE_RECEIVER</contextType>
            </delegate>
          </contextSet>
          <code>/**
	Returns an array of segments with the specified name that come after a given segment in the message.
*/
/*
	Author: Nick Rupley
	Date Modified: 2/13/2013
	getSegmentsAfter: Returns an array of segments with the specified name that come after a given segment in the message.

	Arguments
	---------
		Required
		--------
			root:			The root HL7Message node of the message, or the parent of the segment node.
			startSeg:		The segment AFTER which to start collecting segments.
			segName:		The name (String or RegExp) of the segments you want to collect.

		Optional
		--------
			consecutiveInd:	If true, indicates that the segments are expected to come directly after startSeg. 
							If false, segments are collected until another segment with the same name as startSeg is encountered.
							Defaults to false.
			stopSegNames:	An array of segment names that, when encountered, stop the collection of segments.
*/

function getSegmentsAfter(root, startSeg, segName, consecutiveInd, stopSegNames) {
	function test(str) {
		return segName instanceof RegExp ? segName.test(str) : segName === str;
	}

	// The index to start collection is the next one up from the starting segment
	var index = startSeg.childIndex()+1;
	// The return array
	var out = [];
	// Boolean placeholder to stop iteration
	var done = false;
	// Object that will contain all of the stopSegNames strings, bound to a truthy value (1)
	var stopNames = {};
	// Indicates whether we have any stop segments
	var stopNamesInd = false;
	// If stopSegNames is defined
	if (stopSegNames !== undefined &amp;&amp; stopSegNames !== null) {
		// Set our indicator to true
		stopNamesInd = true;
		// Add each string in the array to our object
		for each (name in stopSegNames)
			stopNames[name] = 1;
	}

	// Iterate through each child in the root, starting at the segment after startSeg, and
	// ending at the final segment, or when the done flag is set to true.
	while (index &lt; root.children().length() &amp;&amp; !done) {
		// If a stop segment is encountered, stop iteration
		if (stopNamesInd &amp;&amp; root.children()[index].name().toString() in stopNames)
			done = true;
		// If a segment with the same name as startSeg is encountered, stop iteration
		else if (root.children()[index].name().toString() == startSeg.name().toString() &amp;&amp; !consecutiveInd)
			done = true;
		// If we&apos;re only collecting consecutive segments and we encounter a segment with a name other than segName, stop iteration
		else if (!test(root.children()[index].name().toString()) &amp;&amp; consecutiveInd)
			done = true;
		// If all previous tests passed, and the current segment has a name of segName, then add it to our array
		else if (test(root.children()[index].name().toString()))
			out.push(root.children()[index]);
		// Increment our index counter
		index++;
	}

	// Return the output array
	return out;
}</code>
        </codeTemplate>
      </codeTemplates>
    </codeTemplateLibrary>
  </codeTemplateLibraries>
</channel>